<?xml version="1.0" encoding="UTF-8"?>
<ttFont sfntVersion="\x00\x01\x00\x00" ttLibVersion="4.13">

  <TSI1>

    <glyphProgram name=".notdef">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 0
SHP[2], 4
CALL[], 1, 2, 114
SHP[2], 7
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="A">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 0, 8, 114
SHP[2], 4
MDAP[R], 4
CALL[], 1, 2, 114
SHP[2], 6
SRP1[], 0
IP[], 8
MDAP[R], 8
SHP[1], 9
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="A.ss01">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 0
SHP[2], 11
CALL[], 5, 3, 114
SHP[2], 15
SRP1[], 0
IP[], 20
MDAP[R], 20
SHP[1], 21
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="AE">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 0, 8, 114
SHP[2], 18
SRP1[], 18
SHP[1], 15
CALL[], 1, 2, 114
SHP[2], 20
SRP1[], 0
IP[], 14
IP[], 7
MDAP[R], 14
MDAP[R], 7
SRP1[], 14
SHP[1], 11
SRP1[], 7
SHP[1], 8
SHP[2], 19
SRP1[], 19
SHP[1], 2
SHP[2], 22
SRP1[], 22
SHP[1], 3
SRP1[], 3
SHP[1], 5
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="AE.ss01">
/* VTT 6.32 compiler */
SVTCA[Y]
MIAP[R], 16, 18
SHP[1], 0
SHP[2], 9
CALL[], 20, 2, 114
SHP[2], 1
SRP2[], 16
IP[], 12
IP[], 8
MDAP[R], 12
MDAP[R], 8
SRP1[], 12
SHP[1], 13
SRP1[], 8
SHP[1], 5
SRP1[], 20
SHP[1], 23
SRP1[], 23
SHP[1], 4
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="AEacute">
/* VTTTalk Unicode 0x1fc */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 27, 0, 0
OFFSET[R], 1871, 180, 0
SVTCA[Y]
CALL[], 23, 19, 1, 1, 57, 86
SHC[2], 4

    </glyphProgram>

    <glyphProgram name="AEacute.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 273, 0, 0
OFFSET[R], 1871, 224, 0

SVTCA[Y]
CALL[], 28, 20, 1, 1, 57, 86
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="Aacute">
/* VTTTalk Unicode 0xc1 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1, 0, 0
OFFSET[R], 1871, 44, 0
SVTCA[Y]
CALL[], 12, 1, 1, 1, 57, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="Aacute.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 247, 0, 0
OFFSET[R], 1871, 102, 0

SVTCA[Y]
CALL[], 24, 5, 1, 1, 57, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="Abreve">
/* VTTTalk Unicode 0x102 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1, 0, 0
OFFSET[R], 1878, 44, 0
SVTCA[Y]
CALL[], 12, 1, 1, 1, 54, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="Abreve.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 247, 0, 0
OFFSET[R], 1878, 102, 0

SVTCA[Y]
CALL[], 24, 5, 1, 1, 45, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="Acircumflex">
/* VTTTalk Unicode 0xc2 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1, 0, 0
OFFSET[R], 1875, 44, 0
SVTCA[Y]
CALL[], 12, 1, 1, 1, 57, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="Acircumflex.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 247, 0, 0
OFFSET[R], 1875, 102, 0

SVTCA[Y]
CALL[], 24, 5, 1, 1, 45, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="Adieresis">
/* VTTTalk Unicode 0xc4 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1, 0, 0
OFFSET[R], 1863, 44, 0
SVTCA[Y]
CALL[], 12, 1, 1, 1, 70, 86
SHC[2], 2
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="Adieresis.alt">
/* VTT 6.32 compiler */
SVTCA[Y]
MIAP[R], 0, 8
SHP[2], 4
MDAP[R], 4
CALL[], 1, 2, 114
SHP[2], 5
SRP2[], 0
IP[], 8
MDAP[R], 8
SHP[1], 9
SRP1[], 1
SHP[1], 18
MDAP[R], 18
SHP[1], 12
SHP[1], 30
MDAP[R], 30
SHP[1], 24
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="Adieresis.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 247, 0, 0
OFFSET[R], 1863, 102, 0



SVTCA[Y]
MDAP[R], 5
MDRP[m&gt;RWh], 24
MDRP[m&gt;RWh], 36

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="Agrave">
/* VTTTalk Unicode 0xc0 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1, 0, 0
OFFSET[R], 1869, 44, 0
SVTCA[Y]
CALL[], 12, 1, 1, 1, 57, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="Agrave.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 247, 0, 0
OFFSET[R], 1869, 102, 0

SVTCA[Y]
CALL[], 24, 5, 1, 1, 57, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="Amacron">
/* VTTTalk Unicode 0x100 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1, 0, 0
OFFSET[R], 1883, 44, 0
SVTCA[Y]
CALL[], 12, 1, 1, 1, 102, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="Amacron.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 247, 0, 0
OFFSET[R], 1883, 102, 0



SVTCA[Y]
MDAP[R], 5
MDRP[m&gt;RWh], 24

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="Aogonek">
/* VTTTalk Unicode 0x104 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1, 0, 0
OFFSET[R], 1843, 378, 0

    </glyphProgram>

    <glyphProgram name="Aogonek.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 247, 0, 0
OFFSET[R], 1843, 376, 0

    </glyphProgram>

    <glyphProgram name="Aring">
/* VTTTalk Unicode 0xc5 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1, 0, 0
OFFSET[R], 1824, 44, 183
SVTCA[Y]
CALL[], 12, 1, 1, 1, 70, 86
SHC[2], 2
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="Aring.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 247, 0, 0
OFFSET[R], 1824, 102, 183

SVTCA[Y]
CALL[], 24, 5, 1, 1, 70, 86
SHC[2], 2
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="Aringacute">
/* VTTTalk Unicode 0x1fa */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1, 0, 0
OFFSET[R], 1825, 44, 183
SVTCA[Y]
CALL[], 12, 1, 1, 1, 70, 86
SHC[2], 2
SHC[2], 3
SHC[2], 4

    </glyphProgram>

    <glyphProgram name="Aringacute.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 247, 0, 0
OFFSET[R], 1825, 102, 183

SVTCA[Y]
CALL[], 24, 5, 1, 1, 70, 86
SHC[2], 2
SHC[2], 3
SHC[2], 4

    </glyphProgram>

    <glyphProgram name="Atilde">
/* VTTTalk Unicode 0xc3 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1, 0, 0
OFFSET[R], 1879, 44, 0
SVTCA[Y]
CALL[], 12, 1, 1, 1, 69, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="Atilde.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 247, 0, 0
OFFSET[R], 1879, 102, 0

SVTCA[Y]
CALL[], 24, 5, 1, 1, 57, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="B">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 0, 8, 114
SHP[2], 18
CALL[], 1, 2, 114
SHP[2], 35
SRP1[], 0
IP[], 26
MDAP[R], 26
SHP[1], 27
SHP[1], 9
SRP1[], 9
SHP[1], 10
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="C">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 0, 9, 114
SHP[2], 27
CALL[], 10, 3, 114
SHP[2], 17
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="CR">
/* VTT 6.32 compiler */

    </glyphProgram>

    <glyphProgram name="Cacute">
/* VTTTalk Unicode 0x106 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 30, 0, 0
OFFSET[R], 1871, 108, 0
SVTCA[Y]
CALL[], 34, 10, 1, 1, 54, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="Ccaron">
/* VTTTalk Unicode 0x10c */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 30, 0, 0
OFFSET[R], 1876, 108, 0
SVTCA[Y]
CALL[], 34, 10, 1, 1, 54, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="Ccedilla">
/* VTTTalk Unicode 0xc7 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 30, 0, 0
OFFSET[R], 1842, 108, 0

    </glyphProgram>

    <glyphProgram name="Ccircumflex">
/* VTTTalk Unicode 0x108 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 30, 0, 0
OFFSET[R], 1875, 108, 0
SVTCA[Y]
CALL[], 34, 10, 1, 1, 54, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="Cdotaccent">
/* VTTTalk Unicode 0x10a */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 30, 0, 0
OFFSET[R], 1867, 108, 0

SVTCA[Y]
CALL[], 34, 10, 1, 1, 64, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="D">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 0, 8, 114
SHP[2], 11
CALL[], 1, 2, 114
SHP[2], 21
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="Dcaron">
/* VTTTalk Unicode 0x10e */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 37, 0, 0
OFFSET[R], 1876, 91, -1
SVTCA[Y]
CALL[], 22, 1, 1, 1, 56, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="Dcroat">
/* VTTTalk Unicode 0x110 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 39, 0, 0

    </glyphProgram>

    <glyphProgram name="E">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 7, 8, 114
SHP[2], 4
CALL[], 8, 2, 114
SHP[2], 11
SRP1[], 7
IP[], 3
MDAP[R], 3
SHP[1], 0
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="E.ss01">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 0, 9, 114
SHP[2], 40
CALL[], 17, 3, 114
SHP[2], 24
SRP1[], 0
IP[], 33
MDAP[R], 33
SHP[1], 30
SHP[1], 9
SRP1[], 9
SHP[1], 8
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="Eacute">
/* VTTTalk Unicode 0xc9 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 45, 0, 0
OFFSET[R], 1871, 59, 0
SVTCA[Y]
CALL[], 12, 8, 1, 1, 57, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="Eacute.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 277, 0, 0
OFFSET[R], 1871, 36, 0

SVTCA[Y]
CALL[], 47, 17, 1, 1, 55, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="Ebreve">
/* VTTTalk Unicode 0x114 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 45, 0, 0
OFFSET[R], 1878, 59, 0
SVTCA[Y]
CALL[], 12, 8, 1, 1, 54, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="Ebreve.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 277, 0, 0
OFFSET[R], 1878, 36, 0

SVTCA[Y]
CALL[], 47, 17, 1, 1, 55, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="Ecaron">
/* VTTTalk Unicode 0x11a */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 45, 0, 0
OFFSET[R], 1876, 59, 0
SVTCA[Y]
CALL[], 12, 8, 1, 1, 57, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="Ecaron.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 277, 0, 0
OFFSET[R], 1876, 36, 0

SVTCA[Y]
CALL[], 47, 17, 1, 1, 55, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="Ecircumflex">
/* VTTTalk Unicode 0xca */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 45, 0, 0
OFFSET[R], 1875, 59, 0
SVTCA[Y]
CALL[], 12, 8, 1, 1, 57, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="Ecircumflex.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 277, 0, 0
OFFSET[R], 1875, 36, 0


SVTCA[Y]
CALL[], 51, 17, 1, 1, 55, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="Edieresis">
/* VTTTalk Unicode 0xcb */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 45, 0, 0
OFFSET[R], 1863, 59, 0


SVTCA[Y]
CALL[], 12, 8, 1, 1, 57, 86
SHC[2], 2
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="Edieresis.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 277, 0, 0
OFFSET[R], 1863, 36, 0



SVTCA[Y]
MDAP[R], 17
MDRP[m&gt;RWh], 47
MDRP[m&gt;RWh], 59

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="Edotaccent">
/* VTTTalk Unicode 0x116 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 45, 0, 0
OFFSET[R], 1867, 59, 0



SVTCA[Y]
CALL[], 12, 8, 1, 1, 57, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="Edotaccent.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 277, 0, 0
OFFSET[R], 1867, 36, 0



SVTCA[Y]
MDAP[R], 17
MDRP[m&gt;RWh], 47

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="Egrave">
/* VTTTalk Unicode 0xc8 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 45, 0, 0
OFFSET[R], 1869, 59, 0
SVTCA[Y]
CALL[], 12, 8, 1, 1, 57, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="Egrave.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 277, 0, 0
OFFSET[R], 1869, 36, 0

SVTCA[Y]
CALL[], 47, 17, 1, 1, 57, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="Emacron">
/* VTTTalk Unicode 0x112 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 45, 0, 0
OFFSET[R], 1883, 59, 0
SVTCA[Y]
CALL[], 12, 8, 1, 1, 102, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="Emacron.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 277, 0, 0
OFFSET[R], 1883, 36, 0




SVTCA[Y]
MDAP[R], 17
MDRP[m&gt;RWh], 47

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="Eng">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 0, 8, 114
CALL[], 1, 2, 114
SHP[2], 5
SHP[2], 19
MDAP[R], 8
SHP[1], 15
IP[], 4
IP[], 3
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="Eng.ss01">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 0, 3, 114
SHP[2], 20
CALL[], 27, 2, 114
MDAP[R], 7
SHP[1], 14
MIAP[R], 25, 8
SRP2[], 0
SLOOP[], 3
IP[], 23, 28, 29
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="Eogonek">
/* VTTTalk Unicode 0x118 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 45, 0, 0
OFFSET[R], 1843, 298, 0

    </glyphProgram>

    <glyphProgram name="Eogonek.ss01">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 0
SHP[2], 61
CALL[], 10, 9, 114
SHP[2], 50
SRP1[], 50
SHP[1], 6
SRP1[], 6
SHP[1], 7
CALL[], 27, 3, 114
SHP[2], 34
SRP2[], 10
IP[], 42
MDAP[R], 42
SHP[1], 41
SRP1[], 41
SHP[1], 18
SRP1[], 18
SHP[1], 19
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="Eth">
/* VTTTalk Unicode 0xd0 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 37, 0, 0
OFFSET[R], 1890, -100, -1

    </glyphProgram>

    <glyphProgram name="Euro">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 8, 13, 114
SHP[2], 35
CALL[], 18, 5, 114
SHP[2], 25
SRP2[], 8
IP[], 4
MDAP[R], 4
SHP[1], 5
MDRP[m&gt;RWh], 1
SHP[2], 0
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="F">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 5, 8, 114
CALL[], 6, 2, 114
SHP[2], 9
SRP1[], 5
IP[], 3
MDAP[R], 3
SHP[1], 0
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="F.ss01">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 0
CALL[], 4, 3, 114
SHP[2], 11
SRP1[], 0
IP[], 16
MDAP[R], 16
SHP[1], 17
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="G">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 0, 9, 114
SHP[2], 27
SHP[2], 34
SRP1[], 34
SHP[1], 30
CALL[], 10, 3, 114
SHP[2], 17
SRP2[], 0
IP[], 35
MDAP[R], 35
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="G.ss01">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 0, 9, 114
SHP[2], 27
SHP[2], 34
MDAP[R], 34
CALL[], 10, 3, 114
SHP[2], 17
SRP2[], 0
IP[], 37
MDAP[R], 37
IP[], 31
IP[], 30
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="Gbreve">
/* VTTTalk Unicode 0x11e */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 71, 0, 0
OFFSET[R], 1878, 102, -1
SVTCA[Y]
CALL[], 38, 10, 1, 1, 50, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="Gbreve.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 301, 0, 0
OFFSET[R], 1878, 102, 0

SVTCA[Y]
CALL[], 40, 10, 1, 1, 50, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="Gcaron">
/* VTTTalk Unicode 0x1e6 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 71, 0, 0
OFFSET[R], 1876, 102, -1
SVTCA[Y]
CALL[], 38, 10, 1, 1, 53, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="Gcaron.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 301, 0, 0
OFFSET[R], 1876, 102, 0


SVTCA[Y]
CALL[], 40, 10, 1, 1, 50, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="Gcircumflex">
/* VTTTalk Unicode 0x11c */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 71, 0, 0
OFFSET[R], 1875, 102, -1
SVTCA[Y]
CALL[], 38, 10, 1, 1, 53, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="Gcircumflex.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 301, 0, 0
OFFSET[R], 1875, 102, 0

SVTCA[Y]
CALL[], 40, 10, 1, 1, 50, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="Gdotaccent">
/* VTTTalk Unicode 0x120 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 71, 0, 0
OFFSET[R], 1867, 102, -1
SVTCA[Y]
CALL[], 38, 10, 1, 1, 70, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="Gdotaccent.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 301, 0, 0
OFFSET[R], 1867, 102, 0



SVTCA[Y]
MDAP[R], 10
MDRP[m&gt;RWh], 40

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="H">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 5, 8, 114
SHP[2], 2
CALL[], 6, 2, 114
SHP[2], 0
SRP1[], 5
IP[], 9
MDAP[R], 9
SHP[1], 10
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="Hbar">
/* VTTTalk Unicode 0x126 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 79, 0, 0
OFFSET[R], 1847, 8, 97

    </glyphProgram>

    <glyphProgram name="Hcircumflex">
/* VTTTalk Unicode 0x124 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 79, 0, 0
OFFSET[R], 1875, 108, 0
SVTCA[Y]
CALL[], 12, 6, 1, 1, 57, 86
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="I">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 0, 8, 114
CALL[], 1, 2, 114
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="I.ss01">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 4
SHP[1], 5
SRP1[], 5
SHP[1], 0
CALL[], 9, 2, 114
SHP[2], 8
SRP1[], 8
SHP[1], 1
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="IJ">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 0, 9, 114
SHP[2], 7
CALL[], 18, 2, 114
SHP[2], 12
MDRP[m&gt;RBl], 17
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="IJ.ss01">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 0
SHP[2], 7
CALL[], 11, 2, 114
SHP[2], 19
MIAP[R], 18, 2
SHP[1], 17
RUTG[]
MDAP[R], 17
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="Iacute">
/* VTTTalk Unicode 0xcd */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 85, 0, 0
OFFSET[R], 1871, -157, 0
SVTCA[Y]
CALL[], 4, 1, 1, 1, 57, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="Iacute.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 309, 0, 0
OFFSET[R], 1871, -89, 0

SVTCA[Y]
CALL[], 12, 9, 1, 1, 57, 86
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="Iacute_J.loclNLD">
/* VTT 6.32 compiler */
SVTCA[Y]
MIAP[R], 0, 19
SHP[2], 7
CALL[], 18, 2, 114
SHP[2], 11
MDRP[m&gt;RBl], 17
MDRP[M&gt;RWh], 21
SHP[2], 25
SMD[], 128
MDRP[m&gt;RBl], 22
SHP[2], 26
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="Iacute_J.loclNLD.ss01">
/* VTT 6.32 compiler */
SVTCA[Y]
MIAP[R], 0, 9
SHP[2], 7
CALL[], 11, 2, 114
SHP[2], 19
SRP1[], 19
SHP[1], 17
RUTG[]
MDAP[R], 17
RTG[]
SRP0[], 11
MDRP[M&gt;RWh], 28
SHP[2], 24
SMD[], 128
MDRP[m&gt;RBl], 26
SHP[2], 23
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="Ibreve">
/* VTTTalk Unicode 0x12c */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 85, 0, 0
OFFSET[R], 1878, -157, 0
SVTCA[Y]
CALL[], 4, 1, 1, 1, 54, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="Ibreve.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 309, 0, 0
OFFSET[R], 1878, -89, 0


SVTCA[Y]
CALL[], 12, 9, 1, 1, 57, 86
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="Icircumflex">
/* VTTTalk Unicode 0xce */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 85, 0, 0
OFFSET[R], 1875, -157, 0
SVTCA[Y]
CALL[], 4, 1, 1, 1, 57, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="Icircumflex.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 309, 0, 0
OFFSET[R], 1875, -89, 0



SVTCA[Y]
CALL[], 12, 9, 1, 1, 57, 86
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="Idieresis">
/* VTTTalk Unicode 0xcf */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 85, 0, 0
OFFSET[R], 1863, -157, 0

SVTCA[Y]
CALL[], 4, 1, 1, 1, 65, 86
SHC[2], 1
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="Idieresis.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 309, 0, 0
OFFSET[R], 1863, -89, 0

SVTCA[Y]
CALL[], 12, 9, 1, 1, 70, 86
SHC[2], 3
SHC[2], 4

    </glyphProgram>

    <glyphProgram name="Idotaccent">
/* VTTTalk Unicode 0x130 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 85, 0, 0
OFFSET[R], 1867, -157, 0
SVTCA[Y]
CALL[], 4, 1, 1, 1, 65, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="Idotaccent.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 309, 0, 0
OFFSET[R], 1867, -89, 0



SVTCA[Y]
CALL[], 12, 9, 1, 1, 70, 86
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="Igrave">
/* VTTTalk Unicode 0xcc */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 85, 0, 0
OFFSET[R], 1869, -157, 0
SVTCA[Y]
CALL[], 4, 1, 1, 1, 57, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="Igrave.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 309, 0, 0
OFFSET[R], 1869, -89, 0



SVTCA[Y]
CALL[], 12, 9, 1, 1, 57, 86
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="Imacron">
/* VTTTalk Unicode 0x12a */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 85, 0, 0
OFFSET[R], 1893, -157, 1
SVTCA[Y]
CALL[], 4, 1, 1, 1, 103, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="Imacron.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 309, 0, 0
OFFSET[R], 1883, -89, 0



SVTCA[Y]
CALL[], 12, 9, 1, 1, 70, 86
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="Iogonek">
/* VTTTalk Unicode 0x12e */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 85, 0, 0
OFFSET[R], 1895, -148, 0

    </glyphProgram>

    <glyphProgram name="Iogonek.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 309, 0, 0
OFFSET[R], 1895, -80, 0

    </glyphProgram>

    <glyphProgram name="Itilde">
/* VTTTalk Unicode 0x128 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 85, 0, 0
OFFSET[R], 1879, -157, 0
SVTCA[Y]
CALL[], 4, 1, 1, 1, 69, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="Itilde.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 309, 0, 0
OFFSET[R], 1879, -89, 0



SVTCA[Y]
CALL[], 12, 9, 1, 1, 60, 86
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="J">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 0, 9, 114
CALL[], 12, 2, 114
SHP[2], 11
SRP1[], 0
SHP[1], 7
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="J.ss01">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 0
SHP[2], 7
CALL[], 12, 2, 114
SHP[2], 11
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="Jcircumflex">
/* VTTTalk Unicode 0x134 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 101, 0, 0
OFFSET[R], 1875, -91, 0
SVTCA[Y]
CALL[], 17, 12, 1, 1, 57, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="Jcircumflex.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 326, 0, 0
OFFSET[R], 1875, -91, 0



SVTCA[Y]
CALL[], 17, 12, 1, 1, 57, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="K">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 6, 8, 114
SHP[2], 10
CALL[], 7, 2, 114
SHP[2], 2
SRP2[], 6
SLOOP[], 6
IP[], 0, 1, 5, 4, 11, 12
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="L">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 0, 8, 114
CALL[], 1, 2, 114
SRP1[], 0
SHP[1], 3
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="Lacute">
/* VTTTalk Unicode 0x139 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 107, 0, 0
OFFSET[R], 1871, -157, 0
SVTCA[Y]
CALL[], 6, 1, 1, 1, 57, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="Lcaron">
/* VTTTalk Unicode 0x13d */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 107, 0, 0
OFFSET[R], 1819, 146, 0

SVTCA[Y]
CALL[], 7, 1, 1, 1, 20, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="Ldot">
/* VTTTalk Unicode 0x13f */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 107, 0, 0
OFFSET[R], 1622, 257, -61

    </glyphProgram>

    <glyphProgram name="Lslash">
/* VTTTalk Unicode 0x141 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 107, 0, 0
OFFSET[R], 1891, -10, -17

    </glyphProgram>

    <glyphProgram name="M">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 0, 8, 114
SHP[2], 8
CALL[], 1, 2, 114
SHP[2], 6
SRP2[], 0
SLOOP[], 4
IP[], 12, 3, 9, 13
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="M.ss01">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 0, 3, 114
SHP[2], 9
SHP[2], 26
SHP[2], 31
SRP1[], 31
SHP[1], 18
MDAP[R], 4
SHP[1], 14
SHP[1], 24
IP[], 34
IP[], 28
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="N">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 0, 8, 114
SHP[2], 8
CALL[], 1, 2, 114
SHP[2], 6
SRP2[], 0
IP[], 4
IP[], 9
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="N.ss01">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 0, 3, 114
SHP[2], 16
SHP[2], 9
SRP1[], 9
SHP[1], 17
MDAP[R], 4
SHP[1], 14
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="NULL">
/* VTT 6.32 compiler */

    </glyphProgram>

    <glyphProgram name="Nacute">
/* VTTTalk Unicode 0x143 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 119, 0, 0
OFFSET[R], 1871, 108, 0
SVTCA[Y]
CALL[], 12, 1, 1, 1, 57, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="Nacute.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 332, 0, 0
OFFSET[R], 1871, 103, 0



SVTCA[Y]
CALL[], 21, 0, 1, 1, 57, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="Napostrophe">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

OFFSET[R], 1796, -58, 0
OFFSET[R], 119, 22, 0
SVTCA[Y]
CALL[], 8, 18, 0, 0, 45, 86
SHC[2], 0

    </glyphProgram>

    <glyphProgram name="Ncaron">
/* VTTTalk Unicode 0x147 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 119, 0, 0
OFFSET[R], 1876, 108, 0
SVTCA[Y]
CALL[], 12, 1, 1, 1, 57, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="Ncaron.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 332, 0, 0
OFFSET[R], 1876, 103, 0




SVTCA[Y]
CALL[], 21, 0, 1, 1, 57, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="Ntilde">
/* VTTTalk Unicode 0xd1 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 119, 0, 0
OFFSET[R], 1879, 108, 0
SVTCA[Y]
CALL[], 12, 5, 1, 1, 69, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="Ntilde.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 332, 0, 0
OFFSET[R], 1879, 103, 0



SVTCA[Y]
CALL[], 21, 0, 1, 1, 57, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="O">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 0, 9, 114
CALL[], 10, 3, 114
SHP[2], 30
SRP1[], 0
SHP[1], 20
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="OE">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 9, 2, 114
SHP[2], 30
SHP[2], 10
SRP1[], 10
SHP[1], 33
MIAP[R], 29, 8
SHP[1], 20
SHP[1], 21
SHP[1], 26
IP[], 25
MDAP[R], 25
SHP[1], 22
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="Oacute">
/* VTTTalk Unicode 0xd3 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 130, 0, 0
OFFSET[R], 1871, 118, 0
SVTCA[Y]
CALL[], 40, 10, 1, 1, 54, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="Obreve">
/* VTTTalk Unicode 0x14e */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 130, 0, 0
OFFSET[R], 1878, 118, 0
SVTCA[Y]
CALL[], 40, 10, 1, 1, 51, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="Ocircumflex">
/* VTTTalk Unicode 0xd4 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 130, 0, 0
OFFSET[R], 1875, 118, 0
SVTCA[Y]
CALL[], 40, 10, 1, 1, 54, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="Odieresis">
/* VTTTalk Unicode 0xd6 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 130, 0, 0
OFFSET[R], 1863, 118, 0


SVTCA[Y]
MDAP[R], 10
MDRP[m&gt;RWh], 40
MDRP[m&gt;RWh], 52

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="Ograve">
/* VTTTalk Unicode 0xd2 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 130, 0, 0
OFFSET[R], 1869, 118, 0
SVTCA[Y]
CALL[], 40, 10, 1, 1, 54, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="Ohorn">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 0, 9, 114
SHP[2], 39
CALL[], 10, 3, 114
SHP[2], 49
SRP1[], 49
SHP[1], 26
SRP1[], 26
SHP[1], 13
SRP1[], 13
SHP[1], 20
SRP1[], 20
SHP[1], 19
SRP1[], 49
SHP[1], 29
SRP1[], 29
SHP[1], 30
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="Ohungarumlaut">
/* VTTTalk Unicode 0x150 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 130, 0, 0
OFFSET[R], 1874, 118, 0

SVTCA[Y]
CALL[], 43, 10, 1, 1, 50, 86
SHC[2], 2
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="Omacron">
/* VTTTalk Unicode 0x14c */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 130, 0, 0
OFFSET[R], 1883, 118, 0

SVTCA[Y]
CALL[], 40, 10, 1, 1, 85, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="Oslash">
/* VTTTalk Unicode 0xd8 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 130, 0, 0
OFFSET[R], 1892, 9, 0

    </glyphProgram>

    <glyphProgram name="Oslashacute">
/* VTTTalk Unicode 0x1fe */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 158, 0, 0
OFFSET[R], 1871, 118, 0
SVTCA[Y]
CALL[], 44, 10, 1, 1, 54, 86
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="Otilde">
/* VTTTalk Unicode 0xd5 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 130, 0, 0
OFFSET[R], 1879, 118, 0
SVTCA[Y]
CALL[], 40, 10, 1, 1, 66, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="P">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 0, 8, 114
CALL[], 1, 2, 114
SHP[2], 23
SRP1[], 0
IP[], 11
MDAP[R], 11
SHP[1], 15
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="Q">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 0, 9, 114
SHP[2], 35
SRP2[], 35
IP[], 26
IP[], 25
CALL[], 10, 3, 114
SHP[2], 45
MDAP[R], 20
SHP[1], 30
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="Q.ss01">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 8, 9, 114
MDRP[m&gt;RBl], 0
SHP[1], 28
SRP0[], 28
MDRP[m&gt;RBl], 3
CALL[], 18, 3, 114
SHP[2], 38
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="Q.ss01.BRACKET.170">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 4, 9, 114
MDRP[m&gt;RBl], 0
SHP[1], 1
SHP[1], 24
CALL[], 14, 3, 114
SHP[2], 34
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="R">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 0, 8, 114
SHP[2], 14
CALL[], 1, 2, 114
SHP[2], 27
SRP1[], 0
IP[], 11
MDAP[R], 11
SHP[1], 15
SHP[1], 19
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="Racute">
/* VTTTalk Unicode 0x154 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 168, 0, 0
OFFSET[R], 1871, 66, 0
SVTCA[Y]
CALL[], 29, 1, 1, 1, 57, 86
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="Rcaron">
/* VTTTalk Unicode 0x158 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 168, 0, 0
OFFSET[R], 1876, 66, 0
SVTCA[Y]
CALL[], 29, 1, 1, 1, 57, 86
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="S">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 0, 9, 114
SHP[2], 7
CALL[], 23, 3, 114
SHP[2], 30
SRP2[], 0
SLOOP[], 4
IP[], 42, 11, 34, 19
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="Sacute">
/* VTTTalk Unicode 0x15a */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 176, 0, 0
OFFSET[R], 1871, 18, 0
SVTCA[Y]
CALL[], 46, 23, 1, 1, 54, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="Scaron">
/* VTTTalk Unicode 0x160 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 176, 0, 0
OFFSET[R], 1876, 18, 0
SVTCA[Y]
CALL[], 46, 23, 1, 1, 54, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="Scedilla">
/* VTTTalk Unicode 0x15e */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 176, 0, 0
OFFSET[R], 1842, 18, 0

    </glyphProgram>

    <glyphProgram name="Scircumflex">
/* VTTTalk Unicode 0x15c */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 176, 0, 0
OFFSET[R], 1875, 18, 0
SVTCA[Y]
CALL[], 46, 23, 1, 1, 54, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="T">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 0, 8, 114
CALL[], 3, 2, 114
SHP[2], 2
SRP1[], 2
SHP[1], 6
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="T.ss01">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 4, 3, 114
SHP[2], 11
SHP[2], 16
MDAP[R], 14
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="T_h">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 0
SHP[2], 24
SRP1[], 24
SHP[1], 14
CALL[], 3, 2, 114
SHP[2], 26
SHP[2], 2
SRP1[], 2
SHP[1], 6
CALL[], 8, 7, 114
SHP[2], 18
SRP1[], 18
SHP[1], 27
SHP[1], 28
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="Tbar">
/* VTTTalk Unicode 0x166 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 190, 0, 0
OFFSET[R], 1890, -26, -1

    </glyphProgram>

    <glyphProgram name="Tbar.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 345, 0, 0
OFFSET[R], 1890, -26, -7

    </glyphProgram>

    <glyphProgram name="Tcaron">
/* VTTTalk Unicode 0x164 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 190, 0, 0
OFFSET[R], 1876, -26, 0
SVTCA[Y]
CALL[], 8, 3, 1, 1, 57, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="Tcaron.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 345, 0, 0
OFFSET[R], 1876, -26, -1



SVTCA[Y]
CALL[], 25, 4, 1, 1, 57, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="Tdieresis">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 190, 0, 0
OFFSET[R], 1863, -26, 0




SVTCA[Y]
MDAP[R], 3
MDRP[m&gt;RWh], 8
MDRP[m&gt;RWh], 20

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="Tdieresis.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 345, 0, 0
OFFSET[R], 1863, -26, -1

SVTCA[Y]
MDAP[R], 4
MDRP[m&gt;RWh], 18
MDRP[m&gt;RWh], 30

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="Thorn">
/* VTT 6.32 compiler */
SVTCA[Y]
MIAP[R], 20, 8
MDRP[m&gt;RBl], 0
SHP[2], 1
CALL[], 21, 2, 114
MDRP[m&gt;RBl], 10
SHP[2], 9
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="U">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 0, 9, 114
SHP[2], 9
CALL[], 4, 2, 114
SHP[2], 14
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="U.ss01">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 0, 9, 114
SHP[2], 9
SHP[2], 16
MDAP[R], 16
CALL[], 4, 2, 114
SHP[2], 14
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="Uacute">
/* VTTTalk Unicode 0xda */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 197, 0, 0
OFFSET[R], 1871, 97, 0
SVTCA[Y]
CALL[], 18, 4, 1, 1, 57, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="Uacute.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 352, 0, 0
OFFSET[R], 1871, 93, 0



SVTCA[Y]
CALL[], 21, 4, 1, 1, 57, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="Ubreve">
/* VTTTalk Unicode 0x16c */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 197, 0, 0
OFFSET[R], 1878, 97, 0
SVTCA[Y]
CALL[], 18, 13, 1, 1, 54, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="Ubreve.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 352, 0, 0
OFFSET[R], 1878, 93, 0




SVTCA[Y]
CALL[], 21, 4, 1, 1, 57, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="Ucircumflex">
/* VTTTalk Unicode 0xdb */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 197, 0, 0
OFFSET[R], 1875, 97, 0
SVTCA[Y]
CALL[], 18, 4, 1, 1, 57, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="Ucircumflex.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 352, 0, 0
OFFSET[R], 1875, 93, 0



SVTCA[Y]
CALL[], 21, 4, 1, 1, 57, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="Udieresis">
/* VTTTalk Unicode 0xdc */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 197, 0, 0
OFFSET[R], 1863, 97, 0



SVTCA[Y]
MDAP[R], 4
MDRP[m&gt;RWh], 18
MDRP[m&gt;RWh], 30

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="Udieresis.alt">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 0, 9, 114
SHP[2], 9
CALL[], 4, 2, 114
SHP[2], 13
SHP[2], 24
MDAP[R], 24
SHP[1], 18
SHP[1], 36
MDAP[R], 36
SHP[1], 30
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="Udieresis.alt.BRACKET.133">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 0, 9, 114
SHP[2], 9
CALL[], 4, 2, 114
SHP[2], 13
SHP[2], 18
MDAP[R], 18
SHP[1], 24
SHP[1], 30
SRP1[], 30
SHP[1], 36
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="Udieresis.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 352, 0, 0
OFFSET[R], 1863, 93, 0



SVTCA[Y]
MDAP[R], 4
MDRP[m&gt;RWh], 21
MDRP[m&gt;RWh], 33

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="Udieresis.ss01.alt">
/* VTT 6.32 compiler */
SVTCA[Y]
MIAP[R], 0, 9
SHP[2], 9
SRP1[], 9
SHP[1], 17
CALL[], 4, 2, 114
SHP[2], 13
SHP[2], 27
MDAP[R], 27
SHP[1], 21
SHP[1], 39
MDAP[R], 39
SHP[1], 33
MIAP[R], 16, 8
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="Udieresis.ss01.alt.BRACKET.133">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 0, 9, 114
SHP[2], 9
CALL[], 4, 2, 114
SHP[2], 13
SHP[2], 21
MDAP[R], 21
SHP[1], 27
SHP[1], 33
SRP1[], 33
SHP[1], 39
MIAP[R], 16, 8
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="Ugrave">
/* VTTTalk Unicode 0xd9 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 197, 0, 0
OFFSET[R], 1869, 97, 0
SVTCA[Y]
CALL[], 18, 13, 1, 1, 57, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="Ugrave.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 352, 0, 0
OFFSET[R], 1869, 93, 0




SVTCA[Y]
CALL[], 21, 4, 1, 1, 57, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="Uhorn">
/* VTTTalk Unicode 0x1af */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 197, 0, 0
OFFSET[R], 1838, 372, 183
SVTCA[Y]
CALL[], 19, 13, 0, 0, 0, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="Uhorn.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 352, 0, 0
OFFSET[R], 1838, 368, 183

SVTCA[Y]
CALL[], 22, 13, 0, 0, 0, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="Uhungarumlaut">
/* VTTTalk Unicode 0x170 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 197, 0, 0
OFFSET[R], 1874, 97, 0


SVTCA[Y]
CALL[], 18, 13, 1, 1, 53, 86
SHC[2], 1
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="Uhungarumlaut.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 352, 0, 0
OFFSET[R], 1874, 93, 0




SVTCA[Y]
CALL[], 21, 4, 1, 1, 57, 86
SHC[2], 1
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="Umacron">
/* VTTTalk Unicode 0x16a */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 197, 0, 0
OFFSET[R], 1883, 97, 0


SVTCA[Y]
CALL[], 18, 13, 1, 1, 85, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="Umacron.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 352, 0, 0
OFFSET[R], 1883, 93, 0


SVTCA[Y]
CALL[], 21, 4, 1, 1, 65, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="Uogonek">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 30, 9, 114
SHP[2], 19
MDAP[R], 19
SHP[1], 12
SHP[2], 39
SRP1[], 39
SHP[1], 27
SRP1[], 27
SHP[1], 26
SRP1[], 26
SHP[1], 5
CALL[], 34, 2, 114
SHP[2], 0
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="Uogonek.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 352, 0, 0
OFFSET[R], 1843, 362, 0

    </glyphProgram>

    <glyphProgram name="Uring">
/* VTTTalk Unicode 0x16e */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 197, 0, 0
OFFSET[R], 1824, 97, 183
SVTCA[Y]
CALL[], 18, 13, 1, 1, 80, 86
SHC[2], 1
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="Uring.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 352, 0, 0
OFFSET[R], 1824, 93, 183

SVTCA[Y]
CALL[], 21, 4, 1, 1, 70, 86
SHC[2], 1
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="Ustraitcy">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 0, 8, 114
CALL[], 3, 2, 114
SHP[2], 8
SRP2[], 0
SLOOP[], 6
IP[], 9, 2, 1, 10, 6, 5
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="Ustraitstrokecy">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 4, 8, 114
CALL[], 7, 2, 114
SHP[2], 12
SRP1[], 4
IP[], 0
MDAP[R], 0
SHP[1], 1
SRP1[], 4
SLOOP[], 6
IP[], 6, 13, 5, 14, 10, 9
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="Utilde">
/* VTTTalk Unicode 0x168 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 197, 0, 0
OFFSET[R], 1879, 97, 0
SVTCA[Y]
CALL[], 18, 13, 1, 1, 69, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="Utilde.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 352, 0, 0
OFFSET[R], 1879, 93, 0

SVTCA[Y]
CALL[], 21, 4, 1, 1, 70, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="V">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 0, 8, 114
SHP[2], 4
CALL[], 1, 2, 114
SHP[2], 6
SRP2[], 0
IP[], 3
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="W">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 0, 8, 114
SHP[2], 4
SHP[2], 12
CALL[], 1, 2, 114
SHP[2], 6
SHP[2], 10
SRP2[], 0
SLOOP[], 3
IP[], 3, 8, 14
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="W.ss01">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 0
SHP[2], 9
SRP1[], 9
SHP[1], 30
CALL[], 4, 2, 114
SHP[2], 14
SHP[2], 23
SRP1[], 0
IP[], 27
MDAP[R], 27
SHP[1], 18
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="Wacute">
/* VTTTalk Unicode 0x1e82 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 222, 0, 0
OFFSET[R], 1871, 240, 0
SVTCA[Y]
CALL[], 16, 5, 1, 1, 57, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="Wacute.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 376, 0, 0
OFFSET[R], 1871, 305, 0


SVTCA[Y]
CALL[], 34, 4, 1, 1, 55, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="Wcircumflex">
/* VTTTalk Unicode 0x174 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 222, 0, 0
OFFSET[R], 1875, 240, 0
SVTCA[Y]
CALL[], 16, 5, 1, 1, 57, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="Wcircumflex.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 376, 0, 0
OFFSET[R], 1875, 305, 0



SVTCA[Y]
CALL[], 34, 4, 1, 1, 55, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="Wdieresis">
/* VTTTalk Unicode 0x1e84 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 222, 0, 0
OFFSET[R], 1863, 240, 0


SVTCA[Y]
MDAP[R], 1
MDRP[m&gt;RWh], 16
MDRP[m&gt;RWh], 28

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="Wdieresis.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 376, 0, 0
OFFSET[R], 1863, 305, 0



SVTCA[Y]
MDAP[R], 4
MDRP[m&gt;RWh], 34
MDRP[m&gt;RWh], 46

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="Wgrave">
/* VTTTalk Unicode 0x1e80 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 222, 0, 0
OFFSET[R], 1869, 240, 0
SVTCA[Y]
CALL[], 16, 5, 1, 1, 57, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="Wgrave.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 376, 0, 0
OFFSET[R], 1869, 305, 0



SVTCA[Y]
CALL[], 34, 4, 1, 1, 55, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="X">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 0, 8, 114
SHP[2], 12
CALL[], 3, 2, 114
SHP[2], 8
SRP2[], 0
SLOOP[], 6
IP[], 13, 2, 9, 10, 1, 6
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="Y">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 0, 8, 114
CALL[], 3, 2, 114
SHP[2], 8
SRP2[], 0
SLOOP[], 6
IP[], 9, 2, 10, 1, 5, 6
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="Y.ss01">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 0
SHP[2], 7
CALL[], 19, 2, 114
SHP[2], 29
SRP1[], 0
IP[], 15
MDAP[R], 15
IP[], 10
IP[], 30
SRP2[], 0
SLOOP[], 4
IP[], 31, 9, 32, 8
SHP[1], 24
SRP1[], 24
SHP[1], 12
SHP[1], 11
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="Yacute">
/* VTTTalk Unicode 0xdd */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 228, 0, 0
OFFSET[R], 1871, 5, 0
SVTCA[Y]
CALL[], 12, 3, 1, 1, 57, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="Yacute.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 381, 0, 0
OFFSET[R], 1871, 92, 0



SVTCA[Y]
CALL[], 34, 19, 1, 1, 55, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="Ycircumflex">
/* VTTTalk Unicode 0x176 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 228, 0, 0
OFFSET[R], 1875, 5, 0
SVTCA[Y]
CALL[], 12, 3, 1, 1, 57, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="Ycircumflex.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 381, 0, 0
OFFSET[R], 1875, 92, 0




SVTCA[Y]
CALL[], 34, 19, 1, 1, 55, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="Ydieresis">
/* VTTTalk Unicode 0x178 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 228, 0, 0
OFFSET[R], 1863, 5, 0
SVTCA[Y]
CALL[], 12, 7, 1, 1, 65, 86
SHC[2], 1
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="Ydieresis.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 381, 0, 0
OFFSET[R], 1863, 92, 0



SVTCA[Y]
CALL[], 34, 19, 1, 1, 55, 86
SHC[2], 1
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="Ygrave">
/* VTTTalk Unicode 0x1ef2 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 228, 0, 0
OFFSET[R], 1869, 5, 0
SVTCA[Y]
CALL[], 12, 7, 1, 1, 57, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="Ygrave.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 381, 0, 0
OFFSET[R], 1869, 92, 0

SVTCA[Y]
CALL[], 34, 19, 1, 1, 57, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="Z">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 0, 8, 114
SHP[2], 9
SRP1[], 9
SHP[1], 1
SHP[1], 8
CALL[], 5, 2, 114
SHP[2], 3
SRP1[], 3
SHP[1], 2
SHP[1], 7
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="Z.ss01">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 0
SHP[2], 9
SRP1[], 9
SHP[1], 1
SHP[1], 8
CALL[], 5, 2, 114
SHP[2], 4
SRP1[], 4
SHP[1], 7
SRP1[], 7
SHP[1], 2
SRP1[], 0
IP[], 12
MDAP[R], 12
SHP[1], 13
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="Zacute">
/* VTTTalk Unicode 0x179 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 238, 0, 0
OFFSET[R], 1871, 25, 0
SVTCA[Y]
CALL[], 12, 5, 1, 1, 57, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="Zacute.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 391, 0, 0
OFFSET[R], 1871, 25, 0

SVTCA[Y]
CALL[], 20, 5, 1, 1, 57, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="Zcaron">
/* VTTTalk Unicode 0x17d */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 238, 0, 0
OFFSET[R], 1876, 25, 0
SVTCA[Y]
CALL[], 12, 5, 1, 1, 57, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="Zcaron.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 391, 0, 0
OFFSET[R], 1876, 25, 0

SVTCA[Y]
CALL[], 20, 5, 1, 1, 60, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="Zdotaccent">
/* VTTTalk Unicode 0x17b */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 238, 0, 0
OFFSET[R], 1867, 25, 0




SVTCA[Y]
MDAP[R], 5
MDRP[m&gt;RWh], 12

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="Zdotaccent.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 391, 0, 0
OFFSET[R], 1867, 25, 0

SVTCA[Y]
CALL[], 20, 5, 1, 1, 70, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="a">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 13, 7, 114
SHP[2], 6
MDAP[R], 17
CALL[], 18, 11, 114
SHP[2], 35
SRP2[], 13
IP[], 26
MDAP[R], 26
SHP[1], 29
SRP2[], 18
IP[], 38
IP[], 39
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="a.sc">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 0
SHP[2], 4
MIAP[R], 1, 58
SHP[1], 5
IP[], 9
MDAP[R], 9
SHP[1], 8
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="a.sc.ss01">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 0
SHP[2], 11
MIAP[R], 5, 58
SHP[1], 15
IP[], 20
MDAP[R], 20
SHP[1], 21
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="a.ss01">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 0, 11, 114
SHP[2], 16
CALL[], 8, 7, 114
SHP[2], 24
MIAP[R], 32, 10
CALL[], 36, 6, 114
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="aacute">
/* VTTTalk Unicode 0xe1 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 396, 0, 0
OFFSET[R], 1815, -27, 0

SVTCA[Y]
CALL[], 42, 13, 1, 1, 60, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="aacute.sc">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 743, 0, 0
OFFSET[R], 1815, -19, 42



SVTCA[Y]
CALL[], 12, 1, 1, 1, 75, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="aacute.sc.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 987, 0, 0
OFFSET[R], 1815, 40, 42




SVTCA[Y]
MDAP[R], 5
MDRP[m&gt;RWh], 27

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="aacute.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 643, 0, 0
OFFSET[R], 1815, 17, 0



SVTCA[Y]
MDAP[R], 8
MDRP[m&gt;RWh], 42

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="abreve">
/* VTTTalk Unicode 0x103 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 396, 0, 0
OFFSET[R], 1823, -27, 0


SVTCA[Y]
MDAP[R], 13
MDRP[m&gt;RWh], 42


IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="abreve.sc">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 743, 0, 0
OFFSET[R], 1823, -19, 42



SVTCA[Y]
MDAP[R], 1
MDRP[m&gt;RWh], 12

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="abreve.sc.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 987, 0, 0
OFFSET[R], 1823, 40, 42




SVTCA[Y]
MDAP[R], 5
MDRP[m&gt;RWh], 24

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="abreve.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 643, 0, 0
OFFSET[R], 1823, 17, 0




SVTCA[Y]
MDAP[R], 8
MDRP[m&gt;RWh], 39

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="acircumflex">
/* VTTTalk Unicode 0xe2 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 396, 0, 0
OFFSET[R], 1820, -27, 0


SVTCA[Y]
MDAP[R], 13
MDRP[m&gt;RWh], 42

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="acircumflex.sc">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 743, 0, 0
OFFSET[R], 1820, -19, 42




SVTCA[Y]
MDAP[R], 1
MDRP[m&gt;RWh], 12

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="acircumflex.sc.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 987, 0, 0
OFFSET[R], 1820, 40, 42




SVTCA[Y]
MDAP[R], 5
MDRP[m&gt;RWh], 24

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="acircumflex.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 643, 0, 0
OFFSET[R], 1820, 17, 0



SVTCA[Y]
MDAP[R], 8
MDRP[m&gt;RWh], 39

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="acute">
/* VTTTalk Unicode 0xb4 */
/* ACT generated Wed May  6 15:33:15 2020 */

OFFSET[R], 1815, 0, 0

    </glyphProgram>

    <glyphProgram name="acutecomb">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 0
DLTP1[(0 @3 8)]
SMD[], 128
MDRP[m&gt;RBl], 1
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="acutecomb.case">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1815, 0, 150

    </glyphProgram>

    <glyphProgram name="acutecomb.loclVIET">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 3
SMD[], 128
MDRP[m&gt;RBl], 1
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="adieresis">
/* VTTTalk Unicode 0xe4 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 396, 0, 0
OFFSET[R], 1807, -27, 0



SVTCA[Y]
MDAP[R], 13
MDRP[m&gt;RWh], 42
MDRP[m&gt;RWh], 54

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="adieresis.alt.sc">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 743, 0, 0
OFFSET[R], 1807, -19, 42


SVTCA[Y]
MDAP[R], 1
MDRP[m&gt;RWh], 12
MDRP[m&gt;RWh], 24

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="adieresis.sc">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 743, 0, 0
OFFSET[R], 1807, -19, 42


SVTCA[Y]
MDAP[R], 1
MDRP[m&gt;RWh], 12
MDRP[m&gt;RWh], 24

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="adieresis.sc.alt">
/* VTT 6.32 compiler */
SVTCA[Y]
MIAP[R], 25, 58
SHP[1], 29
SHP[1], 6
MDAP[R], 6
SHP[1], 0
SHP[1], 18
MDAP[R], 18
SHP[1], 12
MIAP[R], 31, 10
SHP[1], 28
SRP2[], 25
IP[], 32
MDAP[R], 32
SHP[1], 33
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="adieresis.sc.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 987, 0, 0
OFFSET[R], 1807, 40, 42




SVTCA[Y]
MDAP[R], 5
MDRP[m&gt;RWh], 24
MDRP[m&gt;RWh], 36

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="adieresis.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 643, 0, 0
OFFSET[R], 1807, 17, 0



SVTCA[Y]
MDAP[R], 8
MDRP[m&gt;RWh], 39
MDRP[m&gt;RWh], 51

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="ae">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 0, 11, 114
SHP[2], 16
CALL[], 30, 7, 114
SHP[2], 23
CALL[], 37, 7, 114
SHP[2], 53
CALL[], 69, 11, 114
SHP[2], 62
SRP1[], 37
IP[], 46
MDAP[R], 46
IP[], 74
IP[], 73
SRP2[], 37
IP[], 33
IP[], 34
SHP[1], 47
SHP[1], 9
MDAP[R], 9
SHP[1], 8
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="ae.sc">
/* VTT 6.32 compiler */
SVTCA[Y]
MIAP[R], 1, 58
SHP[1], 19
SRP1[], 19
SHP[1], 2
SRP1[], 1
SHP[1], 22
SRP1[], 22
SHP[1], 3
SRP1[], 3
SHP[1], 5
SRP1[], 5
SHP[1], 4
MIAP[R], 6, 10
MIAP[R], 18, 10
SHP[1], 15
SRP2[], 1
IP[], 9
IP[], 14
MDAP[R], 9
MDAP[R], 14
SRP1[], 9
SHP[1], 10
SRP1[], 14
SHP[1], 11
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="ae.sc.ss01">
/* VTT 6.32 compiler */
SVTCA[Y]
MIAP[R], 0, 10
SHP[2], 9
SHP[2], 16
MIAP[R], 20, 58
SHP[1], 1
IP[], 12
IP[], 8
MDAP[R], 12
MDAP[R], 8
SRP1[], 12
SHP[1], 13
SRP1[], 8
SHP[1], 5
SRP1[], 20
SHP[1], 23
SRP1[], 23
SHP[1], 4
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="ae.ss01">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 0, 11, 114
SHP[2], 16
CALL[], 30, 7, 114
SHP[2], 23
SRP2[], 0
IP[], 9
MDAP[R], 9
SLOOP[], 4
IP[], 69, 68, 42, 43
SRP2[], 30
SLOOP[], 3
IP[], 20, 33, 34
SHP[1], 8
CALL[], 37, 7, 114
SHP[2], 49
CALL[], 64, 11, 114
SHP[2], 58
SRP1[], 37
IP[], 41
IP[], 45
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="aeacute">
/* VTTTalk Unicode 0x1fd */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 422, 0, 0
OFFSET[R], 1815, 155, 0



SVTCA[Y]
MDAP[R], 30
MDRP[m&gt;RWh], 78

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="aeacute.sc">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 770, 0, 0
OFFSET[R], 1815, 93, 42


SVTCA[Y]
MDAP[R], 1
MDRP[m&gt;RWh], 23

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="aeacute.sc.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1013, 0, 0
OFFSET[R], 1815, 142, 42




SVTCA[Y]
MDAP[R], 20
MDRP[m&gt;RWh], 28

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="aeacute.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 669, 0, 0
OFFSET[R], 1815, 189, 0



SVTCA[Y]
MDAP[R], 30
MDRP[m&gt;RWh], 73

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="agrave">
/* VTTTalk Unicode 0xe0 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 396, 0, 0
OFFSET[R], 1813, -27, 0



SVTCA[Y]
MDAP[R], 13
MDRP[m&gt;RWh], 42

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="agrave.sc">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 743, 0, 0
OFFSET[R], 1813, -19, 42



SVTCA[Y]
MDAP[R], 1
MDRP[m&gt;RWh], 12

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="agrave.sc.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 987, 0, 0
OFFSET[R], 1813, 40, 42




SVTCA[Y]
MDAP[R], 5
MDRP[m&gt;RWh], 24

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="agrave.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 643, 0, 0
OFFSET[R], 1813, 17, 0



SVTCA[Y]
MDAP[R], 8
MDRP[m&gt;RWh], 39

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="amacron">
/* VTTTalk Unicode 0x101 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 396, 0, 0
OFFSET[R], 1830, -27, 0



SVTCA[Y]
MDAP[R], 13
MDRP[m&gt;RWh], 42

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="amacron.sc">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 743, 0, 0
OFFSET[R], 1830, -19, 42



SVTCA[Y]
MDAP[R], 1
MDRP[m&gt;RWh], 12

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="amacron.sc.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 987, 0, 0
OFFSET[R], 1830, 40, 42



SVTCA[Y]
MDAP[R], 5
MDRP[m&gt;RWh], 24

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="amacron.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 643, 0, 0
OFFSET[R], 1830, 17, 0



SVTCA[Y]
MDAP[R], 8
MDRP[m&gt;RWh], 39

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="ampersand">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 0, 19, 114
SHP[2], 49
SHP[2], 24
MDAP[R], 24
SHP[1], 23
CALL[], 33, 3, 114
SHP[2], 15
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="ampersand.sc">
/* VTT 6.32 compiler */
SVTCA[Y]
MIAP[R], 0, 11
SHP[2], 22
MDAP[R], 22
SHP[2], 44
MIAP[R], 30, 58
SHP[1], 14
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="aogonek">
/* VTTTalk Unicode 0x105 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 396, 0, 0
OFFSET[R], 1843, 164, 0

    </glyphProgram>

    <glyphProgram name="aogonek.sc">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 743, 0, 0
OFFSET[R], 1843, 253, 0

    </glyphProgram>

    <glyphProgram name="aogonek.sc.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 987, 0, 0
OFFSET[R], 1843, 263, 0

    </glyphProgram>

    <glyphProgram name="aogonek.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 643, 0, 0
OFFSET[R], 1843, 255, 0

    </glyphProgram>

    <glyphProgram name="approxequal">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 24
SHP[1], 32
MDAP[R], 32
SRP1[], 24
SHP[1], 41
SMD[], 128
SRP0[], 24
MDRP[m&gt;RGr], 36
SHP[2], 29
SHP[2], 44
MDAP[R], 44
SMD[], 64
SRP0[], 36
MDRP[m&gt;RWh], 0
SHP[2], 8
MDAP[R], 8
SHP[2], 17
SMD[], 128
SRP0[], 0
MDRP[m&gt;RGr], 12
SHP[2], 5
SHP[2], 20
MDAP[R], 20
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="aring">
/* VTTTalk Unicode 0xe5 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 396, 0, 0
OFFSET[R], 1824, -27, 0
SVTCA[Y]
CALL[], 42, 13, 1, 1, 55, 86
SHC[2], 2
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="aring.sc">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 743, 0, 0
OFFSET[R], 1824, -19, 42

SVTCA[Y]
CALL[], 12, 1, 1, 1, 50, 86
SHC[2], 2
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="aring.sc.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 987, 0, 0
OFFSET[R], 1824, 40, 42

SVTCA[Y]
CALL[], 24, 5, 1, 1, 50, 86
SHC[2], 2
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="aring.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 643, 0, 0
OFFSET[R], 1824, 17, 0


SVTCA[Y]
CALL[], 39, 8, 1, 1, 55, 86
SHC[2], 3
SHC[2], 4

    </glyphProgram>

    <glyphProgram name="aringacute">
/* VTTTalk Unicode 0x1fb */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 396, 0, 0
OFFSET[R], 1825, -27, 0
SVTCA[Y]
CALL[], 42, 13, 1, 1, 55, 86
SHC[2], 2
SHC[2], 3
SHC[2], 4

    </glyphProgram>

    <glyphProgram name="aringacute.sc">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 743, 0, 0
OFFSET[R], 1825, -19, 42

SVTCA[Y]
CALL[], 12, 1, 1, 1, 50, 86
SHC[2], 2
SHC[2], 3
SHC[2], 4

    </glyphProgram>

    <glyphProgram name="aringacute.sc.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 987, 0, 0
OFFSET[R], 1825, 40, 42

SVTCA[Y]
CALL[], 24, 5, 1, 1, 50, 86
SHC[2], 2
SHC[2], 3
SHC[2], 4

    </glyphProgram>

    <glyphProgram name="aringacute.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 643, 0, 0
OFFSET[R], 1825, 17, 0

SVTCA[Y]
CALL[], 39, 8, 1, 1, 55, 86
SHC[2], 3
SHC[2], 4
SHC[2], 5

    </glyphProgram>

    <glyphProgram name="arrowboth">
/* VTT 6.32 compiler */
SVTCA[Y]
MIAP[R], 12, 18
SHP[1], 6
SRP1[], 6
SHP[1], 0
SRP1[], 12
SHP[1], 13
SRP1[], 13
SHP[1], 1
SRP1[], 1
SHP[1], 4
SRP1[], 13
SHP[1], 7
SRP1[], 7
SHP[1], 10
SRP1[], 13
SHP[1], 8
SRP1[], 8
SHP[1], 2
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="arrowdown">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 2
SHP[1], 5
SHP[1], 6
MDAP[R], 6
SRP1[], 2
SHP[1], 8
SHP[1], 4
SRP1[], 4
SHP[1], 3
SHP[1], 0
SHP[2], 1
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="arrowdown.case">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 2
SHP[1], 8
SHP[1], 5
MDAP[R], 6
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="arrowleft">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 9
SHP[1], 5
SHP[1], 8
SRP1[], 8
SHP[1], 3
SHP[1], 4
SRP1[], 4
SHP[1], 1
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="arrowleft.case">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 9
SHP[1], 5
SHP[1], 8
SRP1[], 8
SHP[1], 3
SHP[1], 4
SRP1[], 4
SHP[1], 1
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="arrowright">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 8
SHP[1], 3
SHP[1], 9
SRP1[], 9
SHP[1], 5
SHP[1], 4
SRP1[], 4
SHP[1], 1
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="arrowright.case">
/* VTT 6.32 compiler */
SVTCA[Y]
MIAP[R], 8, 18
SHP[1], 3
SHP[1], 9
SRP1[], 9
SHP[1], 5
SHP[1], 4
SRP1[], 4
SHP[1], 1
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="arrowup">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 2
SHP[1], 5
MDRP[m&gt;RGr], 6
SHP[1], 7
SHP[1], 0
SRP1[], 0
SHP[1], 1
SHP[1], 4
SRP1[], 4
SHP[1], 3
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="arrowup.case">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 2
SHP[1], 5
SHP[1], 7
MDAP[R], 6
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="arrowupdn">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 2
SHP[1], 5
SHP[1], 13
MDAP[R], 6
SHP[1], 9
SHP[1], 12
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="asciicircum">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 1
SHP[1], 5
SHP[1], 0
MDAP[R], 0
SHP[2], 4
MDAP[R], 4
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="asciitilde">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 0
SHP[2], 8
MDAP[R], 8
SHP[2], 17
SMD[], 128
SRP0[], 0
MDRP[m&gt;RGr], 12
SHP[2], 5
SHP[2], 20
MDAP[R], 20
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="asterisk">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 19, 3, 114
MDRP[m&gt;RGr], 8
SLOOP[], 8
IP[], 16, 23, 0, 15, 12, 3, 4, 11
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="at">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 0
SHP[2], 50
CALL[], 10, 3, 114
SHP[2], 40
SRP1[], 0
IP[], 65
MDAP[R], 65
SHP[1], 26
MDAP[R], 26
SRP1[], 65
SHP[1], 81
MDAP[R], 57
SHP[1], 73
SHP[1], 19
SRP1[], 19
SHP[1], 31
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="at.case">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1776, 0, 67

    </glyphProgram>

    <glyphProgram name="atilde">
/* VTTTalk Unicode 0xe3 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 396, 0, 0
OFFSET[R], 1826, -27, 0



SVTCA[Y]
MDAP[R], 13
MDRP[m&gt;RWh], 42

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="atilde.sc">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 743, 0, 0
OFFSET[R], 1826, -19, 42


SVTCA[Y]
MDAP[R], 1
MDRP[m&gt;RWh], 12

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="atilde.sc.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 987, 0, 0
OFFSET[R], 1826, 40, 42




SVTCA[Y]
MDAP[R], 5
MDRP[m&gt;RWh], 24

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="atilde.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 643, 0, 0
OFFSET[R], 1826, 17, 0



SVTCA[Y]
MDAP[R], 8
MDRP[m&gt;RWh], 39

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="b">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 0, 11, 114
SHP[2], 23
CALL[], 8, 7, 114
SHP[2], 31
CALL[], 16, 10, 114
CALL[], 17, 0, 114
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="b.sc">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 0
SHP[2], 16
MIAP[R], 1, 58
SHP[1], 33
IP[], 24
MDAP[R], 24
SHP[1], 25
SHP[1], 8
SRP1[], 8
SHP[1], 9
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="backslash">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 2
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="backslash.case">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 2
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="bar">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 1
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="braceleft">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 0
SHP[2], 37
MDAP[R], 17
SHP[1], 20
IP[], 8
MDAP[R], 8
SHP[1], 9
SHP[1], 28
SHP[1], 29
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="braceleft.case">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

OFFSET[R], 1628, 10, 67

    </glyphProgram>

    <glyphProgram name="braceright">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 1
SHP[1], 2
MDAP[R], 22
SHP[1], 21
SRP2[], 1
IP[], 33
MDAP[R], 33
SHP[1], 12
SHP[1], 11
SHP[1], 30
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="braceright.case">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

OFFSET[R], 1629, 10, 67

    </glyphProgram>

    <glyphProgram name="bracketleft">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 1
SHP[1], 4
SHP[2], 5
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="bracketleft.case">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

OFFSET[R], 1630, 10, 67

    </glyphProgram>

    <glyphProgram name="bracketright">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 1
MDAP[R], 6
SHP[1], 5
SRP1[], 1
SHP[1], 2
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="bracketright.case">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

OFFSET[R], 1631, 10, 67

    </glyphProgram>

    <glyphProgram name="breve">
/* VTTTalk Unicode 0x2d8 */
/* ACT generated Wed May  6 15:33:15 2020 */

OFFSET[R], 1823, 0, 0

    </glyphProgram>

    <glyphProgram name="brevecombcy">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 0
SHP[2], 7
SMD[], 128
MDRP[m&gt;RGr], 4
SHP[2], 10
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="brevecombcy.case">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 0
SHP[2], 7
SMD[], 128
MDRP[m&gt;RGr], 4
SHP[2], 10
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="brokenbar">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 1
SHP[1], 0
MDAP[R], 4
SHP[1], 5
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="bullet">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 0
SHP[2], 8
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="bullet.case">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

OFFSET[R], 1615, 10, 83

    </glyphProgram>

    <glyphProgram name="c">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 0, 11, 114
SHP[2], 23
CALL[], 8, 7, 114
SHP[2], 15
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="c.sc">
/* VTT 6.32 compiler */
SVTCA[Y]
MIAP[R], 0, 11
SHP[2], 23
MIAP[R], 8, 58
SHP[1], 15
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="cacute">
/* VTTTalk Unicode 0x107 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 425, 0, 0
OFFSET[R], 1815, -9, 0



SVTCA[Y]
MDAP[R], 8
MDRP[m&gt;RWh], 30

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="cacute.sc">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 773, 0, 0
OFFSET[R], 1815, 39, 42



SVTCA[Y]
MDAP[R], 8
MDRP[m&gt;RWh], 30

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="caron">
/* VTTTalk Unicode 0x2c7 */
/* ACT generated Wed May  6 15:33:15 2020 */

OFFSET[R], 1821, 0, 0

    </glyphProgram>

    <glyphProgram name="ccaron">
/* VTTTalk Unicode 0x10d */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 425, 0, 0
OFFSET[R], 1821, -9, 0



SVTCA[Y]
MDAP[R], 8
MDRP[m&gt;RWh], 30

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="ccaron.sc">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 773, 0, 0
OFFSET[R], 1821, 39, 42



SVTCA[Y]
MDAP[R], 8
MDRP[m&gt;RWh], 30

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="ccedilla">
/* VTTTalk Unicode 0xe7 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 425, 0, 0
OFFSET[R], 1842, -9, 0

    </glyphProgram>

    <glyphProgram name="ccedilla.sc">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 773, 0, 0
OFFSET[R], 1842, 39, 0

    </glyphProgram>

    <glyphProgram name="ccircumflex">
/* VTTTalk Unicode 0x109 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 425, 0, 0
OFFSET[R], 1820, -9, 0



SVTCA[Y]
MDAP[R], 8
MDRP[m&gt;RWh], 30

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="ccircumflex.sc">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 773, 0, 0
OFFSET[R], 1820, 39, 42



SVTCA[Y]
MDAP[R], 8
MDRP[m&gt;RWh], 30

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="cdotaccent">
/* VTTTalk Unicode 0x10b */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 425, 0, 0
OFFSET[R], 1811, -9, 0



SVTCA[Y]
MDAP[R], 8
MDRP[m&gt;RWh], 30

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="cdotaccent.sc">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 773, 0, 0
OFFSET[R], 1811, 39, 42



SVTCA[Y]
MDAP[R], 8
MDRP[m&gt;RWh], 30

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="cedilla">
/* VTTTalk Unicode 0xb8 */
/* ACT generated Wed May  6 15:33:15 2020 */

OFFSET[R], 1842, 0, 0

    </glyphProgram>

    <glyphProgram name="cent">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 4, 11, 114
MDRP[m&gt;RBl], 0
SHP[1], 27
CALL[], 12, 7, 114
MDRP[m&gt;RBl], 1
SHP[1], 19
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="cent.BRACKET.179">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 0, 11, 114
SLOOP[], 3
SHP[2], 23, 31, 32
CALL[], 8, 7, 114
SHP[2], 15
SHP[2], 34
MDRP[m&gt;RBl], 35
SHP[1], 37
SRP0[], 0
MDRP[m&gt;RBl], 30
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="circumflex">
/* VTTTalk Unicode 0x2c6 */
/* ACT generated Wed May  6 15:33:15 2020 */

OFFSET[R], 1820, 0, 0

    </glyphProgram>

    <glyphProgram name="colon">
/* VTTTalk Unicode 0x3a (:) */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1605, 0, 471
USEMYMETRICS[]
OFFSET[R], 1605, 0, 0

    </glyphProgram>

    <glyphProgram name="colonmonetary">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 8, 13, 114
SHP[2], 35
MDRP[m&gt;RWh], 3
SHP[2], 7
CALL[], 18, 5, 114
SHP[2], 25
MDRP[m&gt;RBl], 5
SHP[2], 1
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="colonmonetary.1">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 0, 13, 114
SHP[2], 27
SRP1[], 27
SHP[1], 40
SRP1[], 40
SHP[1], 36
MDRP[m&gt;RWh], 41
SHP[2], 37
CALL[], 10, 5, 114
SHP[2], 17
SRP1[], 17
SHP[1], 45
SHP[1], 46
MDRP[m&gt;RBl], 43
SHP[2], 47
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="comma">
/* VTT 6.32 compiler */
SVTCA[Y]
RUTG[]
MDAP[R], 8
RTG[]
MDRP[m&gt;RGr], 0
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="copyright">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 0, 9, 114
SHP[2], 20
SMD[], 128
MDRP[m&gt;RGr], 40
SHP[2], 63
CALL[], 10, 3, 114
SHP[2], 30
MDRP[m&gt;RGr], 48
SHP[2], 55
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="currency">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 16
SHP[1], 36
SHP[1], 5
SRP1[], 5
SHP[1], 4
SRP1[], 16
SHP[1], 8
SRP1[], 8
SHP[1], 11
MDAP[R], 26
SHP[1], 44
SRP2[], 16
SLOOP[], 8
IP[], 7, 9, 6, 10, 0, 12, 3, 13
SHP[1], 1
SRP1[], 1
SHP[1], 2
SRP1[], 26
SHP[1], 14
SRP1[], 14
SHP[1], 15
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="d">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 0, 11, 114
SHP[2], 16
CALL[], 8, 7, 114
SHP[2], 24
CALL[], 32, 10, 114
CALL[], 36, 0, 114
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="d.sc">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 0
SHP[2], 11
MIAP[R], 1, 58
SHP[1], 21
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="dagger">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 0
CALL[], 5, 2, 114
SRP1[], 0
IP[], 3
MDAP[R], 3
SLOOP[], 3
SHP[1], 2, 7, 10
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="daggerdbl">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 7
CALL[], 16, 2, 114
SRP2[], 7
IP[], 10
IP[], 13
MDAP[R], 10
MDAP[R], 13
SRP1[], 10
SHP[1], 2
SHP[1], 9
SRP1[], 9
SHP[1], 5
SRP1[], 13
SHP[1], 1
SHP[1], 14
SRP1[], 14
SHP[1], 18
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="dcaron">
/* VTTTalk Unicode 0x10f */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 432, 0, 0
OFFSET[R], 1819, 356, 42

SVTCA[Y]
CALL[], 40, 36, 1, 1, 20, 86
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="dcaron.sc">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 780, 0, 0
OFFSET[R], 1821, 32, 42



SVTCA[Y]
MDAP[R], 1
MDRP[m&gt;RWh], 22

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="dcroat">
/* VTTTalk Unicode 0x111 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 432, 0, 0
OFFSET[R], 1846, 182, 189


SVTCA[Y]
MDAP[R], 8
MDRP[m&gt;RWh], 39

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="dcroat.sc">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 781, 0, 0

    </glyphProgram>

    <glyphProgram name="degree">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 0
SHP[2], 16
CALL[], 8, 5, 114
SHP[2], 24
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="descTailcy">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 3
SMD[], 128
MDRP[m&gt;RWh], 0
SLOOP[], 3
SHP[1], 4, 1, 2
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="descTailcy.case">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 3
SMD[], 128
MDRP[m&gt;RWh], 0
SLOOP[], 3
SHP[1], 4, 1, 2
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="descendercy">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 3
SMD[], 128
MDRP[m&gt;RWh], 0
SHP[1], 4
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="descendercy.case">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 3
SMD[], 128
MDRP[m&gt;RWh], 0
SHP[1], 4
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="descendercy.case.short">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 3
SMD[], 128
MDRP[m&gt;RWh], 0
SHP[1], 4
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="descendercy.short">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 3
SMD[], 128
MDRP[m&gt;RWh], 0
SHP[1], 4
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="dieresis">
/* VTTTalk Unicode 0xa8 */
/* ACT generated Wed May  6 15:33:15 2020 */

OFFSET[R], 1807, 0, 0

    </glyphProgram>

    <glyphProgram name="divide">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 1
SHP[1], 0
SHP[2], 10
RDTG[]
MDAP[R], 10
SHP[1], 4
RTG[]
SRP0[], 1
MDRP[m&gt;RWh], 16
SHP[2], 22
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="dollar">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 4, 13, 114
MDRP[m&gt;RBl], 0
CALL[], 27, 5, 114
MDRP[m&gt;RGr], 1
SHP[1], 34
SRP2[], 4
SLOOP[], 4
IP[], 46, 15, 38, 23
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="dollar.BRACKET.179">
/* VTT 6.32 compiler */
SVTCA[Y]
MIAP[R], 0, 13
MDRP[m&gt;RBl], 46
SHP[1], 7
SRP1[], 7
SHP[1], 48
MIAP[R], 23, 5
MDRP[m&gt;RWh], 52
SRP2[], 0
SLOOP[], 4
IP[], 42, 11, 34, 19
SHP[1], 30
SRP1[], 30
SHP[1], 50
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="dong">
/* VTT 6.32 compiler */
SVTCA[Y]
MIAP[R], 0, 13
SHP[2], 20
MDRP[m&gt;RWh], 17
SHP[2], 16
MDAP[R], 8
SHP[1], 28
MDRP[m&gt;RWh], 43
SHP[2], 44
SRP1[], 44
SHP[1], 40
MDAP[R], 40
MIAP[R], 36, 12
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="dotaccent">
/* VTTTalk Unicode 0x2d9 */
/* ACT generated Wed May  6 15:33:15 2020 */

OFFSET[R], 1811, 0, 0

    </glyphProgram>

    <glyphProgram name="dotbelowcomb">
/* VTT 6.32 compiler */
SVTCA[Y]
RUTG[]
MDAP[R], 6
SHP[1], 0
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="dotlessi">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 0, 10, 114
CALL[], 1, 6, 114
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="dotlessi.sc">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 829, 0, 0

    </glyphProgram>

    <glyphProgram name="dotlessi.sc.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1049, 0, 0

    </glyphProgram>

    <glyphProgram name="e">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 0, 11, 114
SHP[2], 32
CALL[], 8, 7, 114
SHP[2], 23
SRP1[], 0
IP[], 16
MDAP[R], 16
SHP[1], 17
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="e.sc">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 7
SHP[1], 4
MIAP[R], 8, 58
SHP[1], 11
SRP2[], 7
IP[], 3
MDAP[R], 3
SHP[1], 0
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="e.sc.ss01">
/* VTT 6.32 compiler */
SVTCA[Y]
MIAP[R], 3, 11
SHP[1], 41
MIAP[R], 19, 58
SHP[1], 26
SRP2[], 3
IP[], 34
MDAP[R], 34
SHP[1], 33
SRP1[], 33
SHP[1], 11
SRP1[], 11
SHP[1], 10
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="e.ss01">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 0, 11, 114
SHP[2], 28
CALL[], 8, 7, 114
SHP[2], 20
SRP2[], 0
SLOOP[], 5
IP[], 13, 14, 12, 16, 15
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="eacute">
/* VTTTalk Unicode 0xe9 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 439, 0, 0
OFFSET[R], 1815, -6, 0


SVTCA[Y]
MDAP[R], 8
MDRP[m&gt;RWh], 39

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="eacute.sc">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 787, 0, 0
OFFSET[R], 1815, 6, 42



SVTCA[Y]
CALL[], 12, 8, 1, 1, 75, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="eacute.sc.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1016, 0, 0
OFFSET[R], 1815, -23, 42




SVTCA[Y]
MDAP[R], 19
MDRP[m&gt;RWh], 46

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="eacute.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 672, 0, 0
OFFSET[R], 1815, -10, 0



SVTCA[Y]
MDAP[R], 8
MDRP[m&gt;RWh], 35

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="ebreve">
/* VTTTalk Unicode 0x115 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 439, 0, 0
OFFSET[R], 1823, -6, 0



SVTCA[Y]
MDAP[R], 8
MDRP[m&gt;RWh], 39

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="ebreve.sc">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 787, 0, 0
OFFSET[R], 1823, 6, 42



SVTCA[Y]
MDAP[R], 8
MDRP[m&gt;RWh], 12

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="ebreve.sc.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1016, 0, 0
OFFSET[R], 1823, -23, 42




SVTCA[Y]
MDAP[R], 19
MDRP[m&gt;RWh], 46

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="ebreve.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 672, 0, 0
OFFSET[R], 1823, -10, 0



SVTCA[Y]
MDAP[R], 8
MDRP[m&gt;RWh], 35

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="ecaron">
/* VTTTalk Unicode 0x11b */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 439, 0, 0
OFFSET[R], 1821, -6, 0



SVTCA[Y]
MDAP[R], 8
MDRP[m&gt;RWh], 39

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="ecaron.sc">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 787, 0, 0
OFFSET[R], 1821, 6, 42



SVTCA[Y]
MDAP[R], 8
MDRP[m&gt;RWh], 12

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="ecaron.sc.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1016, 0, 0
OFFSET[R], 1821, -23, 42




SVTCA[Y]
MDAP[R], 19
MDRP[m&gt;RWh], 46

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="ecaron.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 672, 0, 0
OFFSET[R], 1821, -10, 0



SVTCA[Y]
MDAP[R], 8
MDRP[m&gt;RWh], 35

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="ecircumflex">
/* VTTTalk Unicode 0xea */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 439, 0, 0
OFFSET[R], 1820, -6, 0



SVTCA[Y]
MDAP[R], 8
MDRP[m&gt;RWh], 39

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="ecircumflex.sc">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 787, 0, 0
OFFSET[R], 1820, 6, 42



SVTCA[Y]
MDAP[R], 8
MDRP[m&gt;RWh], 12

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="ecircumflex.sc.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1016, 0, 0
OFFSET[R], 1820, -23, 42



SVTCA[Y]
MDAP[R], 19
MDRP[m&gt;RWh], 46

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="ecircumflex.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 672, 0, 0
OFFSET[R], 1820, -10, 0



SVTCA[Y]
MDAP[R], 8
MDRP[m&gt;RWh], 35

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="edieresis">
/* VTTTalk Unicode 0xeb */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 439, 0, 0
OFFSET[R], 1807, -6, 0



SVTCA[Y]
MDAP[R], 8
MDRP[m&gt;RWh], 39
MDRP[m&gt;RWh], 51

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="edieresis.sc">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 787, 0, 0
OFFSET[R], 1807, 6, 42



SVTCA[Y]
MDAP[R], 8
MDRP[m&gt;RWh], 12
MDRP[m&gt;RWh], 24

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="edieresis.sc.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1016, 0, 0
OFFSET[R], 1807, -23, 42



SVTCA[Y]
MDAP[R], 19
MDRP[m&gt;RWh], 46
MDRP[m&gt;RWh], 58

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="edieresis.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 672, 0, 0
OFFSET[R], 1807, -10, 0



SVTCA[Y]
MDAP[R], 8
MDRP[m&gt;RWh], 35
MDRP[m&gt;RWh], 47

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="edotaccent">
/* VTTTalk Unicode 0x117 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 439, 0, 0
OFFSET[R], 1811, -6, 0



SVTCA[Y]
MDAP[R], 8
MDRP[m&gt;RWh], 39

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="edotaccent.sc">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 787, 0, 0
OFFSET[R], 1811, 6, 42



SVTCA[Y]
MDAP[R], 8
MDRP[m&gt;RWh], 12

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="edotaccent.sc.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1016, 0, 0
OFFSET[R], 1811, -23, 42



SVTCA[Y]
MDAP[R], 19
MDRP[m&gt;RWh], 46

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="edotaccent.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 672, 0, 0
OFFSET[R], 1811, -10, 0



SVTCA[Y]
MDAP[R], 8
MDRP[m&gt;RWh], 35

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="egrave">
/* VTTTalk Unicode 0xe8 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 439, 0, 0
OFFSET[R], 1813, -6, 0



SVTCA[Y]
MDAP[R], 8
MDRP[m&gt;RWh], 39
MDRP[m&gt;RWh], 43

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="egrave.sc">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 787, 0, 0
OFFSET[R], 1813, 6, 42



SVTCA[Y]
MDAP[R], 8
MDRP[m&gt;RWh], 12

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="egrave.sc.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1016, 0, 0
OFFSET[R], 1813, -23, 42



SVTCA[Y]
MDAP[R], 19
MDRP[m&gt;RWh], 46

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="egrave.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 672, 0, 0
OFFSET[R], 1813, -10, 0



SVTCA[Y]
MDAP[R], 8
MDRP[m&gt;RWh], 35

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="eight">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 0, 13, 114
SHP[2], 16
MIAP[R], 22, 4
SHP[1], 28
SHP[1], 44
SRP1[], 44
SHP[1], 8
CALL[], 36, 5, 114
SHP[2], 50
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="eight.dnom">
/* VTT 6.32 compiler */
SVTCA[Y]
MIAP[R], 0, 13
SHP[2], 16
MIRP[m&lt;RGr], 34, 61
SHP[2], 46
IP[], 22
MDAP[R], 22
SLOOP[], 3
SHP[1], 28, 8, 40
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="eight.numr">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1563, 0, 285

    </glyphProgram>

    <glyphProgram name="eight.osf">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1493, 0, 0

    </glyphProgram>

    <glyphProgram name="eight.sinf">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1563, 0, -194

    </glyphProgram>

    <glyphProgram name="eight.subs">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1563, 0, -194

    </glyphProgram>

    <glyphProgram name="eight.sups">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1563, 0, 327

    </glyphProgram>

    <glyphProgram name="eight.tf">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 0, 13, 114
SHP[2], 16
CALL[], 36, 5, 114
SHP[2], 50
SRP2[], 0
IP[], 22
SRP1[], 22
SLOOP[], 3
SHP[1], 28, 8, 44
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="eight.tosf">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1513, 0, 0

    </glyphProgram>

    <glyphProgram name="ellipsis">
/* VTTTalk Unicode 0x2026 */
/* ACT generated Wed May  6 15:33:15 2020 */

OFFSET[R], 1605, 0, 0
OFFSET[R], 1605, 187, 0
OFFSET[R], 1605, 374, 0

    </glyphProgram>

    <glyphProgram name="emacron">
/* VTTTalk Unicode 0x113 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 439, 0, 0
OFFSET[R], 1830, -6, 0



SVTCA[Y]
MDAP[R], 8
MDRP[m&gt;RWh], 39

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="emacron.sc">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 787, 0, 0
OFFSET[R], 1830, 6, 42



SVTCA[Y]
MDAP[R], 8
MDRP[m&gt;RWh], 12

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="emacron.sc.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1016, 0, 0
OFFSET[R], 1830, -23, 42



SVTCA[Y]
MDAP[R], 19
MDRP[m&gt;RWh], 46

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="emacron.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 672, 0, 0
OFFSET[R], 1830, -10, 0



SVTCA[Y]
MDAP[R], 8
MDRP[m&gt;RWh], 35

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="emdash">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 0
SHP[2], 1
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="emdash.case">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1641, 0, 87

    </glyphProgram>

    <glyphProgram name="emptyset">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 12
SHP[1], 28
SHP[1], 2
SRP1[], 2
SHP[1], 3
SRP1[], 12
SHP[1], 4
MDAP[R], 4
SHP[1], 20
SHP[1], 0
SHP[2], 1
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="endash">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 0
SHP[2], 1
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="endash.case">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1640, 0, 87

    </glyphProgram>

    <glyphProgram name="eng">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 0, 7, 114
SHP[2], 21
CALL[], 8, 15, 114
SHP[2], 14
CALL[], 27, 10, 114
SRP1[], 0
IP[], 30
IP[], 31
CALL[], 28, 6, 114
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="eng.sc">
/* VTT 6.32 compiler */
SVTCA[Y]
MIAP[R], 0, 18
SHP[2], 4
SRP1[], 4
SHP[1], 3
MIAP[R], 1, 58
SHP[1], 5
SHP[1], 19
RUTG[]
MIAP[R], 8, 14
SHP[1], 14
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="eng.sc.ss01">
/* VTT 6.32 compiler */
SVTCA[Y]
MIAP[R], 26, 58
SHP[1], 0
SHP[2], 19
SRP1[], 19
SHP[1], 27
SRP1[], 27
SHP[1], 22
SHP[1], 28
MDAP[R], 7
SHP[1], 13
MIAP[R], 24, 10
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="eogonek">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 0
SHP[2], 56
CALL[], 10, 11, 114
SHP[2], 42
SRP1[], 42
SHP[1], 7
SHP[1], 6
CALL[], 18, 7, 114
SHP[2], 33
SRP1[], 10
IP[], 26
MDAP[R], 26
SHP[1], 27
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="eogonek.sc">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 787, 0, 0
OFFSET[R], 1843, 200, 0

    </glyphProgram>

    <glyphProgram name="eogonek.sc.ss01">
/* VTT 6.32 compiler */
SVTCA[Y]
MIAP[R], 10, 11
MDRP[m&gt;RGr], 0
SHP[2], 60
SHP[1], 48
SRP1[], 48
SHP[1], 6
SHP[1], 7
MIAP[R], 26, 58
SHP[1], 33
SRP2[], 10
IP[], 41
MDAP[R], 41
SHP[1], 40
SRP1[], 40
SHP[1], 17
SHP[1], 18
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="eogonek.ss01">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 10, 11, 114
MDRP[m&gt;RGr], 0
SHP[2], 52
SHP[1], 38
SRP1[], 38
SHP[1], 6
SRP1[], 6
SHP[1], 7
SRP1[], 7
SHP[1], 45
CALL[], 18, 7, 114
SHP[2], 30
SRP2[], 10
SLOOP[], 5
IP[], 23, 24, 22, 26, 25
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="equal">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 0
SHP[2], 1
MDRP[m&gt;RWh], 5
SHP[2], 4
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="estimated">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 0, 13, 114
SHP[2], 26
CALL[], 10, 5, 114
SHP[2], 42
SRP2[], 0
IP[], 17
MDAP[R], 17
SHP[1], 33
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="eth">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 0, 11, 114
SHP[2], 35
MIAP[R], 27, 0
SHP[1], 20
IP[], 8
MDAP[R], 8
SLOOP[], 5
IP[], 12, 13, 39, 31, 16
SRP2[], 27
SLOOP[], 4
IP[], 50, 51, 53, 52
SHP[1], 43
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="eth.sc">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

OFFSET[R], 780, 20, 0
OFFSET[R], 1913, -45, -1

    </glyphProgram>

    <glyphProgram name="exclam">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 1, 2, 114
MIAP[R], 4, 11
SHP[1], 10
SRP1[], 10
SHP[1], 0
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="exclam.sc">
/* VTT 6.32 compiler */
SVTCA[Y]
MIAP[R], 1, 58
MDAP[R], 4
SHP[1], 10
SRP1[], 10
SHP[1], 0
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="exclamdown">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 1
CALL[], 4, 7, 114
SHP[2], 10
SRP1[], 10
SHP[1], 3
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="exclamdown.sc">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 1
MIAP[R], 4, 58
SHP[1], 10
SRP1[], 10
SHP[1], 3
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="f">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 0, 10, 114
CALL[], 4, 1, 114
SHP[2], 11
RUTG[]
MDAP[R], 19
DLTP1[(19 @12 -8)(19 @14 -8)]
DLTP2[(19 @2 -8)]
SHP[1], 18
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="f.sc">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 4
MIAP[R], 6, 58
SHP[1], 9
SRP2[], 4
IP[], 3
MDAP[R], 3
SHP[1], 0
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="f.sc.ss01">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 0
MIAP[R], 4, 58
SHP[1], 11
IP[], 16
MDAP[R], 16
SHP[1], 17
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="f.ss01">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 0
CALL[], 4, 1, 114
SHP[2], 11
SRP1[], 0
IP[], 19
MDAP[R], 19
SHP[1], 18
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="fi">
/* VTTTalk Unicode 0xfb01 */
/* ACT generated Wed May  6 15:33:15 2020 */

OFFSET[R], 465, 0, 0
OFFSET[R], 480, 311, 0

    </glyphProgram>

    <glyphProgram name="fi.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

OFFSET[R], 696, 0, 0
OFFSET[R], 480, 303, 0

    </glyphProgram>

    <glyphProgram name="figuredash">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 0
SHP[2], 1
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="filledbox">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 1
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="five">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 0, 13, 114
SHP[2], 7
CALL[], 16, 4, 114
SHP[2], 19
SRP1[], 19
SHP[1], 20
SRP1[], 0
IP[], 22
MDAP[R], 22
SHP[1], 15
SHP[1], 21
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="five.dnom">
/* VTT 6.32 compiler */
SVTCA[Y]
MIAP[R], 0, 13
SHP[2], 7
MIRP[m&lt;RGr], 15, 61
SHP[2], 18
SRP1[], 18
SHP[1], 19
SRP1[], 0
IP[], 22
MDAP[R], 22
SHP[1], 13
SRP1[], 13
SHP[1], 20
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="five.numr">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1560, 0, 285

    </glyphProgram>

    <glyphProgram name="five.osf">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 0
SHP[2], 7
MDAP[R], 16
SHP[1], 19
SRP1[], 19
SHP[1], 20
SRP1[], 16
IP[], 22
MDAP[R], 22
SHP[1], 15
SHP[1], 21
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="five.sinf">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1560, 0, -194

    </glyphProgram>

    <glyphProgram name="five.subs">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1560, 0, -194

    </glyphProgram>

    <glyphProgram name="five.sups">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1560, 0, 327

    </glyphProgram>

    <glyphProgram name="five.tf">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 0, 13, 114
SHP[2], 8
CALL[], 18, 4, 114
SRP2[], 0
IP[], 16
MDAP[R], 16
SHP[1], 25
SRP1[], 25
SHP[1], 23
SRP1[], 18
SHP[1], 21
SRP1[], 21
SHP[1], 22
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="five.tosf">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 0
SHP[2], 8
MIAP[R], 18, 59
IP[], 16
MDAP[R], 16
SHP[1], 25
SRP1[], 25
SHP[1], 23
SRP1[], 18
SHP[1], 21
SRP1[], 21
SHP[1], 22
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="fiveeighths">
/* VTTTalk Unicode 0x215d */
/* ACT generated Wed May  6 15:33:15 2020 */

OFFSET[R], 1570, 0, 0
OFFSET[R], 1595, 430, 0
OFFSET[R], 1563, 590, 0

    </glyphProgram>

    <glyphProgram name="fl">
/* VTTTalk Unicode 0xfb02 */
/* ACT generated Wed May  6 15:33:15 2020 */

OFFSET[R], 465, 0, 0
OFFSET[R], 505, 311, 0

    </glyphProgram>

    <glyphProgram name="fl.ss01">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 0
SHP[2], 25
MIAP[R], 12, 10
CALL[], 17, 1, 114
SHP[2], 7
MDAP[R], 33
SHP[1], 32
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="florin">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 0, 15, 114
SHP[2], 6
CALL[], 13, 1, 114
SHP[2], 20
MDAP[R], 30
SHP[1], 29
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="four">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 3, 4, 114
CALL[], 13, 12, 114
SRP2[], 3
IP[], 0
MDAP[R], 0
SHP[1], 5
SRP1[], 5
SHP[1], 1
SHP[1], 4
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="four.dnom">
/* VTT 6.32 compiler */
SVTCA[Y]
MIAP[R], 8, 12
MIRP[m&lt;RGr], 2, 61
IP[], 0
MDAP[R], 0
SHP[1], 5
SRP1[], 5
SHP[1], 4
SRP1[], 4
SHP[1], 1
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="four.numr">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1559, 0, 285

    </glyphProgram>

    <glyphProgram name="four.osf">
/* VTT 6.32 compiler */
SVTCA[Y]
MIAP[R], 2, 59
MDAP[R], 8
SRP2[], 2
IP[], 7
MDAP[R], 7
SHP[1], 6
SRP1[], 6
SHP[1], 12
MDAP[R], 12
SRP1[], 6
SHP[1], 4
SRP1[], 4
SHP[1], 1
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="four.sinf">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1559, 0, -194

    </glyphProgram>

    <glyphProgram name="four.subs">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1559, 0, -194

    </glyphProgram>

    <glyphProgram name="four.sups">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1559, 0, 327

    </glyphProgram>

    <glyphProgram name="four.tf">
/* VTT 6.32 compiler */
SVTCA[Y]
MIAP[R], 2, 4
MIAP[R], 8, 12
SRP2[], 2
IP[], 7
MDAP[R], 7
SHP[1], 6
SRP1[], 6
SLOOP[], 3
SHP[1], 4, 1, 11
MDAP[R], 11
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="four.tosf">
/* VTT 6.32 compiler */
SVTCA[Y]
MIAP[R], 2, 59
MDAP[R], 8
SRP2[], 2
IP[], 7
MDAP[R], 7
SHP[1], 6
SRP1[], 6
SHP[1], 12
MDAP[R], 12
SRP1[], 6
SHP[1], 4
SRP1[], 4
SHP[1], 1
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="fraction">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 0, 18, 114
CALL[], 2, 4, 114
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="franc">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 9, 12, 114
CALL[], 10, 4, 114
SHP[2], 13
SRP1[], 9
IP[], 7
MDAP[R], 7
SHP[1], 4
MDRP[m&gt;RGr], 1
SHP[2], 0
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="g">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 0, 15, 114
SHP[2], 7
CALL[], 14, 6, 114
CALL[], 27, 7, 114
SHP[2], 43
SRP1[], 0
IP[], 19
MDAP[R], 19
SHP[1], 35
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="g.sc">
/* VTT 6.32 compiler */
SVTCA[Y]
MIAP[R], 4, 11
SHP[1], 27
MIAP[R], 12, 58
SHP[1], 19
SRP2[], 4
IP[], 32
MDAP[R], 32
SLOOP[], 4
IP[], 30, 31, 34, 0
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="g.sc.ss01">
/* VTT 6.32 compiler */
SVTCA[Y]
MIAP[R], 0, 11
SHP[2], 31
MDAP[R], 31
SHP[2], 24
SRP1[], 24
SHP[1], 34
MDAP[R], 34
SRP1[], 24
SHP[1], 27
SRP1[], 27
SHP[1], 28
MIAP[R], 9, 58
SHP[1], 16
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="gbreve">
/* VTTTalk Unicode 0x11f */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 466, 0, 0
OFFSET[R], 1823, 15, 0



SVTCA[Y]
MDAP[R], 27
MDRP[m&gt;RWh], 51

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="gbreve.sc">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 814, 0, 0
OFFSET[R], 1823, 35, 42



SVTCA[Y]
MDAP[R], 12
MDRP[m&gt;RWh], 35

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="gbreve.sc.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1041, 0, 0
OFFSET[R], 1823, 35, 42



SVTCA[Y]
MDAP[R], 9
MDRP[m&gt;RWh], 37

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="gcaron">
/* VTTTalk Unicode 0x1e7 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 466, 0, 0
OFFSET[R], 1821, 15, 0



SVTCA[Y]
MDAP[R], 27
MDRP[m&gt;RWh], 51

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="gcaron.sc">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 814, 0, 0
OFFSET[R], 1821, 35, 42



SVTCA[Y]
MDAP[R], 12
MDRP[m&gt;RWh], 35

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="gcaron.sc.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1041, 0, 0
OFFSET[R], 1821, 35, 42



SVTCA[Y]
MDAP[R], 9
MDRP[m&gt;RWh], 37

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="gcircumflex">
/* VTTTalk Unicode 0x11d */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 466, 0, 0
OFFSET[R], 1820, 15, 0




SVTCA[Y]
MDAP[R], 27
MDRP[m&gt;RWh], 51

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="gcircumflex.sc">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 814, 0, 0
OFFSET[R], 1820, 35, 42



SVTCA[Y]
MDAP[R], 12
MDRP[m&gt;RWh], 35

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="gcircumflex.sc.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1041, 0, 0
OFFSET[R], 1820, 35, 42



SVTCA[Y]
MDAP[R], 9
MDRP[m&gt;RWh], 37

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="gdotaccent">
/* VTTTalk Unicode 0x121 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 466, 0, 0
OFFSET[R], 1811, 15, 0




SVTCA[Y]
MDAP[R], 27
MDRP[m&gt;RWh], 51

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="gdotaccent.sc">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 814, 0, 0
OFFSET[R], 1811, 35, 42



SVTCA[Y]
MDAP[R], 12
MDRP[m&gt;RWh], 35

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="gdotaccent.sc.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1041, 0, 0
OFFSET[R], 1811, 35, 42



SVTCA[Y]
MDAP[R], 9
MDRP[m&gt;RWh], 37

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="germandbls">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 0, 11, 114
SHP[2], 7
CALL[], 27, 10, 114
CALL[], 32, 1, 114
SHP[2], 22
SRP1[], 0
IP[], 15
MDAP[R], 15
SHP[1], 16
SHP[1], 42
SRP1[], 42
SHP[1], 41
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="germandbls.sc">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 3, 11, 114
SHP[2], 10
MIAP[R], 30, 10
CALL[], 34, 58, 114
SHP[2], 25
SRP2[], 3
IP[], 44
MDAP[R], 44
SRP2[], 34
SLOOP[], 4
IP[], 39, 22, 21, 38
SHP[1], 16
SHP[1], 41
SRP1[], 41
SHP[1], 40
SRP1[], 40
SHP[1], 20
SRP1[], 20
SHP[1], 19
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="grave">
/* VTTTalk Unicode 0x60 (`) */
/* ACT generated Wed May  6 15:33:15 2020 */

OFFSET[R], 1813, 0, 0

    </glyphProgram>

    <glyphProgram name="gravecomb">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 0
SMD[], 128
MDRP[m&gt;RBl], 1
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="gravecomb.case">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1813, 0, 150

    </glyphProgram>

    <glyphProgram name="gravecomb.loclVIET">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 0
SMD[], 128
MDRP[m&gt;RBl], 1
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="greater">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 0
SHP[2], 1
SHP[2], 5
MDAP[R], 5
SHP[1], 4
SLOOP[], 4
IP[], 2, 3, 6, 7
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="greaterequal">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 9
SHP[1], 10
SRP1[], 10
SHP[1], 0
RUTG[]
MDAP[R], 0
SHP[2], 1
SHP[2], 5
RTG[]
MDAP[R], 5
SHP[1], 4
SLOOP[], 4
IP[], 2, 3, 6, 7
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="guillemotleft">
/* VTTTalk Unicode 0xab */
/* ACT generated Wed May  6 15:33:15 2020 */

OFFSET[R], 1657, 0, 0
OFFSET[R], 1657, 150, 0

    </glyphProgram>

    <glyphProgram name="guillemotleft.case">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

OFFSET[R], 1655, 10, 87

    </glyphProgram>

    <glyphProgram name="guillemotleft.sc">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

OFFSET[R], 1678, 0, 0
OFFSET[R], 1678, 150, 0

    </glyphProgram>

    <glyphProgram name="guillemotright">
/* VTTTalk Unicode 0xbb */
/* ACT generated Wed May  6 15:33:15 2020 */

OFFSET[R], 1658, 0, 0
OFFSET[R], 1658, 150, 0

    </glyphProgram>

    <glyphProgram name="guillemotright.case">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

OFFSET[R], 1656, 10, 87

    </glyphProgram>

    <glyphProgram name="guillemotright.sc">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

OFFSET[R], 1679, 0, 0
OFFSET[R], 1679, 150, 0

    </glyphProgram>

    <glyphProgram name="guilsinglleft">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 0
MDRP[m&gt;RGr], 2
IP[], 4
IP[], 1
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="guilsinglleft.case">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

OFFSET[R], 1657, 10, 87

    </glyphProgram>

    <glyphProgram name="guilsinglleft.sc">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 2
IP[], 4
IP[], 1
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="guilsinglright">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 1
MDRP[m&gt;RWh], 3
IP[], 5
IP[], 2
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="guilsinglright.case">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

OFFSET[R], 1658, 10, 87

    </glyphProgram>

    <glyphProgram name="guilsinglright.sc">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 3
IP[], 5
IP[], 2
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="h">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 0, 7, 114
SHP[2], 10
CALL[], 16, 10, 114
SHP[2], 6
SRP1[], 0
IP[], 19
IP[], 20
CALL[], 17, 0, 114
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="h.sc">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 0
SHP[2], 8
MIAP[R], 1, 58
SHP[1], 6
IP[], 10
MDAP[R], 10
SHP[1], 3
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="hbar">
/* VTTTalk Unicode 0x127 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 474, 0, 0
OFFSET[R], 1846, -111, 189



SVTCA[Y]
MDAP[R], 0
MDRP[m&gt;RWh], 23

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="hbar.sc">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

OFFSET[R], 823, 20, 0
OFFSET[R], 1914, 41, 79



SVTCA[Y]
MDAP[R], 10

SMD[], 128

MDRP[m&gt;RWh], 12
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="hcircumflex">
/* VTTTalk Unicode 0x125 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 474, 0, 0
OFFSET[R], 1875, -175, 42

SVTCA[Y]
CALL[], 23, 17, 1, 1, 57, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="hcircumflex.sc">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 823, 0, 0
OFFSET[R], 1820, 46, 42



SVTCA[Y]
MDAP[R], 1
MDRP[m&gt;RWh], 12

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="hookabovecomb">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 0
SHP[2], 1
SMD[], 192
MDRP[m&gt;RGr], 13
SHP[2], 7
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="hookabovecomb.case">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1834, 0, 150

    </glyphProgram>

    <glyphProgram name="hookabovecomb.loclVIET">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 0
SHP[2], 1
SMD[], 128
MDRP[m&gt;RGr], 13
SHP[2], 7
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="hungarumlaut">
/* VTTTalk Unicode 0x2dd */
/* ACT generated Wed May  6 15:33:15 2020 */

OFFSET[R], 1818, 0, 0

    </glyphProgram>

    <glyphProgram name="hyphen">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 0
SHP[2], 1
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="hyphen.case">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

OFFSET[R], 1638, 10, 87

    </glyphProgram>

    <glyphProgram name="i">
/* VTTTalk Unicode 0x69 (i) */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 481, 0, 0
OFFSET[R], 1894, -175, 0



SVTCA[Y]
MDAP[R], 1
MDRP[m&gt;RWh], 4

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="i.loclTRK">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 481, 0, 0
OFFSET[R], 1811, -175, 0




SVTCA[Y]
MDAP[R], 1
MDRP[m&gt;RWh], 4

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="i.loclTRK.sc">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 829, 0, 0
OFFSET[R], 1811, -168, 42



SVTCA[Y]
MDAP[R], 1
MDRP[m&gt;RWh], 4

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="i.sc">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 0
MIAP[R], 1, 58
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="i.sc.ss01">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 4
SHP[1], 0
SHP[1], 5
MIAP[R], 9, 58
SHP[1], 1
SHP[1], 8
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="iacute">
/* VTTTalk Unicode 0xed */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 481, 0, 0
OFFSET[R], 1815, -175, 0




SVTCA[Y]
MDAP[R], 1
MDRP[m&gt;RWh], 4

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="iacute.sc">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 829, 0, 0
OFFSET[R], 1815, -168, 42



SVTCA[Y]
MDAP[R], 1
MDRP[m&gt;RWh], 4

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="iacute.sc.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1049, 0, 0
OFFSET[R], 1815, -99, 42



SVTCA[Y]
MDAP[R], 9
MDRP[m&gt;RWh], 12

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="iacute_j.loclNLD">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 0, 10, 114
CALL[], 1, 6, 114
MDRP[m&gt;RWh], 7
SHP[2], 23
MDAP[R], 23
SMD[], 128
SRP0[], 7
MDRP[m&gt;RBl], 5
SHP[2], 24
CALL[], 8, 15, 114
SHP[2], 14
CALL[], 18, 6, 114
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="iacute_j.loclNLD.sc">
/* VTT 6.32 compiler */
SVTCA[Y]
MIAP[R], 0, 11
SHP[2], 7
MIAP[R], 17, 58
SHP[1], 11
SHP[1], 16
MDRP[M&gt;RWh], 20
SHP[2], 24
SMD[], 128
MDRP[m&gt;RBl], 21
SHP[2], 25
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="iacute_j.loclNLD.sc.ss01">
/* VTT 6.32 compiler */
SVTCA[Y]
MIAP[R], 0, 11
SHP[2], 7
MIAP[R], 17, 58
SHP[1], 11
MDRP[M&gt;RWh], 20
SHP[2], 24
SMD[], 128
MDRP[m&gt;RBl], 21
SHP[2], 25
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="ibreve">
/* VTTTalk Unicode 0x12d */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 481, 0, 0
OFFSET[R], 1909, -175, 0




SVTCA[Y]
MDAP[R], 1
MDRP[m&gt;RWh], 4

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="ibreve.sc">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 829, 0, 0
OFFSET[R], 1909, -168, 42



SVTCA[Y]
MDAP[R], 1
MDRP[m&gt;RWh], 4

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="ibreve.sc.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1049, 0, 0
OFFSET[R], 1909, -99, 42



SVTCA[Y]
MDAP[R], 9
MDRP[m&gt;RWh], 12

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="icircumflex">
/* VTTTalk Unicode 0xee */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 481, 0, 0
OFFSET[R], 1907, -175, 0




SVTCA[Y]
MDAP[R], 1
MDRP[m&gt;RWh], 4

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="icircumflex.sc">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 829, 0, 0
OFFSET[R], 1907, -168, 42



SVTCA[Y]
MDAP[R], 1
MDRP[m&gt;RWh], 4

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="icircumflex.sc.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1049, 0, 0
OFFSET[R], 1907, -99, 42



SVTCA[Y]
MDAP[R], 9
MDRP[m&gt;RWh], 12

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="idieresis">
/* VTTTalk Unicode 0xef */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 481, 0, 0
OFFSET[R], 1906, -175, 0




SVTCA[Y]
MDAP[R], 1
MDRP[m&gt;RWh], 4
MDRP[m&gt;RWh], 16

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="idieresis.sc">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 829, 0, 0
OFFSET[R], 1906, -168, 42



SVTCA[Y]
MDAP[R], 1
MDRP[m&gt;RWh], 4
MDRP[m&gt;RWh], 16

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="idieresis.sc.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1049, 0, 0
OFFSET[R], 1906, -99, 42



SVTCA[Y]
MDAP[R], 9
MDRP[m&gt;RWh], 12
MDRP[m&gt;RWh], 24

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="igrave">
/* VTTTalk Unicode 0xec */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 481, 0, 0
OFFSET[R], 1813, -175, 0




SVTCA[Y]
MDAP[R], 1
MDRP[m&gt;RWh], 4
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="igrave.sc">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 829, 0, 0
OFFSET[R], 1813, -168, 42



SVTCA[Y]
MDAP[R], 1
MDRP[m&gt;RWh], 4

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="igrave.sc.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1049, 0, 0
OFFSET[R], 1813, -99, 42



SVTCA[Y]
MDAP[R], 9
MDRP[m&gt;RWh], 12

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="ij">
/* VTTTalk Unicode 0x133 */
/* ACT generated Wed May  6 15:33:15 2020 */

OFFSET[R], 480, 0, 0
OFFSET[R], 497, 250, 0

    </glyphProgram>

    <glyphProgram name="ij.sc">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 0, 11, 114
SHP[2], 7
MIAP[R], 11, 58
SHP[1], 17
SRP1[], 17
SHP[1], 16
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="ij.sc.ss01">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 11
SHP[2], 7
SHP[1], 17
SHP[2], 16
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="imacron">
/* VTTTalk Unicode 0x12b */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 481, 0, 0
OFFSET[R], 1911, -175, 0



SVTCA[Y]
MDAP[R], 1
MDRP[m&gt;RWh], 4
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="imacron.sc">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 829, 0, 0
OFFSET[R], 1911, -168, 42



SVTCA[Y]
MDAP[R], 1
MDRP[m&gt;RWh], 4

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="imacron.sc.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1049, 0, 0
OFFSET[R], 1911, -99, 42



SVTCA[Y]
MDAP[R], 9
MDRP[m&gt;RWh], 12

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="infinity">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 0
SHP[2], 48
SHP[2], 24
MDAP[R], 24
SHP[1], 56
SHP[1], 40
MDAP[R], 40
SHP[1], 8
SHP[2], 32
MDAP[R], 32
SHP[1], 16
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="integral">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 0
SHP[2], 6
MDAP[R], 13
SHP[1], 20
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="iogonek">
/* VTTTalk Unicode 0x12f */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 481, 0, 0
OFFSET[R], 1894, -175, 0
OFFSET[R], 1895, -166, 0



SVTCA[Y]
MDAP[R], 1
MDRP[m&gt;RWh], 4

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="iogonek.sc">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 829, 0, 0
OFFSET[R], 1895, -159, 0

    </glyphProgram>

    <glyphProgram name="iogonek.sc.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1049, 0, 0
OFFSET[R], 1895, -90, 0

    </glyphProgram>

    <glyphProgram name="itilde">
/* VTTTalk Unicode 0x129 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 481, 0, 0
OFFSET[R], 1910, -175, 0


SVTCA[Y]
MDAP[R], 1
MDRP[m&gt;RWh], 4
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="itilde.sc">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 829, 0, 0
OFFSET[R], 1910, -168, 42



SVTCA[Y]
MDAP[R], 1
MDRP[m&gt;RWh], 4

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="itilde.sc.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1049, 0, 0
OFFSET[R], 1910, -99, 42



SVTCA[Y]
MDAP[R], 9
MDRP[m&gt;RWh], 12

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="j">
/* VTTTalk Unicode 0x6a (j) */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 498, 0, 0
OFFSET[R], 1894, -170, 0



SVTCA[Y]
MDAP[R], 10
MDRP[m&gt;RWh], 15

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="j.sc">
/* VTT 6.32 compiler */
SVTCA[Y]
MIAP[R], 0, 11
SHP[2], 7
MIAP[R], 12, 58
SHP[1], 11
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="j.sc.ss01">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 0
SHP[2], 7
MIAP[R], 12, 58
SHP[1], 11
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="jcircumflex">
/* VTTTalk Unicode 0x135 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 498, 0, 0
OFFSET[R], 1907, -170, 0



SVTCA[Y]
MDAP[R], 10
MDRP[m&gt;RWh], 15
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="jcircumflex.sc">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 847, 0, 0
OFFSET[R], 1907, -122, 42



SVTCA[Y]
MDAP[R], 12
MDRP[m&gt;RWh], 17

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="jcircumflex.sc.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1066, 0, 0
OFFSET[R], 1907, -122, 42




SVTCA[Y]
MDAP[R], 12
MDRP[m&gt;RWh],20

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="k">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 3, 6, 114
CALL[], 6, 10, 114
SHP[2], 10
SRP1[], 3
SLOOP[], 6
IP[], 0, 1, 5, 11, 4, 12
CALL[], 7, 0, 114
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="k.sc">
/* VTT 6.32 compiler */
SVTCA[Y]
MIAP[R], 2, 58
SHP[1], 8
MDAP[R], 6
SHP[1], 10
SRP2[], 2
SLOOP[], 6
IP[], 0, 1, 5, 11, 4, 12
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="kgreenlandic">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 6, 10, 114
SHP[2], 10
MDAP[R], 10
CALL[], 7, 6, 114
SHP[2], 2
MDAP[R], 2
SRP1[], 6
SLOOP[], 4
IP[], 0, 1, 11, 12
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="kgreenlandic.sc">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 850, 0, 0

    </glyphProgram>

    <glyphProgram name="l">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 0, 10, 114
CALL[], 1, 0, 114
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="l.sc">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 0
SHP[2], 3
MIAP[R], 1, 58
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="l.ss01">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 0, 11, 114
SHP[2], 9
CALL[], 4, 0, 114
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="lacute">
/* VTTTalk Unicode 0x13a */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 505, 0, 0
OFFSET[R], 1815, -175, 225
SVTCA[Y]
CALL[], 4, 1, 1, 1, 75, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="lacute.sc">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 854, 0, 0
OFFSET[R], 1815, -168, 42



SVTCA[Y]
MDAP[R], 1
MDRP[m&gt;RWh], 6

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="lacute.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 697, 0, 0
OFFSET[R], 1815, -175, 225

SVTCA[Y]
CALL[], 16, 4, 1, 1, 57, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="lcaron">
/* VTTTalk Unicode 0x13e */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 505, 0, 0
OFFSET[R], 1819, -65, 42

SVTCA[Y]
CALL[], 5, 1, 1, 1, 20, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="lcaron.sc">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 854, 0, 0
OFFSET[R], 1819, 76, -141

SVTCA[Y]
CALL[], 7, 1, 1, 1, 20, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="lcaron.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 697, 0, 0
OFFSET[R], 1819, -67, 42

SVTCA[Y]
CALL[], 17, 4, 1, 1, 20, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="ldot">
/* VTTTalk Unicode 0x140 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 505, 0, 0
OFFSET[R], 1625, 165, 83

    </glyphProgram>

    <glyphProgram name="ldot.sc">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 854, 0, 0
OFFSET[R], 1622, 199, -132

    </glyphProgram>

    <glyphProgram name="ldot.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 697, 0, 0
OFFSET[R], 1625, 165, 83

    </glyphProgram>

    <glyphProgram name="less">
/* VTT 6.32 compiler */
SVTCA[Y]
MIAP[R], 0, 18
SHP[2], 7
SHP[2], 3
MDAP[R], 3
SHP[1], 4
SLOOP[], 4
IP[], 5, 6, 2, 1
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="lessequal">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 11
SHP[1], 10
SRP1[], 10
SHP[1], 0
RUTG[]
MDAP[R], 0
SHP[2], 7
SHP[2], 3
RTG[]
MDAP[R], 3
SHP[1], 4
SLOOP[], 4
IP[], 6, 5, 1, 2
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="lira">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 0, 12, 114
SHP[2], 1
SHP[2], 20
CALL[], 9, 5, 114
SHP[2], 16
SRP2[], 0
IP[], 22
MDAP[R], 22
SHP[1], 21
MDRP[m&gt;RWh], 25
SHP[2], 26
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="logicalnot">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 5
SHP[1], 4
SRP1[], 4
SHP[1], 2
MDAP[R], 2
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="longs">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 4, 1, 114
SHP[2], 11
CALL[], 15, 10, 114
MDAP[R], 17
SHP[1], 16
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="lozenge">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 0
SHP[2], 4
MDAP[R], 2
SHP[1], 6
SLOOP[], 4
IP[], 3, 7, 1, 5
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="lslash">
/* VTTTalk Unicode 0x142 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 505, 0, 0
OFFSET[R], 1848, -28, -27

    </glyphProgram>

    <glyphProgram name="lslash.sc">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 854, 0, 0
OFFSET[R], 1848, -21, -88

    </glyphProgram>

    <glyphProgram name="lslash.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 697, 0, 0
OFFSET[R], 1848, -28, -27

    </glyphProgram>

    <glyphProgram name="m">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 26, 10, 114
SHP[2], 6
SHP[2], 16
CALL[], 27, 6, 114
CALL[], 33, 7, 114
SHP[2], 20
SHP[2], 0
SRP1[], 0
SHP[1], 10
SRP1[], 26
SLOOP[], 4
IP[], 36, 37, 29, 30
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="m.sc">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 0
SHP[2], 8
MIAP[R], 1, 58
SHP[1], 6
SLOOP[], 4
IP[], 12, 4, 9, 13
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="m.sc.ss01">
/* VTT 6.32 compiler */
SVTCA[Y]
MIAP[R], 0, 58
SHP[2], 9
SHP[2], 25
MDAP[R], 25
MDAP[R], 4
SHP[1], 14
SHP[1], 23
IP[], 30
MDAP[R], 30
SRP2[], 4
IP[], 26
IP[], 34
SHP[1], 18
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="macron">
/* VTTTalk Unicode 0xaf */
/* ACT generated Wed May  6 15:33:15 2020 */

OFFSET[R], 1830, 0, 0

    </glyphProgram>

    <glyphProgram name="minus">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 0
SHP[2], 1
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="minute">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 1, 2, 114
MDRP[m&gt;RBl], 0
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="multiply">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 3
SHP[1], 0
SHP[1], 1
MDAP[R], 1
SHP[1], 2
SHP[1], 5
MDAP[R], 5
SHP[1], 4
SRP1[], 3
SHP[1], 7
MDAP[R], 7
SHP[1], 6
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="n">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 0, 7, 114
SHP[2], 10
CALL[], 16, 10, 114
SHP[2], 6
SRP1[], 0
IP[], 19
IP[], 20
CALL[], 17, 6, 114
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="n.sc">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 0
SHP[2], 8
MIAP[R], 1, 58
SHP[1], 6
IP[], 4
IP[], 9
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="n.sc.ss01">
/* VTT 6.32 compiler */
SVTCA[Y]
MIAP[R], 0, 58
SHP[2], 9
SHP[2], 16
MDAP[R], 16
MDAP[R], 4
SHP[1], 14
SRP1[], 14
SLOOP[], 3
IP[], 12, 17, 18
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="nacute">
/* VTTTalk Unicode 0x144 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 516, 0, 0
OFFSET[R], 1815, 35, 0





SVTCA[Y]
MDAP[R], 0
MDRP[m&gt;RWh], 26
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="nacute.sc">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 865, 0, 0
OFFSET[R], 1815, 46, 42



SVTCA[Y]
MDAP[R], 1
MDRP[m&gt;RWh], 12

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="nacute.sc.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1072, 0, 0
OFFSET[R], 1815, 42, 42




SVTCA[Y]
MDAP[R], 0
MDRP[m&gt;RWh],24

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="napostrophe">
/* VTTTalk Unicode 0x149 */
/* ACT generated Wed May  6 15:33:15 2020 */

OFFSET[R], 1796, -4, 0
OFFSET[R], 516, 39, 0

    </glyphProgram>

    <glyphProgram name="napostrophe.sc">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

OFFSET[R], 1796, -62, -100
OFFSET[R], 865, 27, 0

    </glyphProgram>

    <glyphProgram name="ncaron">
/* VTTTalk Unicode 0x148 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 516, 0, 0
OFFSET[R], 1821, 35, 0




SVTCA[Y]
MDAP[R], 0
MDRP[m&gt;RWh], 30
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="ncaron.sc">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 865, 0, 0
OFFSET[R], 1821, 46, 42


SVTCA[Y]
MDAP[R], 1
MDRP[m&gt;RWh], 12

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="ncaron.sc.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1072, 0, 0
OFFSET[R], 1821, 42, 42



SVTCA[Y]
MDAP[R], 0
MDRP[m&gt;RWh],21

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="nine">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 0, 5, 114
SHP[2], 34
CALL[], 8, 13, 114
SHP[2], 15
SRP2[], 0
IP[], 26
MDAP[R], 26
SLOOP[], 3
IP[], 22, 45, 21
SHP[1], 41
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="nine.dnom">
/* VTT 6.32 compiler */
SVTCA[Y]
MIAP[R], 0, 13
SHP[2], 7
MIRP[m&lt;RGr], 25, 61
SHP[2], 39
IP[], 17
MDAP[R], 17
SHP[1], 32
SLOOP[], 5
IP[], 10, 28, 35, 14, 13
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="nine.numr">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1564, 0, 285

    </glyphProgram>

    <glyphProgram name="nine.osf">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1494, 0, -100

    </glyphProgram>

    <glyphProgram name="nine.sinf">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1564, 0, -194

    </glyphProgram>

    <glyphProgram name="nine.subs">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1564, 0, -194

    </glyphProgram>

    <glyphProgram name="nine.sups">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1564, 0, 327

    </glyphProgram>

    <glyphProgram name="nine.tf">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 0, 5, 114
SHP[2], 36
CALL[], 9, 13, 114
SHP[2], 16
SRP2[], 0
IP[], 28
MDAP[R], 28
SLOOP[], 5
IP[], 24, 48, 23, 4, 20
SHP[1], 44
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="nine.tosf">
/* VTT 6.32 compiler */
SVTCA[Y]
MIAP[R], 0, 60
SHP[2], 36
MDAP[R], 9
SHP[1], 16
IP[], 28
MDAP[R], 28
SLOOP[], 5
IP[], 24, 48, 23, 4, 20
SHP[1], 44
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="notequal">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 8
MDRP[m&gt;RWh], 5
SHP[2], 4
SRP1[], 4
SHP[1], 0
SRP1[], 8
SHP[1], 9
SRP1[], 9
SHP[1], 1
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="ntilde">
/* VTTTalk Unicode 0xf1 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 516, 0, 0
OFFSET[R], 1826, 35, 0



SVTCA[Y]
MDAP[R], 0
MDRP[m&gt;RWh], 23
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="ntilde.sc">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 865, 0, 0
OFFSET[R], 1826, 46, 42


SVTCA[Y]
MDAP[R], 1
MDRP[m&gt;RWh], 12

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="ntilde.sc.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1072, 0, 0
OFFSET[R], 1826, 42, 42



SVTCA[Y]
MDAP[R], 0
MDRP[m&gt;RWh],21

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="numbersign">
/* VTT 6.32 compiler */
SVTCA[Y]
MIAP[R], 0, 8
CALL[], 1, 2, 114
MIAP[R], 8, 8
CALL[], 9, 2, 114
SRP2[], 8
IP[], 5
MDAP[R], 5
SHP[1], 4
MDRP[m&gt;RWh], 12
SHP[2], 13
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="o">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 0, 11, 114
SHP[2], 16
CALL[], 8, 7, 114
SHP[2], 24
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="o.sc">
/* VTT 6.32 compiler */
SVTCA[Y]
MIAP[R], 0, 11
SHP[2], 16
MIAP[R], 8, 58
SHP[1], 24
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="oacute">
/* VTTTalk Unicode 0xf3 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 527, 0, 0
OFFSET[R], 1815, 5, 0



SVTCA[Y]
MDAP[R], 8
MDRP[m&gt;RWh], 32

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="oacute.sc">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 875, 0, 0
OFFSET[R], 1815, 47, 42



SVTCA[Y]
MDAP[R], 8
MDRP[m&gt;RWh], 32

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="obreve">
/* VTTTalk Unicode 0x14f */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 527, 0, 0
OFFSET[R], 1823, 5, 0



SVTCA[Y]
MDAP[R], 8
MDRP[m&gt;RWh], 32

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="obreve.sc">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 875, 0, 0
OFFSET[R], 1823, 47, 42



SVTCA[Y]
MDAP[R], 8
MDRP[m&gt;RWh], 32

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="ocircumflex">
/* VTTTalk Unicode 0xf4 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 527, 0, 0
OFFSET[R], 1820, 5, 0



SVTCA[Y]
MDAP[R], 8
MDRP[m&gt;RWh], 32

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="ocircumflex.sc">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 875, 0, 0
OFFSET[R], 1820, 47, 42



SVTCA[Y]
MDAP[R], 8
MDRP[m&gt;RWh], 32

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="odieresis">
/* VTTTalk Unicode 0xf6 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 527, 0, 0
OFFSET[R], 1807, 5, 0



SVTCA[Y]
MDAP[R], 8
MDRP[m&gt;RWh], 44
MDRP[m&gt;RWh], 32

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="odieresis.sc">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 875, 0, 0
OFFSET[R], 1807, 47, 42



SVTCA[Y]
MDAP[R], 8
MDRP[m&gt;RWh], 32
MDRP[m&gt;RWh], 44

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="oe">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 0, 11, 114
SHP[2], 16
SHP[2], 32
SRP1[], 32
SHP[1], 64
CALL[], 8, 7, 114
SHP[2], 24
SHP[2], 40
SRP1[], 40
SHP[1], 55
SRP1[], 0
IP[], 48
MDAP[R], 48
SHP[1], 49
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="oe.sc">
/* VTT 6.32 compiler */
SVTCA[Y]
MIAP[R], 8, 58
SHP[1], 11
SRP1[], 11
SHP[1], 26
SRP1[], 26
SHP[1], 10
SRP1[], 8
SHP[1], 23
SRP1[], 23
SHP[1], 9
MIAP[R], 21, 18
SHP[1], 20
SRP1[], 20
SHP[1], 27
SRP1[], 21
SRP2[], 8
IP[], 30
MDAP[R], 30
SHP[1], 31
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="oe.ss01">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 0, 11, 114
SHP[2], 16
CALL[], 8, 7, 114
SHP[2], 24
CALL[], 32, 11, 114
SHP[2], 61
CALL[], 40, 7, 114
SHP[2], 52
SRP2[], 32
SLOOP[], 5
IP[], 45, 46, 44, 48, 47
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="ogonek">
/* VTTTalk Unicode 0x2db */
/* ACT generated Wed May  6 15:33:15 2020 */

OFFSET[R], 1843, 0, 0

    </glyphProgram>

    <glyphProgram name="ograve">
/* VTTTalk Unicode 0xf2 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 527, 0, 0
OFFSET[R], 1813, 5, 0



SVTCA[Y]
MDAP[R], 8
MDRP[m&gt;RWh], 32
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="ograve.sc">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 875, 0, 0
OFFSET[R], 1813, 47, 42



SVTCA[Y]
MDAP[R], 8
MDRP[m&gt;RWh], 32

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="ohorn">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 0, 11, 114
SHP[2], 37
CALL[], 8, 7, 114
MDRP[m&gt;RGr], 19
SHP[2], 18
SHP[1], 45
SRP1[], 45
SHP[1], 30
SRP1[], 30
SHP[1], 29
SRP1[], 29
SHP[1], 26
SRP1[], 26
SHP[1], 12
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="ohorn.sc">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 0, 11, 114
SHP[2], 37
MIAP[R], 8, 58
MDRP[m&gt;RGr], 18
SHP[2], 17
SHP[1], 45
SRP1[], 45
SHP[1], 28
SRP1[], 28
SHP[1], 29
SRP1[], 29
SHP[1], 12
SHP[1], 25
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="ohungarumlaut">
/* VTTTalk Unicode 0x151 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 527, 0, 0
OFFSET[R], 1818, 5, 0



SVTCA[Y]
MDAP[R], 8
MDRP[m&gt;RWh], 35
MDRP[m&gt;RWh], 36


IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="ohungarumlaut.sc">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 875, 0, 0
OFFSET[R], 1818, 47, 42




SVTCA[Y]
MDAP[R], 8
MDRP[m&gt;RWh], 35
MDRP[m&gt;RWh], 36

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="omacron">
/* VTTTalk Unicode 0x14d */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 527, 0, 0
OFFSET[R], 1830, 5, 0



SVTCA[Y]
MDAP[R], 8
MDRP[m&gt;RWh], 32
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="omacron.sc">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 875, 0, 0
OFFSET[R], 1830, 47, 42



SVTCA[Y]
MDAP[R], 8
MDRP[m&gt;RWh], 32

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="one">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 4, 4, 114
SHP[2], 3
SRP1[], 3
SHP[1], 1
CALL[], 6, 12, 114
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="one.dnom">
/* VTT 6.32 compiler */
SVTCA[Y]
MIAP[R], 4, 12
MIRP[m&lt;RGr], 11, 61
SHP[2], 10
SHP[2], 8
SLOOP[], 4
SHP[1], 5, 1, 7, 0
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="one.numr">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1556, 0, 285

    </glyphProgram>

    <glyphProgram name="one.osf">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 0
MIAP[R], 4, 59
SHP[1], 3
SRP1[], 3
SHP[1], 1
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="one.sinf">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1556, 0, -194

    </glyphProgram>

    <glyphProgram name="one.subs">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1556, 0, -194

    </glyphProgram>

    <glyphProgram name="one.sups">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1556, 0, 327

    </glyphProgram>

    <glyphProgram name="one.tf">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 4
SHP[1], 5
SHP[1], 1
SRP1[], 5
SHP[1], 7
SRP1[], 7
SHP[1], 0
CALL[], 11, 4, 114
SHP[2], 10
SRP1[], 10
SHP[1], 8
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="one.tosf">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 4
SHP[1], 5
SHP[1], 1
SRP1[], 5
SHP[1], 7
SRP1[], 7
SHP[1], 0
MIAP[R], 11, 59
SHP[1], 10
SRP1[], 10
SHP[1], 8
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="oneeighth">
/* VTTTalk Unicode 0x215b */
/* ACT generated Wed May  6 15:33:15 2020 */

OFFSET[R], 1566, 0, 0
OFFSET[R], 1595, 430, 0
OFFSET[R], 1563, 590, 0

    </glyphProgram>

    <glyphProgram name="onehalf">
/* VTTTalk Unicode 0xbd */
/* ACT generated Wed May  6 15:33:15 2020 */

OFFSET[R], 1566, 0, 0
OFFSET[R], 1595, 430, 0
OFFSET[R], 1557, 590, 0

    </glyphProgram>

    <glyphProgram name="onequarter">
/* VTTTalk Unicode 0xbc */
/* ACT generated Wed May  6 15:33:15 2020 */

OFFSET[R], 1566, 0, 0
OFFSET[R], 1595, 430, 0
OFFSET[R], 1559, 590, 0

    </glyphProgram>

    <glyphProgram name="ordfeminine">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 13
SHP[1], 6
SHP[1], 18
MDAP[R], 18
SHP[1], 0
MDAP[R], 0
SRP1[], 18
SHP[1], 33
SRP2[], 13
IP[], 26
MDAP[R], 26
SHP[1], 25
SHP[1], 36
SRP1[], 36
SHP[1], 37
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="ordmasculine">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 8
SHP[1], 22
SHP[1], 0
MDAP[R], 0
SHP[2], 16
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="oslash">
/* VTTTalk Unicode 0xf8 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 527, 0, 0
OFFSET[R], 1849, 2, 0

    </glyphProgram>

    <glyphProgram name="oslash.sc">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 875, 0, 0
OFFSET[R], 1915, 16, 0

    </glyphProgram>

    <glyphProgram name="oslashacute">
/* VTTTalk Unicode 0x1ff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 555, 0, 0
OFFSET[R], 1815, 5, 0



SVTCA[Y]
MDAP[R], 8
MDRP[m&gt;RWh], 36

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="oslashacute.sc">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 903, 0, 0
OFFSET[R], 1815, 38, 42



SVTCA[Y]
MDAP[R], 8
MDRP[m&gt;RWh], 36

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="otilde">
/* VTTTalk Unicode 0xf5 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 527, 0, 0
OFFSET[R], 1826, 5, 0



SVTCA[Y]
MDAP[R], 8
MDRP[m&gt;RWh], 32

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="otilde.sc">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 875, 0, 0
OFFSET[R], 1826, 47, 42



SVTCA[Y]
MDAP[R], 8
MDRP[m&gt;RWh], 32

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="p">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 0, 11, 114
SHP[2], 23
CALL[], 8, 7, 114
SHP[2], 31
CALL[], 16, 14, 114
CALL[], 17, 6, 114
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="p.sc">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 0
MIAP[R], 1, 58
IP[], 11
MDAP[R], 11
SHP[1], 12
SHP[1], 15
SRP1[], 1
SHP[1], 23
SRP1[], 23
SHP[1], 24
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="paragraph">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 0
SHP[2], 12
MDAP[R], 12
RUTG[]
MDAP[R], 9
SHP[1], 1
SHP[1], 14
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="parenleft">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 6
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="parenleft.case">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

OFFSET[R], 1626, 10, 67

    </glyphProgram>

    <glyphProgram name="parenright">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 7
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="parenright.case">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

OFFSET[R], 1627, 10, 67

    </glyphProgram>

    <glyphProgram name="partialdiff">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 0, 19, 114
SHP[2], 35
MDAP[R], 27
SHP[1], 20
IP[], 8
MDAP[R], 8
IP[], 39
IP[], 13
SHP[1], 43
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="percent">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 12, 5, 114
SHP[2], 1
MDAP[R], 1
SHP[2], 26
SRP0[], 12
MDRP[m&gt;RGr], 4
SHP[2], 20
CALL[], 32, 13, 114
SHP[2], 3
MDAP[R], 3
SHP[2], 48
SRP0[], 32
MDRP[m&gt;RGr], 40
SHP[2], 54
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="period">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 0, 11, 114
SHP[2], 6
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="period.sc">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 0, 11, 114
SHP[2], 6
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="periodcentered">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 0
SHP[2], 6
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="periodcentered.case">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

OFFSET[R], 1614, 10, 83

    </glyphProgram>

    <glyphProgram name="periodcentered.loclCAT">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 0
SHP[2], 6
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="periodcentered.loclCAT.case">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 0
SHP[2], 6
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="periodcentered.loclCAT.sc">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 0
SHP[2], 6
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="periodcentered.sc">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 0
SHP[2], 6
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="perthousand">
/* VTT 6.32 compiler */
SVTCA[Y]
MIAP[R], 12, 5
SHP[1], 1
MDAP[R], 1
SRP1[], 12
SHP[1], 26
SRP0[], 12
MDRP[m&gt;RGr], 4
SHP[2], 20
MIAP[R], 32, 13
SHP[1], 3
MDAP[R], 3
SRP1[], 32
SHP[1], 48
SRP0[], 32
MDRP[m&gt;RGr], 40
SHP[2], 54
SHP[2], 68
MDAP[R], 68
SHP[1], 82
SRP1[], 32
SHP[1], 60
MDAP[R], 60
SHP[1], 76
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="peseta">
/* VTTTalk Unicode 0x20a7 */
/* ACT generated Wed May  6 15:33:15 2020 */

OFFSET[R], 165, 0, 0
OFFSET[R], 587, 715, 0
OFFSET[R], 573, 1103, 0

    </glyphProgram>

    <glyphProgram name="pi">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 7, 6, 114
SHP[2], 10
SHP[2], 18
SHP[2], 22
CALL[], 17, 10, 114
SHP[2], 21
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="plus">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 5
SHP[1], 1
SHP[1], 4
SRP1[], 4
SHP[1], 0
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="plusminus">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 0
SHP[2], 1
SRP1[], 1
SHP[1], 4
RUTG[]
MDAP[R], 4
SHP[1], 8
RTG[]
MDAP[R], 8
SHP[1], 9
SRP1[], 9
SHP[1], 5
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="prime">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 1, 2, 114
SMD[], 128
MDRP[m&gt;RBl], 0
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="product">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 0
SHP[2], 4
CALL[], 1, 2, 114
SHP[2], 6
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="q">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 0, 11, 114
SHP[2], 16
CALL[], 8, 7, 114
SHP[2], 24
CALL[], 32, 14, 114
CALL[], 36, 6, 114
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="q.sc">
/* VTT 6.32 compiler */
SVTCA[Y]
MIAP[R], 8, 58
SHP[1], 39
MDAP[R], 16
SHP[1], 25
MIAP[R], 0, 11
SHP[2], 31
SHP[2], 20
SRP1[], 20
SHP[1], 21
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="q.sc.ss01">
/* VTT 6.32 compiler */
SVTCA[Y]
MIAP[R], 8, 11
SHP[1], 0
MDAP[R], 0
SRP1[], 8
SHP[1], 24
SRP1[], 24
SHP[1], 3
MDAP[R], 3
MIAP[R], 16, 58
SHP[1], 32
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="q.sc.ss01.BRACKET.170">
/* VTT 6.32 compiler */
SVTCA[Y]
MIAP[R], 4, 11
MDRP[m&gt;RBl], 0
SHP[1], 20
SRP2[], 20
IP[], 1
MDAP[R], 12
SHP[1], 28
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="question">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 17, 3, 114
SHP[2], 10
CALL[], 29, 9, 114
SHP[2], 35
SRP1[], 35
SHP[1], 0
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="question.sc">
/* VTT 6.32 compiler */
SVTCA[Y]
MIAP[R], 16, 58
SHP[1], 9
MDAP[R], 27
SHP[1], 33
SRP1[], 33
SHP[1], 0
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="questiondown">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 0
SHP[2], 22
CALL[], 35, 7, 114
SHP[2], 29
SRP1[], 29
SHP[1], 11
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="questiondown.sc">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 0
SHP[2], 20
MIAP[R], 33, 58
SHP[1], 27
SRP1[], 27
SHP[1], 10
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="quotedbl">
/* VTTTalk Unicode 0x22 (") */
/* ACT generated Wed May  6 15:33:15 2020 */

OFFSET[R], 1660, 0, 0
OFFSET[R], 1660, 150, 0

    </glyphProgram>

    <glyphProgram name="quotedbl.sc">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

OFFSET[R], 1681, 0, 0
OFFSET[R], 1681, 150, 0

    </glyphProgram>

    <glyphProgram name="quotedblbase">
/* VTTTalk Unicode 0x201e */
/* ACT generated Wed May  6 15:33:15 2020 */

OFFSET[R], 1649, 0, 0
OFFSET[R], 1649, 130, 0

    </glyphProgram>

    <glyphProgram name="quotedblbase.sc">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

OFFSET[R], 1670, -3, 0
OFFSET[R], 1670, 127, 0

    </glyphProgram>

    <glyphProgram name="quotedblleft">
/* VTTTalk Unicode 0x201c */
/* ACT generated Wed May  6 15:33:15 2020 */

OFFSET[R], 1653, 0, 0
OFFSET[R], 1653, 130, 0

    </glyphProgram>

    <glyphProgram name="quotedblleft.sc">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

OFFSET[R], 1674, 0, 0
OFFSET[R], 1674, 130, 0

    </glyphProgram>

    <glyphProgram name="quotedblright">
/* VTTTalk Unicode 0x201d */
/* ACT generated Wed May  6 15:33:15 2020 */

OFFSET[R], 1654, 0, 0
OFFSET[R], 1654, 130, 0

    </glyphProgram>

    <glyphProgram name="quotedblright.sc">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

OFFSET[R], 1675, 0, 0
OFFSET[R], 1675, 130, 0

    </glyphProgram>

    <glyphProgram name="quoteleft">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 8
SMD[], 128
MDRP[m&gt;RGr], 16
SLOOP[], 3
IP[], 15, 2, 1
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="quoteleft.sc">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 8
SMD[], 128
MDRP[m&gt;RGr], 0
IP[], 2
IP[], 1
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="quoteright">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 8
SMD[], 128
MDRP[m&gt;RGr], 0
IP[], 2
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="quoteright.sc">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 0
SMD[], 128
MDRP[m&gt;RGr], 8
IP[], 1
IP[], 2
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="quotesinglbase">
/* VTT 6.32 compiler */
SVTCA[Y]
RUTG[]
MDAP[R], 8
SMD[], 128
RTG[]
MDRP[m&gt;RGr], 0
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="quotesinglbase.sc">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 8
MDRP[m&gt;RGr], 0
IP[], 2
IP[], 1
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="quotesingle">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 1, 2, 114
MDRP[m&gt;RBl], 0
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="quotesingle.sc">
/* VTT 6.32 compiler */
SVTCA[Y]
MIAP[R], 1, 58
SMD[], 128
MDRP[m&gt;RBl], 0
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="r">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 0, 10, 114
CALL[], 1, 6, 114
SRP2[], 0
IP[], 3
IP[], 4
CALL[], 7, 7, 114
SHP[2], 11
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="r.sc">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 0
SHP[2], 14
MIAP[R], 1, 58
SHP[1], 27
IP[], 11
MDAP[R], 11
SHP[1], 19
SRP1[], 19
SHP[1], 15
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="racute">
/* VTTTalk Unicode 0x155 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 565, 0, 0
OFFSET[R], 1815, -73, 0



SVTCA[Y]
MDAP[R], 1
MDRP[m&gt;RWh], 16
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="racute.sc">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 913, 0, 0
OFFSET[R], 1815, 12, 42



SVTCA[Y]
MDAP[R], 1
MDRP[m&gt;RWh], 29

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="radical">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 2
SHP[1], 9
IP[], 6
MDAP[R], 6
SHP[1], 5
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="rcaron">
/* VTTTalk Unicode 0x159 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 565, 0, 0
OFFSET[R], 1821, -73, 0



SVTCA[Y]
MDAP[R], 1
MDRP[m&gt;RWh], 16
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="rcaron.sc">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 913, 0, 0
OFFSET[R], 1821, 12, 42



SVTCA[Y]
MDAP[R], 1
MDRP[m&gt;RWh], 29

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="registered">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 0, 9, 114
SHP[2], 24
SRP1[], 24
SHP[1], 44
MDAP[R], 44
SHP[1], 20
MDAP[R], 20
CALL[], 10, 3, 114
SHP[2], 34
SRP1[], 34
SHP[1], 45
MDAP[R], 45
SHP[1], 63
SRP2[], 44
IP[], 53
MDAP[R], 53
SHP[1], 55
SRP1[], 55
SHP[1], 21
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="ring">
/* VTTTalk Unicode 0x2da */
/* ACT generated Wed May  6 15:33:15 2020 */

OFFSET[R], 1824, 0, 0

    </glyphProgram>

    <glyphProgram name="s">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 0, 11, 114
SHP[2], 7
CALL[], 22, 7, 114
SHP[2], 29
SRP2[], 0
SLOOP[], 4
IP[], 40, 10, 32, 18
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="s.sc">
/* VTT 6.32 compiler */
SVTCA[Y]
MIAP[R], 4, 11
SHP[1], 11
MIAP[R], 26, 58
SHP[1], 33
SRP2[], 4
SLOOP[], 4
IP[], 14, 0, 36, 22
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="sacute">
/* VTTTalk Unicode 0x15b */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 573, 0, 0
OFFSET[R], 1815, -68, 0



SVTCA[Y]
MDAP[R], 22
MDRP[m&gt;RWh], 44

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="sacute.sc">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 921, 0, 0
OFFSET[R], 1815, -33, 42



SVTCA[Y]
MDAP[R], 26
MDRP[m&gt;RWh], 47

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="scaron">
/* VTTTalk Unicode 0x161 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 573, 0, 0
OFFSET[R], 1821, -68, 0



SVTCA[Y]
MDAP[R], 22
MDRP[m&gt;RWh], 44

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="scaron.sc">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 921, 0, 0
OFFSET[R], 1821, -33, 42




SVTCA[Y]
MDAP[R], 26
MDRP[m&gt;RWh], 44

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="scedilla">
/* VTTTalk Unicode 0x15f */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 573, 0, 0
OFFSET[R], 1842, -68, 0

    </glyphProgram>

    <glyphProgram name="scedilla.sc">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 921, 0, 0
OFFSET[R], 1842, -33, 0

    </glyphProgram>

    <glyphProgram name="scircumflex">
/* VTTTalk Unicode 0x15d */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 573, 0, 0
OFFSET[R], 1820, -68, 0



SVTCA[Y]
MDAP[R], 22
MDRP[m&gt;RWh], 44

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="scircumflex.sc">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 921, 0, 0
OFFSET[R], 1820, -33, 42



SVTCA[Y]
MDAP[R], 26
MDRP[m&gt;RWh], 44

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="second">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 1, 2, 114
SHP[2], 5
MDRP[m&gt;RBl], 0
SHP[2], 4
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="section">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 16, 3, 114
SHP[2], 24
MDAP[R], 38
SHP[1], 46
SLOOP[], 12
IP[], 72, 49, 0, 1, 35, 4, 64, 57, 61, 60, 27, 12
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="semicolon">
/* VTTTalk Unicode 0x3b (;) */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1605, 0, 471
OFFSET[R], 1606, 0, 0

    </glyphProgram>

    <glyphProgram name="seven">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 0, 12, 114
CALL[], 7, 4, 114
SHP[2], 3
SRP1[], 3
SHP[1], 4
SHP[1], 1
SRP1[], 1
SHP[1], 9
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="seven.dnom">
/* VTT 6.32 compiler */
SVTCA[Y]
MIAP[R], 0, 12
MIRP[m&lt;RGr], 7, 61
SLOOP[], 4
SHP[2], 3, 4, 1, 9
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="seven.numr">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1562, 0, 285

    </glyphProgram>

    <glyphProgram name="seven.osf">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 0
MIAP[R], 7, 59
SHP[1], 3
SRP1[], 3
SLOOP[], 3
SHP[1], 4, 1, 9
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="seven.sinf">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1562, 0, -194

    </glyphProgram>

    <glyphProgram name="seven.subs">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1562, 0, -194

    </glyphProgram>

    <glyphProgram name="seven.sups">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1562, 0, 327

    </glyphProgram>

    <glyphProgram name="seven.tf">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 0
CALL[], 7, 4, 114
SHP[2], 6
MDAP[R], 6
SHP[2], 3
SRP1[], 3
SHP[1], 4
SHP[1], 1
SRP1[], 1
SHP[1], 9
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="seven.tosf">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 0
MIAP[R], 7, 59
SHP[1], 6
MDAP[R], 6
SRP1[], 7
SHP[1], 3
SRP1[], 3
SHP[1], 4
SHP[1], 1
SRP1[], 1
SHP[1], 9
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="seveneighths">
/* VTTTalk Unicode 0x215e */
/* ACT generated Wed May  6 15:33:15 2020 */

OFFSET[R], 1572, 0, 0
OFFSET[R], 1595, 430, 0
OFFSET[R], 1563, 590, 0

    </glyphProgram>

    <glyphProgram name="six">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 0, 13, 114
SHP[2], 34
CALL[], 8, 5, 114
SHP[2], 15
SRP1[], 0
IP[], 26
MDAP[R], 26
SRP2[], 0
SLOOP[], 5
IP[], 18, 4, 21, 45, 22
SHP[1], 41
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="six.dnom">
/* VTT 6.32 compiler */
SVTCA[Y]
MIAP[R], 0, 13
SHP[2], 32
MIRP[m&lt;RGr], 7, 61
SHP[2], 14
IP[], 24
MDAP[R], 24
SRP2[], 0
SLOOP[], 5
IP[], 41, 21, 20, 3, 17
SHP[1], 38
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="six.numr">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1561, 0, 285

    </glyphProgram>

    <glyphProgram name="six.osf">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1491, 0, 0

    </glyphProgram>

    <glyphProgram name="six.sinf">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1561, 0, -194

    </glyphProgram>

    <glyphProgram name="six.subs">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1561, 0, -194

    </glyphProgram>

    <glyphProgram name="six.sups">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1561, 0, 327

    </glyphProgram>

    <glyphProgram name="six.tf">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 0, 13, 114
SHP[2], 36
CALL[], 9, 5, 114
SHP[2], 16
SRP1[], 0
IP[], 28
MDAP[R], 28
SRP2[], 0
SLOOP[], 5
IP[], 4, 20, 23, 48, 24
SHP[1], 44
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="six.tosf">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1511, 0, 0

    </glyphProgram>

    <glyphProgram name="slash">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 1
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="slash.case">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 1
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="space">
/* VTT 6.32 compiler */

    </glyphProgram>

    <glyphProgram name="sterling">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 5, 5, 114
SHP[2], 12
CALL[], 17, 12, 114
SHP[2], 16
SHP[2], 18
SRP2[], 5
IP[], 21
MDAP[R], 21
SHP[1], 22
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="summation">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 0
SHP[2], 13
SRP1[], 13
SHP[1], 1
SHP[1], 12
CALL[], 5, 2, 114
SHP[2], 8
SRP1[], 8
SHP[1], 4
SHP[1], 9
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="t">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 0, 11, 114
SHP[2], 9
CALL[], 16, 6, 114
MDRP[m&gt;RWh], 4
SHP[1], 15
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="t.sc">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 0
MIAP[R], 3, 58
SHP[1], 2
SRP1[], 2
SHP[1], 6
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="t.sc.ss01">
/* VTT 6.32 compiler */
SVTCA[Y]
MIAP[R], 4, 58
SHP[1], 11
SHP[1], 16
MDAP[R], 14
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="t.ss01">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 0, 11, 114
SHP[2], 9
MDAP[R], 16
MDRP[m&gt;RBl], 4
SHP[1], 15
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="tbar">
/* VTTTalk Unicode 0x167 */
/* ACT generated Wed May  6 15:33:15 2020 */

OFFSET[R], 587, 5, 0
OFFSET[R], 1917, -124, -134

    </glyphProgram>

    <glyphProgram name="tbar.sc">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 933, 0, 0
OFFSET[R], 1913, -19, -2

    </glyphProgram>

    <glyphProgram name="tbar.sc.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1083, 0, 0
OFFSET[R], 1913, -19, -7

    </glyphProgram>

    <glyphProgram name="tbar.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

OFFSET[R], 707, 5, 0
OFFSET[R], 1917, -138, -134

    </glyphProgram>

    <glyphProgram name="tcaron">
/* VTTTalk Unicode 0x165 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 587, 0, 0
OFFSET[R], 1916, -52, 0


SVTCA[Y]
MDAP[R], 16
MDRP[m&gt;RWh], 19

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="tcaron.sc">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 933, 0, 0
OFFSET[R], 1821, -76, 42



SVTCA[Y]
MDAP[R], 3
MDRP[m&gt;RWh], 8

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="tcaron.sc.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1083, 0, 0
OFFSET[R], 1821, -76, 42



SVTCA[Y]
MDAP[R], 4
MDRP[m&gt;RWh],18

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="tcaron.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 707, 0, 0
OFFSET[R], 1916, -66, 0

SVTCA[Y]
CALL[], 19, 16, 1, 1, 60, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="thorn">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 0, 11, 114
SHP[2], 23
CALL[], 8, 7, 114
SHP[2], 31
CALL[], 16, 14, 114
CALL[], 17, 0, 114
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="thorn.sc">
/* VTT 6.32 compiler */
SVTCA[Y]
MIAP[R], 20, 10
MDRP[m&gt;RBl], 0
SHP[2], 1
MIAP[R], 21, 58
MDRP[m&gt;RBl], 10
SHP[2], 9
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="three">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 0, 13, 114
SHP[2], 7
CALL[], 19, 4, 114
SHP[2], 18
SRP1[], 18
SHP[1], 16
SRP1[], 16
SHP[1], 21
SRP1[], 0
IP[], 23
MDAP[R], 23
SHP[1], 14
SHP[1], 15
SHP[1], 22
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="three.dnom">
/* VTT 6.32 compiler */
SVTCA[Y]
MIAP[R], 0, 13
MIRP[m&lt;RGr], 19, 61
IP[], 13
MDAP[R], 13
SHP[1], 24
SRP1[], 24
SHP[1], 22
SRP1[], 22
SHP[1], 15
SHP[2], 18
SRP1[], 18
SHP[1], 16
SRP1[], 16
SHP[1], 21
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="three.numr">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1558, 0, 285

    </glyphProgram>

    <glyphProgram name="three.osf">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 0
SHP[2], 7
MDAP[R], 19
SHP[1], 18
SRP1[], 18
SHP[1], 16
SRP1[], 16
SHP[1], 21
SRP1[], 19
IP[], 23
MDAP[R], 23
SHP[1], 14
SHP[1], 15
SHP[1], 22
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="three.sinf">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1558, 0, -194

    </glyphProgram>

    <glyphProgram name="three.subs">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1558, 0, -194

    </glyphProgram>

    <glyphProgram name="three.sups">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1558, 0, 327

    </glyphProgram>

    <glyphProgram name="three.tf">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 0, 13, 114
SHP[2], 7
CALL[], 19, 4, 114
SHP[2], 18
SRP2[], 0
IP[], 13
MDAP[R], 13
SHP[1], 24
SRP1[], 24
SHP[1], 22
SRP1[], 22
SHP[1], 15
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="three.tosf">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 0
SHP[2], 7
MIAP[R], 19, 59
SHP[1], 18
SRP1[], 18
SHP[1], 16
SRP1[], 16
SHP[1], 21
SRP1[], 19
IP[], 23
MDAP[R], 23
SHP[1], 14
SHP[1], 15
SHP[1], 22
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="threeeighths">
/* VTTTalk Unicode 0x215c */
/* ACT generated Wed May  6 15:33:15 2020 */

OFFSET[R], 1568, 0, 0
OFFSET[R], 1595, 430, 0
OFFSET[R], 1563, 590, 0

    </glyphProgram>

    <glyphProgram name="threequarters">
/* VTTTalk Unicode 0xbe */
/* ACT generated Wed May  6 15:33:15 2020 */

OFFSET[R], 1568, 0, 0
OFFSET[R], 1595, 430, 0
OFFSET[R], 1559, 590, 0

    </glyphProgram>

    <glyphProgram name="tilde">
/* VTTTalk Unicode 0x2dc */
/* ACT generated Wed May  6 15:33:15 2020 */

OFFSET[R], 1826, 0, 0

    </glyphProgram>

    <glyphProgram name="tildecomb">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 0
SHP[2], 8
SHP[2], 17
SMD[], 128
MDRP[m&gt;RBl], 12
SHP[2], 5
SHP[2], 20
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="tildecomb.case">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1826, 0, 150

    </glyphProgram>

    <glyphProgram name="tildecomb.loclVIET">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 0
SHP[2], 7
SHP[2], 15
SMD[], 128
MDRP[m&gt;RBl], 11
SHP[2], 4
SHP[2], 18
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="tildecomb.narrow">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 0
SHP[2], 8
SHP[2], 17
SMD[], 128
MDRP[m&gt;RBl], 12
SHP[2], 5
SHP[2], 20
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="tildecomb_acutecomb">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1903, 0, 0
OFFSET[R], 1899, 0, 113

    </glyphProgram>

    <glyphProgram name="tildecomb_acutecomb.case">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1828, 0, 150

    </glyphProgram>

    <glyphProgram name="trademark">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 19, 2, 114
SHP[2], 1
MDAP[R], 1
SHP[1], 13
SHP[1], 5
MDAP[R], 5
SHP[1], 9
SHP[2], 16
MDAP[R], 16
SHP[1], 0
MDAP[R], 0
SHP[1], 8
MDAP[R], 8
SHP[1], 12
MDAP[R], 12
SHP[1], 4
SHP[2], 18
SRP1[], 18
SHP[1], 22
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="triagdn">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 2
MDAP[R], 0
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="triagup">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 1
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="two">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 0, 12, 114
SHP[2], 26
SRP1[], 26
SHP[1], 1
SHP[1], 25
CALL[], 16, 5, 114
SHP[2], 9
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="two.dnom">
/* VTT 6.32 compiler */
SVTCA[Y]
MIAP[R], 0, 12
MIRP[m&lt;RGr], 15, 61
SHP[2], 8
SLOOP[], 3
SHP[1], 23, 22, 1
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="two.numr">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1557, 0, 285

    </glyphProgram>

    <glyphProgram name="two.osf">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 0
SHP[2], 26
SRP1[], 26
SHP[1], 1
SHP[1], 25
MIAP[R], 16, 60
SHP[1], 9
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="two.sinf">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1557, 0, -194

    </glyphProgram>

    <glyphProgram name="two.subs">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1557, 0, -194

    </glyphProgram>

    <glyphProgram name="two.sups">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1557, 0, 327

    </glyphProgram>

    <glyphProgram name="two.tf">
/* VTT 6.32 compiler */
SVTCA[Y]
MIAP[R], 0, 12
SHP[2], 27
SRP1[], 27
SHP[1], 1
SHP[1], 26
CALL[], 17, 5, 114
SHP[2], 10
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="two.tosf">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 0
SHP[2], 27
SRP1[], 27
SHP[1], 1
SHP[1], 25
MIAP[R], 16, 60
SHP[1], 9
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="u">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 0, 11, 114
SHP[2], 10
CALL[], 5, 6, 114
SHP[2], 16
SRP2[], 0
SLOOP[], 3
IP[], 20, 19, 14
CALL[], 17, 10, 114
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="u.sc">
/* VTT 6.32 compiler */
SVTCA[Y]
MIAP[R], 0, 11
SHP[2], 10
MIAP[R], 5, 58
SHP[1], 15
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="u.sc.ss01">
/* VTT 6.32 compiler */
SVTCA[Y]
MIAP[R], 0, 11
SHP[2], 9
SHP[2], 16
MDAP[R], 16
MIAP[R], 4, 58
SHP[1], 14
IP[], 17
IP[], 18
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uacute">
/* VTTTalk Unicode 0xfa */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 595, 0, 0
OFFSET[R], 1815, 29, 0



SVTCA[Y]
MDAP[R], 5
MDRP[m&gt;RWh], 23

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uacute.sc">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 941, 0, 0
OFFSET[R], 1815, 36, 42




SVTCA[Y]
MDAP[R], 5
MDRP[m&gt;RWh], 20

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uacute.sc.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1091, 0, 0
OFFSET[R], 1815, 36, 42



SVTCA[Y]
MDAP[R], 4
MDRP[m&gt;RWh],21

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="ubreve">
/* VTTTalk Unicode 0x16d */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 595, 0, 0
OFFSET[R], 1823, 29, 0



SVTCA[Y]
MDAP[R], 5
MDRP[m&gt;RWh], 23

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="ubreve.sc">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 941, 0, 0
OFFSET[R], 1823, 36, 42



SVTCA[Y]
MDAP[R], 5
MDRP[m&gt;RWh], 20

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="ubreve.sc.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1091, 0, 0
OFFSET[R], 1823, 36, 42



SVTCA[Y]
MDAP[R], 4
MDRP[m&gt;RWh],21

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="ucircumflex">
/* VTTTalk Unicode 0xfb */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 595, 0, 0
OFFSET[R], 1820, 29, 0



SVTCA[Y]
MDAP[R], 5
MDRP[m&gt;RWh], 23

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="ucircumflex.sc">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 941, 0, 0
OFFSET[R], 1820, 36, 42



SVTCA[Y]
MDAP[R], 5
MDRP[m&gt;RWh], 20

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="ucircumflex.sc.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1091, 0, 0
OFFSET[R], 1820, 36, 42



SVTCA[Y]
MDAP[R], 4
MDRP[m&gt;RWh],21

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="udieresis">
/* VTTTalk Unicode 0xfc */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 595, 0, 0
OFFSET[R], 1807, 29, 0



SVTCA[Y]
MDAP[R], 5
MDRP[m&gt;RWh], 23
MDRP[m&gt;RWh], 35

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="udieresis.sc">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 941, 0, 0
OFFSET[R], 1807, 36, 42



SVTCA[Y]
MDAP[R], 5
MDRP[m&gt;RWh], 20
MDRP[m&gt;RWh], 32

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="udieresis.sc.alt">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 0, 11, 114
SHP[2], 10
MIAP[R], 5, 58
SHP[1], 14
MDAP[R], 14
SRP1[], 5
SHP[1], 38
MDAP[R], 38
SHP[1], 32
SHP[1], 26
MDAP[R], 26
SHP[1], 20
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="udieresis.sc.alt.BRACKET.133">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 0, 11, 114
SHP[2], 10
MIAP[R], 5, 58
SHP[1], 14
MDAP[R], 14
SRP1[], 5
SHP[1], 38
MDAP[R], 38
SHP[1], 32
SHP[1], 26
MDAP[R], 26
SHP[1], 20
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="udieresis.sc.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1091, 0, 0
OFFSET[R], 1807, 36, 42


SVTCA[Y]
MDAP[R], 4
MDRP[m&gt;RWh],21
MDRP[m&gt;RWh],33

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="udieresis.sc.ss01.alt">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 24, 11, 114
SHP[2], 33
SRP1[], 33
SHP[1], 41
SHP[1], 42
MIAP[R], 28, 58
SHP[1], 37
MDAP[R], 37
SRP1[], 28
SHP[1], 18
MDAP[R], 18
SHP[1], 12
SHP[1], 6
MDAP[R], 6
SHP[1], 0
MIAP[R], 40, 10
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="udieresis.sc.ss01.alt.BRACKET.133">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 24, 11, 114
SHP[2], 33
SHP[2], 40
MDAP[R], 40
MIAP[R], 28, 58
SHP[1], 37
MDAP[R], 37
SRP1[], 28
SHP[1], 18
MDAP[R], 18
SHP[1], 12
SHP[1], 6
MDAP[R], 6
SHP[1], 0
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="ugrave">
/* VTTTalk Unicode 0xf9 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 595, 0, 0
OFFSET[R], 1813, 29, 0




SVTCA[Y]
MDAP[R], 5
MDRP[m&gt;RWh], 23

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="ugrave.sc">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 941, 0, 0
OFFSET[R], 1813, 36, 42



SVTCA[Y]
MDAP[R], 5
MDRP[m&gt;RWh], 20

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="ugrave.sc.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1091, 0, 0
OFFSET[R], 1813, 36, 42



SVTCA[Y]
MDAP[R], 4
MDRP[m&gt;RWh],21

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uhorn">
/* VTTTalk Unicode 0x1b0 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 595, 0, 0
OFFSET[R], 1838, 240, 0
SVTCA[Y]
CALL[], 24, 15, 0, 0, 0, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="uhorn.sc">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 941, 0, 0
OFFSET[R], 1838, 261, 42

SVTCA[Y]
CALL[], 21, 14, 0, 0, 0, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="uhorn.sc.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1091, 0, 0
OFFSET[R], 1838, 249, 42

    </glyphProgram>

    <glyphProgram name="uhungarumlaut">
/* VTTTalk Unicode 0x171 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 595, 0, 0
OFFSET[R], 1818, 29, 0



SVTCA[Y]
MDAP[R], 5
MDRP[m&gt;RWh], 26
MDRP[m&gt;RWh], 27

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uhungarumlaut.sc">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 941, 0, 0
OFFSET[R], 1818, 36, 42



SVTCA[Y]
MDAP[R], 5
MDRP[m&gt;RWh], 20
MDRP[m&gt;RWh], 24

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uhungarumlaut.sc.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1091, 0, 0
OFFSET[R], 1818, 36, 42



SVTCA[Y]
MDAP[R], 4
MDRP[m&gt;RWh],21
MDRP[m&gt;RWh],25

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="umacron">
/* VTTTalk Unicode 0x16b */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 595, 0, 0
OFFSET[R], 1830, 29, 0



SVTCA[Y]
MDAP[R], 5
MDRP[m&gt;RWh], 23

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="umacron.sc">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 941, 0, 0
OFFSET[R], 1830, 36, 42



SVTCA[Y]
MDAP[R], 5
MDRP[m&gt;RWh], 20

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="umacron.sc.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1091, 0, 0
OFFSET[R], 1830, 36, 42



SVTCA[Y]
MDAP[R], 4
MDRP[m&gt;RWh],21

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="underscore">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 1
SHP[1], 0
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni006A0301">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 498, 0, 0
OFFSET[R], 1815, -170, 0



SVTCA[Y]
MDAP[R], 10
MDRP[m&gt;RWh], 15
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni006A0301.sc">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 847, 0, 0
OFFSET[R], 1815, -122, 42



SVTCA[Y]
MDAP[R], 12
MDRP[m&gt;RWh], 17

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni006A0301.sc.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1066, 0, 0
OFFSET[R], 1815, -122, 42



SVTCA[Y]
MDAP[R], 12
MDRP[m&gt;RWh],20

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni00A0">
/* VTT 6.32 compiler */

    </glyphProgram>

    <glyphProgram name="uni00A40301">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 101, 0, 0
OFFSET[R], 1871, -91, 0
SVTCA[Y]
CALL[], 17, 12, 1, 1, 57, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="uni00A40301.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 326, 0, 0
OFFSET[R], 1871, -91, 0



SVTCA[Y]
CALL[], 17, 12, 1, 1, 57, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="uni00AD">
/* VTTTalk Unicode 0xad */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1638, 0, 0

    </glyphProgram>

    <glyphProgram name="uni00B2">
/* VTTTalk Unicode 0xb2 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1557, 0, 327

    </glyphProgram>

    <glyphProgram name="uni00B3">
/* VTTTalk Unicode 0xb3 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1558, 0, 327

    </glyphProgram>

    <glyphProgram name="uni00B5">
/* VTTTalk Unicode 0xb5 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1481, 0, 0

    </glyphProgram>

    <glyphProgram name="uni00B9">
/* VTTTalk Unicode 0xb9 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1556, 0, 327

    </glyphProgram>

    <glyphProgram name="uni0122">
/* VTTTalk Unicode 0x122 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 71, 0, 0
OFFSET[R], 1841, 102, 0

    </glyphProgram>

    <glyphProgram name="uni0122.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 301, 0, 0
OFFSET[R], 1841, 102, 0

    </glyphProgram>

    <glyphProgram name="uni0123">
/* VTTTalk Unicode 0x123 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 466, 0, 0
OFFSET[R], 1837, 15, 0




SVTCA[Y]
MDAP[R], 27
MDRP[m&gt;RWh], 51

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0123.sc">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 814, 0, 0
OFFSET[R], 1841, 34, 0

    </glyphProgram>

    <glyphProgram name="uni0123.sc.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1041, 0, 0
OFFSET[R], 1841, 34, 0

    </glyphProgram>

    <glyphProgram name="uni0136">
/* VTTTalk Unicode 0x136 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 104, 0, 0
OFFSET[R], 1841, 70, 0

    </glyphProgram>

    <glyphProgram name="uni0137">
/* VTTTalk Unicode 0x137 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 501, 0, 0
OFFSET[R], 1841, 7, 0

    </glyphProgram>

    <glyphProgram name="uni0137.sc">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 850, 0, 0
OFFSET[R], 1841, 16, 0

    </glyphProgram>

    <glyphProgram name="uni013B">
/* VTTTalk Unicode 0x13b */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 107, 0, 0
OFFSET[R], 1841, 62, 0

    </glyphProgram>

    <glyphProgram name="uni013C">
/* VTTTalk Unicode 0x13c */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 505, 0, 0
OFFSET[R], 1841, -175, 0

    </glyphProgram>

    <glyphProgram name="uni013C.sc">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 854, 0, 0
OFFSET[R], 1841, 9, 0

    </glyphProgram>

    <glyphProgram name="uni013C.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 697, 0, 0
OFFSET[R], 1841, -113, 0

    </glyphProgram>

    <glyphProgram name="uni0145">
/* VTTTalk Unicode 0x145 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 119, 0, 0
OFFSET[R], 1841, 108, 0

    </glyphProgram>

    <glyphProgram name="uni0145.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 332, 0, 0
OFFSET[R], 1841, 101, 0

    </glyphProgram>

    <glyphProgram name="uni0146">
/* VTTTalk Unicode 0x146 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 516, 0, 0
OFFSET[R], 1841, 35, 0

    </glyphProgram>

    <glyphProgram name="uni0146.sc">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 865, 0, 0
OFFSET[R], 1841, 46, 0

    </glyphProgram>

    <glyphProgram name="uni0146.sc.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1072, 0, 0
OFFSET[R], 1841, 40, 0

    </glyphProgram>

    <glyphProgram name="uni0156">
/* VTTTalk Unicode 0x156 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 168, 0, 0
OFFSET[R], 1841, 66, 0

    </glyphProgram>

    <glyphProgram name="uni0157">
/* VTTTalk Unicode 0x157 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 565, 0, 0
OFFSET[R], 1841, -175, 0

    </glyphProgram>

    <glyphProgram name="uni0157.sc">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 913, 0, 0
OFFSET[R], 1841, 12, 0

    </glyphProgram>

    <glyphProgram name="uni0162">
/* VTTTalk Unicode 0x162 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 190, 0, 0
OFFSET[R], 1842, -26, 0

    </glyphProgram>

    <glyphProgram name="uni0162.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 345, 0, 0
OFFSET[R], 1842, -26, 0

    </glyphProgram>

    <glyphProgram name="uni0163">
/* VTTTalk Unicode 0x163 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 587, 0, 0
OFFSET[R], 1842, -59, 0

    </glyphProgram>

    <glyphProgram name="uni0163.sc">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 933, 0, 0
OFFSET[R], 1842, -76, 0

    </glyphProgram>

    <glyphProgram name="uni0163.sc.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1083, 0, 0
OFFSET[R], 1842, -76, 0

    </glyphProgram>

    <glyphProgram name="uni0163.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 707, 0, 0
OFFSET[R], 1842, -73, 0

    </glyphProgram>

    <glyphProgram name="uni018F">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 0, 9, 114
SHP[2], 15
CALL[], 35, 3, 114
SHP[2], 26
SRP1[], 0
IP[], 9
MDAP[R], 9
SHP[1], 6
SHP[1], 10
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni018F.ss01">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 0, 9, 114
SHP[2], 11
CALL[], 31, 3, 114
SHP[2], 22
SRP2[], 0
SLOOP[], 5
IP[], 7, 8, 4, 6, 5
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni01B7">
/* VTTTalk Unicode 0x1b7 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1231, 0, 0

    </glyphProgram>

    <glyphProgram name="uni01C4">
/* VTTTalk Unicode 0x1c4 */
/* ACT generated Wed May  6 15:33:15 2020 */

OFFSET[R], 37, 0, 0
OFFSET[R], 240, 811, 0

    </glyphProgram>

    <glyphProgram name="uni01C4.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

OFFSET[R], 37, 0, 0
OFFSET[R], 393, 811, 0

    </glyphProgram>

    <glyphProgram name="uni01C5">
/* VTTTalk Unicode 0x1c5 */
/* ACT generated Wed May  6 15:33:15 2020 */

OFFSET[R], 37, 0, 0
OFFSET[R], 638, 826, 0

    </glyphProgram>

    <glyphProgram name="uni01C5.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

OFFSET[R], 37, 0, 0
OFFSET[R], 732, 826, 0

    </glyphProgram>

    <glyphProgram name="uni01C6">
/* VTTTalk Unicode 0x1c6 */
/* ACT generated Wed May  6 15:33:15 2020 */

OFFSET[R], 432, 0, 0
OFFSET[R], 638, 673, 0

    </glyphProgram>

    <glyphProgram name="uni01C6.sc">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

OFFSET[R], 780, 0, 0
OFFSET[R], 984, 697, 0

    </glyphProgram>

    <glyphProgram name="uni01C6.sc.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

OFFSET[R], 780, 0, 0
OFFSET[R], 1132, 697, 0




SVTCA[Y]
MDAP[R], 1
MDRP[m&gt;RWh], 42

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni01C6.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

OFFSET[R], 432, 0, 0
OFFSET[R], 732, 671, 0

    </glyphProgram>

    <glyphProgram name="uni01C7">
/* VTTTalk Unicode 0x1c7 */
/* ACT generated Wed May  6 15:33:15 2020 */

OFFSET[R], 107, 0, 0
OFFSET[R], 101, 580, 0

    </glyphProgram>

    <glyphProgram name="uni01C7.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

OFFSET[R], 107, 0, 0
OFFSET[R], 326, 610, 0

    </glyphProgram>

    <glyphProgram name="uni01C8">
/* VTTTalk Unicode 0x1c8 */
/* ACT generated Wed May  6 15:33:15 2020 */

OFFSET[R], 107, 0, 0
OFFSET[R], 497, 580, 0

    </glyphProgram>

    <glyphProgram name="uni01C9">
/* VTTTalk Unicode 0x1c9 */
/* ACT generated Wed May  6 15:33:15 2020 */

OFFSET[R], 505, 0, 0
OFFSET[R], 497, 250, 0

    </glyphProgram>

    <glyphProgram name="uni01C9.sc">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

OFFSET[R], 854, 0, 0
OFFSET[R], 847, 486, 0

    </glyphProgram>

    <glyphProgram name="uni01C9.sc.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

OFFSET[R], 854, 0, 0
OFFSET[R], 1066, 486, 0

    </glyphProgram>

    <glyphProgram name="uni01C9.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

OFFSET[R], 697, 0, 0
OFFSET[R], 497, 259, 0

    </glyphProgram>

    <glyphProgram name="uni01CA">
/* VTTTalk Unicode 0x1ca */
/* ACT generated Wed May  6 15:33:15 2020 */

OFFSET[R], 119, 0, 0
OFFSET[R], 101, 816, 0

    </glyphProgram>

    <glyphProgram name="uni01CA.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

OFFSET[R], 332, 0, 0
OFFSET[R], 326, 800, 0

    </glyphProgram>

    <glyphProgram name="uni01CB">
/* VTTTalk Unicode 0x1cb */
/* ACT generated Wed May  6 15:33:15 2020 */

OFFSET[R], 119, 0, 0
OFFSET[R], 497, 816, 0

    </glyphProgram>

    <glyphProgram name="uni01CB.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

OFFSET[R], 332, 0, 0
OFFSET[R], 497, 800, 0

    </glyphProgram>

    <glyphProgram name="uni01CC">
/* VTTTalk Unicode 0x1cc */
/* ACT generated Wed May  6 15:33:15 2020 */

OFFSET[R], 516, 0, 0
OFFSET[R], 497, 668, 0

    </glyphProgram>

    <glyphProgram name="uni01CC.sc">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

OFFSET[R], 865, 0, 0
OFFSET[R], 847, 692, 0

    </glyphProgram>

    <glyphProgram name="uni01CC.sc.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

OFFSET[R], 1072, 0, 0
OFFSET[R], 1066, 678, 0

    </glyphProgram>

    <glyphProgram name="uni01CD">
/* VTTTalk Unicode 0x1cd */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1, 0, 0
OFFSET[R], 1876, 44, 0
SVTCA[Y]
CALL[], 12, 1, 1, 1, 57, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni01CD.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 247, 0, 0
OFFSET[R], 1876, 102, 0

SVTCA[Y]
CALL[], 24, 5, 1, 1, 45, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni01CE">
/* VTTTalk Unicode 0x1ce */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 396, 0, 0
OFFSET[R], 1821, -27, 0


SVTCA[Y]
MDAP[R], 13
MDRP[m&gt;RWh], 42

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni01CE.sc">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 743, 0, 0
OFFSET[R], 1821, -19, 42



SVTCA[Y]
MDAP[R], 1
MDRP[m&gt;RWh], 12

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni01CE.sc.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 987, 0, 0
OFFSET[R], 1821, 40, 42




SVTCA[Y]
MDAP[R], 5
MDRP[m&gt;RWh], 24

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni01CE.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 643, 0, 0
OFFSET[R], 1821, 17, 0



SVTCA[Y]
MDAP[R], 8
MDRP[m&gt;RWh], 39

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni01D3">
/* VTTTalk Unicode 0x1d3 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 197, 0, 0
OFFSET[R], 1876, 97, 0
SVTCA[Y]
CALL[], 18, 4, 1, 1, 57, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="uni01D3.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 352, 0, 0
OFFSET[R], 1876, 93, 0



SVTCA[Y]
CALL[], 21, 4, 1, 1, 57, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="uni01D4">
/* VTTTalk Unicode 0x1d4 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 595, 0, 0
OFFSET[R], 1821, 29, 0



SVTCA[Y]
MDAP[R], 5
MDRP[m&gt;RWh], 23

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni01D4.sc">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 941, 0, 0
OFFSET[R], 1821, 36, 42



SVTCA[Y]
MDAP[R], 5
MDRP[m&gt;RWh], 20

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni01D4.sc.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1091, 0, 0
OFFSET[R], 1821, 36, 42



SVTCA[Y]
MDAP[R], 4
MDRP[m&gt;RWh],21

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni01E4">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 4
SHP[1], 31
SHP[1], 38
SRP1[], 38
SHP[1], 34
CALL[], 14, 3, 114
SHP[2], 21
SRP1[], 4
IP[], 39
IP[], 0
MDAP[R], 39
MDAP[R], 0
SHP[1], 1
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni01E4.ss01">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 4, 9, 114
SHP[2], 31
CALL[], 14, 3, 114
SHP[2], 21
SRP2[], 4
IP[], 0
RUTG[]
MDAP[R], 0
SLOOP[], 3
IP[], 35, 40, 34
SHP[1], 1
SRP1[], 1
SHP[1], 41
MDAP[R], 41
RTG[]
MIAP[R], 38, 8
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni01E5">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 0, 15, 114
SHP[2], 7
CALL[], 14, 6, 114
CALL[], 31, 7, 114
SHP[2], 47
SRP2[], 0
IP[], 23
MDAP[R], 23
SHP[1], 39
SRP2[], 7
IP[], 19
IP[], 20
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni01E5.sc">
/* VTT 6.32 compiler */
SVTCA[Y]
MIAP[R], 8, 11
SHP[1], 31
SRP1[], 31
SHP[1], 35
MIAP[R], 16, 58
SHP[1], 23
SRP2[], 8
IP[], 0
MDAP[R], 0
SHP[1], 1
SRP1[], 1
SHP[1], 36
MDAP[R], 36
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni01E5.sc.ss01">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 4, 11, 114
SHP[2], 35
MDAP[R], 35
SHP[2], 28
SRP1[], 28
SHP[1], 31
SRP1[], 31
SHP[1], 32
MIAP[R], 13, 58
SHP[1], 20
IP[], 0
MDAP[R], 0
SHP[1], 1
SRP1[], 1
SHP[1], 38
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni01E8">
/* VTTTalk Unicode 0x1e8 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 104, 0, 0
OFFSET[R], 1876, 70, 0
SVTCA[Y]
CALL[], 14, 7, 1, 1, 57, 86
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni01E9">
/* VTTTalk Unicode 0x1e9 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 501, 0, 0
OFFSET[R], 1821, -175, 225
SVTCA[Y]
CALL[], 14, 7, 1, 1, 75, 86
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni01E9.sc">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 850, 0, 0
OFFSET[R], 1821, 16, 42



SVTCA[Y]
MDAP[R], 7
MDRP[m&gt;RWh], 14

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni01EA">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 0
SHP[2], 37
CALL[], 11, 9, 114
SHP[2], 44
SRP1[], 44
SHP[1], 7
SRP1[], 7
SHP[1], 8
SRP1[], 8
SHP[1], 30
CALL[], 21, 3, 114
SHP[2], 54
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni01EB">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 0
SHP[2], 33
CALL[], 11, 11, 114
SHP[2], 40
SHP[2], 8
SRP1[], 8
SHP[1], 7
SRP1[], 7
SHP[1], 26
CALL[], 19, 7, 114
SHP[2], 48
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni01EB.sc">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 0
SHP[2], 33
MIAP[R], 19, 58
SHP[1], 48
CALL[], 11, 11, 114
SHP[2], 40
SHP[2], 8
SRP1[], 8
SHP[1], 7
SHP[1], 27
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni01EE">
/* VTTTalk Unicode 0x1ee */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 68, 0, 0
OFFSET[R], 1876, -13, 0


SVTCA[Y]
CALL[], 32, 19, 1, 1, 57, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="uni01EF">
/* VTTTalk Unicode 0x1ef */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 463, 0, 0
OFFSET[R], 1821, -87, 0




SVTCA[Y]
MDAP[R], 19
MDRP[m&gt;RWh], 31

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni01EF.sc">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 811, 0, 0
OFFSET[R], 1821, -37, 42



SVTCA[Y]
MDAP[R], 19
MDRP[m&gt;RWh], 38

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni01F5.sc">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 814, 0, 0
OFFSET[R], 1815, 35, 42



SVTCA[Y]
MDAP[R], 12
MDRP[m&gt;RWh], 35

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0200">
/* VTTTalk Unicode 0x200 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1, 0, 0
OFFSET[R], 1888, 44, 0
SVTCA[Y]
CALL[], 12, 1, 1, 1, 57, 86
SHC[2], 2
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni0200.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 247, 0, 0
OFFSET[R], 1888, 102, 0

SVTCA[Y]
CALL[], 24, 5, 1, 1, 57, 86
SHC[2], 2
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni0201">
/* VTTTalk Unicode 0x201 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 396, 0, 0
OFFSET[R], 1835, -27, 0


SVTCA[Y]
MDAP[R], 13
MDRP[m&gt;RWh], 42
MDRP[m&gt;RWh], 46

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0201.sc">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 743, 0, 0
OFFSET[R], 1835, -19, 42


SVTCA[Y]
MDAP[R], 1
MDRP[m&gt;RWh], 12
MDRP[m&gt;RWh], 16

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0201.sc.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 987, 0, 0
OFFSET[R], 1835, 40, 42




SVTCA[Y]
MDAP[R], 5
MDRP[m&gt;RWh], 24
MDRP[m&gt;RWh], 28

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0201.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 643, 0, 0
OFFSET[R], 1835, 17, 0



SVTCA[Y]
MDAP[R], 8
MDRP[m&gt;RWh], 39
MDRP[m&gt;RWh], 43

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0202">
/* VTTTalk Unicode 0x202 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1, 0, 0
OFFSET[R], 1889, 44, 0
SVTCA[Y]
CALL[], 12, 1, 1, 1, 57, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni0202.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 247, 0, 0
OFFSET[R], 1889, 102, 0

SVTCA[Y]
CALL[], 24, 5, 1, 1, 57, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni0203">
/* VTTTalk Unicode 0x203 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 396, 0, 0
OFFSET[R], 1836, -27, 0



SVTCA[Y]
MDAP[R], 13
MDRP[m&gt;RWh], 42

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0203.sc">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 743, 0, 0
OFFSET[R], 1836, -19, 42



SVTCA[Y]
MDAP[R], 1
MDRP[m&gt;RWh], 12

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0203.sc.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 987, 0, 0
OFFSET[R], 1836, 40, 42



SVTCA[Y]
MDAP[R], 5
MDRP[m&gt;RWh], 24

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0203.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 643, 0, 0
OFFSET[R], 1836, 17, 0




SVTCA[Y]
MDAP[R], 8
MDRP[m&gt;RWh], 39

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0204">
/* VTTTalk Unicode 0x204 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 45, 0, 0
OFFSET[R], 1888, 59, 0
SVTCA[Y]
CALL[], 12, 8, 1, 1, 57, 86
SHC[2], 2
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni0204.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 277, 0, 0
OFFSET[R], 1888, 36, 0

SVTCA[Y]
CALL[], 47, 17, 1, 1, 57, 86
SHC[2], 1
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni0205">
/* VTTTalk Unicode 0x205 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 439, 0, 0
OFFSET[R], 1835, -6, 0



SVTCA[Y]
MDAP[R], 8
MDRP[m&gt;RWh], 39
MDRP[m&gt;RWh], 43

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0205.sc">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 787, 0, 0
OFFSET[R], 1835, 6, 42



SVTCA[Y]
MDAP[R], 8
MDRP[m&gt;RWh], 12
MDRP[m&gt;RWh], 16

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0205.sc.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1016, 0, 0
OFFSET[R], 1835, -23, 42




SVTCA[Y]
MDAP[R], 19
MDRP[m&gt;RWh], 46
MDRP[m&gt;RWh], 50

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0205.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 672, 0, 0
OFFSET[R], 1835, -10, 0



SVTCA[Y]
MDAP[R], 8
MDRP[m&gt;RWh], 35
MDRP[m&gt;RWh], 39

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0206">
/* VTTTalk Unicode 0x206 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 45, 0, 0
OFFSET[R], 1889, 59, 0
SVTCA[Y]
CALL[], 12, 8, 1, 1, 57, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni0206.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 277, 0, 0
OFFSET[R], 1889, 36, 0

SVTCA[Y]
CALL[], 47, 17, 1, 1, 57, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="uni0207">
/* VTTTalk Unicode 0x207 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 439, 0, 0
OFFSET[R], 1836, -6, 0



SVTCA[Y]
MDAP[R], 8
MDRP[m&gt;RWh], 39

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0207.sc">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 787, 0, 0
OFFSET[R], 1836, 6, 42



SVTCA[Y]
MDAP[R], 8
MDRP[m&gt;RWh], 12

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0207.sc.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1016, 0, 0
OFFSET[R], 1836, -23, 42



SVTCA[Y]
MDAP[R], 19
MDRP[m&gt;RWh], 46

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0207.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 672, 0, 0
OFFSET[R], 1836, -10, 0



SVTCA[Y]
MDAP[R], 8
MDRP[m&gt;RWh], 35

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0208">
/* VTTTalk Unicode 0x208 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 85, 0, 0
OFFSET[R], 1888, -157, 0
SVTCA[Y]
CALL[], 4, 1, 1, 1, 57, 86
SHC[2], 1
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni0208.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 309, 0, 0
OFFSET[R], 1888, -89, 0

SVTCA[Y]
CALL[], 12, 9, 1, 1, 57, 86
SHC[2], 3
SHC[2], 4

    </glyphProgram>

    <glyphProgram name="uni0209">
/* VTTTalk Unicode 0x209 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 481, 0, 0
OFFSET[R], 1835, -175, 0




SVTCA[Y]
MDAP[R], 1
MDRP[m&gt;RWh], 4
MDRP[m&gt;RWh], 8

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0209.sc">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 829, 0, 0
OFFSET[R], 1835, -168, 42



SVTCA[Y]
MDAP[R], 1
MDRP[m&gt;RWh], 4
MDRP[m&gt;RWh], 8

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0209.sc.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1049, 0, 0
OFFSET[R], 1835, -99, 42



SVTCA[Y]
MDAP[R], 9
MDRP[m&gt;RWh], 12
MDRP[m&gt;RWh], 16

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni020A">
/* VTTTalk Unicode 0x20a */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 85, 0, 0
OFFSET[R], 1889, -157, 0
SVTCA[Y]
CALL[], 4, 1, 1, 1, 57, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="uni020A.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 309, 0, 0
OFFSET[R], 1889, -89, 0



SVTCA[Y]
CALL[], 12, 9, 1, 1, 70, 86
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni020B">
/* VTTTalk Unicode 0x20b */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 481, 0, 0
OFFSET[R], 1912, -175, 0



SVTCA[Y]
MDAP[R], 1
MDRP[m&gt;RWh], 4
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni020B.sc">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 829, 0, 0
OFFSET[R], 1912, -168, 42



SVTCA[Y]
MDAP[R], 1
MDRP[m&gt;RWh], 4

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni020B.sc.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1049, 0, 0
OFFSET[R], 1912, -99, 42



SVTCA[Y]
MDAP[R], 9
MDRP[m&gt;RWh], 12

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni020C">
/* VTTTalk Unicode 0x20c */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 130, 0, 0
OFFSET[R], 1888, 118, 0
SVTCA[Y]
CALL[], 40, 10, 1, 1, 54, 86
SHC[2], 2
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni020D">
/* VTTTalk Unicode 0x20d */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 527, 0, 0
OFFSET[R], 1835, 5, 0



SVTCA[Y]
MDAP[R], 8
MDRP[m&gt;RWh], 32
MDRP[m&gt;RWh], 36

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni020D.sc">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 875, 0, 0
OFFSET[R], 1835, 47, 42



SVTCA[Y]
MDAP[R], 8
MDRP[m&gt;RWh], 32
MDRP[m&gt;RWh], 36

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni020E">
/* VTTTalk Unicode 0x20e */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 130, 0, 0
OFFSET[R], 1889, 118, 0

SVTCA[Y]
CALL[], 47, 10, 1, 1, 54, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni020F">
/* VTTTalk Unicode 0x20f */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 527, 0, 0
OFFSET[R], 1836, 5, 0



SVTCA[Y]
MDAP[R], 8
MDRP[m&gt;RWh], 32
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni020F.sc">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 875, 0, 0
OFFSET[R], 1836, 47, 42



SVTCA[Y]
MDAP[R], 8
MDRP[m&gt;RWh], 32

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0210">
/* VTTTalk Unicode 0x210 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 168, 0, 0
OFFSET[R], 1888, 66, 0
SVTCA[Y]
CALL[], 29, 1, 1, 1, 57, 86
SHC[2], 3
SHC[2], 4

    </glyphProgram>

    <glyphProgram name="uni0211">
/* VTTTalk Unicode 0x211 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 565, 0, 0
OFFSET[R], 1835, -73, 0



SVTCA[Y]
MDAP[R], 1
MDRP[m&gt;RWh], 16
MDRP[m&gt;RWh], 20

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0211.sc">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 913, 0, 0
OFFSET[R], 1835, 12, 42



SVTCA[Y]
MDAP[R], 1
MDRP[m&gt;RWh], 29
MDRP[m&gt;RWh], 33

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0212">
/* VTTTalk Unicode 0x212 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 168, 0, 0
OFFSET[R], 1889, 66, 0
SVTCA[Y]
CALL[], 29, 1, 1, 1, 57, 86
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni0213">
/* VTTTalk Unicode 0x213 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 565, 0, 0
OFFSET[R], 1836, -73, 0



SVTCA[Y]
MDAP[R], 1
MDRP[m&gt;RWh], 16
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0213.sc">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 913, 0, 0
OFFSET[R], 1836, 12, 42



SVTCA[Y]
MDAP[R], 1
MDRP[m&gt;RWh], 29

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0214">
/* VTTTalk Unicode 0x214 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 197, 0, 0
OFFSET[R], 1888, 97, 0
SVTCA[Y]
CALL[], 18, 13, 1, 1, 57, 86
SHC[2], 1
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni0214.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 352, 0, 0
OFFSET[R], 1888, 93, 0



SVTCA[Y]
CALL[], 21, 4, 1, 1, 57, 86
SHC[2], 1
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni0215">
/* VTTTalk Unicode 0x215 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 595, 0, 0
OFFSET[R], 1835, 29, 0



SVTCA[Y]
MDAP[R], 5
MDRP[m&gt;RWh], 23
MDRP[m&gt;RWh], 27

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0215.sc">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 941, 0, 0
OFFSET[R], 1835, 36, 42



SVTCA[Y]
MDAP[R], 5
MDRP[m&gt;RWh], 20
MDRP[m&gt;RWh], 24

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0215.sc.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1091, 0, 0
OFFSET[R], 1835, 36, 42



SVTCA[Y]
MDAP[R], 4
MDRP[m&gt;RWh],21
MDRP[m&gt;RWh],25

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0216">
/* VTTTalk Unicode 0x216 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 197, 0, 0
OFFSET[R], 1889, 97, 0

SVTCA[Y]
CALL[], 18, 13, 1, 1, 55, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="uni0216.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 352, 0, 0
OFFSET[R], 1889, 93, 0



SVTCA[Y]
CALL[], 21, 4, 1, 1, 57, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="uni0217">
/* VTTTalk Unicode 0x217 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 595, 0, 0
OFFSET[R], 1836, 29, 0



SVTCA[Y]
MDAP[R], 5
MDRP[m&gt;RWh], 23

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0217.sc">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 941, 0, 0
OFFSET[R], 1836, 36, 42



SVTCA[Y]
MDAP[R], 5
MDRP[m&gt;RWh], 20

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0217.sc.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1091, 0, 0
OFFSET[R], 1836, 36, 42



SVTCA[Y]
MDAP[R], 4
MDRP[m&gt;RWh],21

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0218">
/* VTTTalk Unicode 0x218 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 176, 0, 0
OFFSET[R], 1841, 18, 0

    </glyphProgram>

    <glyphProgram name="uni0219">
/* VTTTalk Unicode 0x219 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 573, 0, 0
OFFSET[R], 1841, -68, 0

    </glyphProgram>

    <glyphProgram name="uni0219.sc">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 921, 0, 0
OFFSET[R], 1841, -33, 0

    </glyphProgram>

    <glyphProgram name="uni021A">
/* VTTTalk Unicode 0x21a */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 190, 0, 0
OFFSET[R], 1841, -26, 0

    </glyphProgram>

    <glyphProgram name="uni021A.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 345, 0, 0
OFFSET[R], 1841, -26, 0

    </glyphProgram>

    <glyphProgram name="uni021B">
/* VTTTalk Unicode 0x21b */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 587, 0, 0
OFFSET[R], 1841, -59, 0

    </glyphProgram>

    <glyphProgram name="uni021B.sc">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 933, 0, 0
OFFSET[R], 1841, -76, 0

    </glyphProgram>

    <glyphProgram name="uni021B.sc.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1083, 0, 0
OFFSET[R], 1841, -76, 0

    </glyphProgram>

    <glyphProgram name="uni021B.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 707, 0, 0
OFFSET[R], 1841, -73, 0

    </glyphProgram>

    <glyphProgram name="uni021E">
/* VTTTalk Unicode 0x21e */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 79, 0, 0
OFFSET[R], 1876, 108, 0
SVTCA[Y]
CALL[], 12, 6, 1, 1, 57, 86
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni021F">
/* VTTTalk Unicode 0x21f */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 474, 0, 0
OFFSET[R], 1821, -175, 225




SVTCA[Y]
MDAP[R], 17
MDRP[m&gt;RWh], 23

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni021F.sc">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 823, 0, 0
OFFSET[R], 1821, 46, 42



SVTCA[Y]
MDAP[R], 1
MDRP[m&gt;RWh], 12

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni022A">
/* VTTTalk Unicode 0x22a */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 130, 0, 0
OFFSET[R], 1866, 118, 0
SVTCA[Y]
CALL[], 40, 10, 1, 1, 60, 86
SHC[2], 2
SHC[2], 3
SHC[2], 4

    </glyphProgram>

    <glyphProgram name="uni022B">
/* VTTTalk Unicode 0x22b */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 527, 0, 0
OFFSET[R], 1810, 5, 0

SVTCA[Y]
MDAP[R], 8
MDRP[m&gt;RWh], 44
MDRP[m&gt;RWh], 32

CALL[], 56, 50, 1, 1, 57, 86

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni022B.sc">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 875, 0, 0
OFFSET[R], 1810, 47, 42



SVTCA[Y]
MDAP[R], 8
MDRP[m&gt;RWh], 32
MDRP[m&gt;RWh], 44

MDAP[R], 32
MDAP[R], 44

SMD[], 192

MDRP[m&gt;RWh], 59

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni022C">
/* VTTTalk Unicode 0x22c */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 130, 0, 0
OFFSET[R], 1882, 118, 0
SVTCA[Y]
CALL[], 40, 10, 1, 1, 69, 86
SHC[2], 2
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni022D">
/* VTTTalk Unicode 0x22d */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 527, 0, 0
OFFSET[R], 1829, 5, 0


SVTCA[Y]
MDAP[R], 8
MDRP[m&gt;RWh], 32
MDAP[R], 32

SMD[], 192

MDRP[m&gt;RWh], 54

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni022D.sc">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 875, 0, 0
OFFSET[R], 1829, 47, 42



SVTCA[Y]
MDAP[R], 8
MDRP[m&gt;RWh], 32
MDAP[R], 32

SMD[], 192

MDRP[m&gt;RWh], 57

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0230">
/* VTTTalk Unicode 0x230 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 130, 0, 0
OFFSET[R], 1868, 118, 0
SVTCA[Y]
CALL[], 40, 10, 1, 1, 55, 86
SHC[2], 2
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni0231">
/* VTTTalk Unicode 0x231 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 527, 0, 0
OFFSET[R], 1812, 5, 0

SVTCA[Y]
MDAP[R], 8
MDRP[m&gt;RWh], 32

CALL[], 44, 38, 1, 1, 57, 86

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0231.sc">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 875, 0, 0
OFFSET[R], 1812, 47, 42



SVTCA[Y]
MDAP[R], 8
MDRP[m&gt;RWh], 32

MDAP[R], 32

SMD[], 192

MDRP[m&gt;RWh], 47

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0232">
/* VTTTalk Unicode 0x232 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 228, 0, 0
OFFSET[R], 1883, 5, 0
SVTCA[Y]
CALL[], 12, 3, 1, 1, 102, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="uni0232.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 381, 0, 0
OFFSET[R], 1883, 92, 0



SVTCA[Y]
MDAP[R], 19
MDRP[m&gt;RWh], 34

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0233">
/* VTTTalk Unicode 0x233 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 626, 0, 0
OFFSET[R], 1830, -61, 0



SVTCA[Y]
MDAP[R], 20
MDRP[m&gt;RWh], 23

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0233.sc">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 972, 0, 0
OFFSET[R], 1830, -36, 42



SVTCA[Y]
MDAP[R], 3
MDRP[m&gt;RWh], 12

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0233.sc.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1120, 0, 0
OFFSET[R], 1830, 31, 42



SVTCA[Y]
MDAP[R], 19
MDRP[m&gt;RWh], 34

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0233.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 720, 0, 0
OFFSET[R], 1830, 29, 0


SVTCA[Y]
MDAP[R], 25
MDRP[m&gt;RWh], 35

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0237">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 0, 15, 114
CALL[], 11, 6, 114
SRP1[], 0
SHP[1], 6
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0259">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 0, 7, 114
SHP[2], 32
CALL[], 8, 11, 114
SHP[2], 23
SRP2[], 0
IP[], 18
MDAP[R], 18
SHP[1], 15
SHP[1], 19
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0259.sc">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 0, 11, 114
SHP[2], 13
MIAP[R], 29, 58
SHP[1], 22
IP[], 8
MDAP[R], 8
SHP[1], 5
SHP[1], 9
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0259.sc.ss01">
/* VTT 6.32 compiler */
SVTCA[Y]
MIAP[R], 0, 11
SHP[2], 11
MIAP[R], 27, 58
SHP[1], 20
SLOOP[], 5
IP[], 4, 7, 8, 5, 6
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0259.ss01">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 0, 7, 114
SHP[2], 28
CALL[], 8, 11, 114
SHP[2], 20
SRP1[], 0
SLOOP[], 4
IP[], 16, 12, 14, 13
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0292">
/* VTTTalk Unicode 0x292 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1394, 0, 0

    </glyphProgram>

    <glyphProgram name="uni0292.sc">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 0, 11, 114
SHP[2], 7
MIAP[R], 19, 58
IP[], 13
MDAP[R], 13
SHP[1], 24
SRP1[], 24
SHP[1], 22
SRP1[], 22
SHP[1], 15
SRP1[], 19
SHP[1], 18
SRP1[], 18
SHP[1], 21
SRP1[], 21
SHP[1], 16
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni02B9">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 1, 2, 114
MDRP[m&gt;RBl], 0
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni02BA">
/* VTTTalk Unicode 0x2ba */
/* ACT generated Wed May  6 15:33:15 2020 */

OFFSET[R], 1660, 0, 0
OFFSET[R], 1660, 150, 0

    </glyphProgram>

    <glyphProgram name="uni02BB">
/* VTTTalk Unicode 0x2bb */
/* ACT generated Wed May  6 15:33:15 2020 */

OFFSET[R], 1653, 31, 55

    </glyphProgram>

    <glyphProgram name="uni02BC">
/* VTTTalk Unicode 0x2bc */
/* ACT generated Wed May  6 15:33:15 2020 */

OFFSET[R], 1654, 5, 0

    </glyphProgram>

    <glyphProgram name="uni02BE">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 0
SHP[2], 1
SMD[], 192
MDRP[m&gt;RWh], 8
SHP[2], 7
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni02BF">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 0
SHP[2], 15
SMD[], 192
MDRP[m&gt;RWh], 8
SHP[2], 9
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni02C8">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 1, 2, 114
MDRP[m&gt;RBl], 0
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni02C9">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 0
SHP[2], 1
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni02CA">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 0
SMD[], 128
MDRP[m&gt;RBl], 1
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni02CB">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 0
SMD[], 128
MDRP[m&gt;RBl], 2
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni02CC">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 1
MDRP[m&gt;RBl], 0
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni03000304">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1898, 0, 0
OFFSET[R], 1904, 0, 113

    </glyphProgram>

    <glyphProgram name="uni03000304.case">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1814, 0, 150

    </glyphProgram>

    <glyphProgram name="uni03010304">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1899, 0, 0
OFFSET[R], 1904, 0, 113

    </glyphProgram>

    <glyphProgram name="uni03010304.case">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1817, 0, 150

    </glyphProgram>

    <glyphProgram name="uni03010307">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1899, 0, 0
OFFSET[R], 1897, 0, 113

    </glyphProgram>

    <glyphProgram name="uni03010307.case">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1816, 0, 150

    </glyphProgram>

    <glyphProgram name="uni0302">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 7
SHP[1], 4
SMD[], 128
MDRP[m&gt;RBl], 1
IP[], 5
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0302.case">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1820, 0, 150

    </glyphProgram>

    <glyphProgram name="uni0302.loclVIET">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 7
SHP[1], 4
SMD[], 128
MDRP[m&gt;RBl], 1
SHP[2], 5
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0302.narrow">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 7
DLTP1[(7 @3 8)]
SHP[1], 4
SMD[], 128
MDRP[m&gt;RBl], 1
IP[], 5
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni03020300">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1900, 0, 0
OFFSET[R], 1898, 120, 75

    </glyphProgram>

    <glyphProgram name="uni03020300.case">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1930, 0, 150

    </glyphProgram>

    <glyphProgram name="uni03020301">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1900, 0, 0
OFFSET[R], 1899, 120, 75

    </glyphProgram>

    <glyphProgram name="uni03020301.case">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1929, 0, 150

    </glyphProgram>

    <glyphProgram name="uni03020303">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1900, 0, 0
OFFSET[R], 1903, 0, 98

    </glyphProgram>

    <glyphProgram name="uni03020303.case">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1932, 0, 150

    </glyphProgram>

    <glyphProgram name="uni03020309">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1900, 0, 0
OFFSET[R], 1905, 100, 65

    </glyphProgram>

    <glyphProgram name="uni03020309.case">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1931, 0, 150

    </glyphProgram>

    <glyphProgram name="uni03030304">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1903, 0, 0
OFFSET[R], 1904, 0, 113

    </glyphProgram>

    <glyphProgram name="uni03030304.case">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1829, 0, 150

    </glyphProgram>

    <glyphProgram name="uni03030308">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1903, 0, 0
OFFSET[R], 1896, 0, 113

    </glyphProgram>

    <glyphProgram name="uni03030308.case">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1827, 0, 150

    </glyphProgram>

    <glyphProgram name="uni0304">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 0
SHP[2], 1
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0304.case">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1830, 0, 150

    </glyphProgram>

    <glyphProgram name="uni0304.loclVIET">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 0
SHP[2], 1
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0304.narrow">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 0
SHP[2], 1
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0304.narrow.case">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1911, 0, 150

    </glyphProgram>

    <glyphProgram name="uni03040300">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1904, 0, 0
OFFSET[R], 1898, 0, 113

    </glyphProgram>

    <glyphProgram name="uni03040300.case">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1832, 0, 150

    </glyphProgram>

    <glyphProgram name="uni03040301">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1904, 0, 0
OFFSET[R], 1899, 0, 113

    </glyphProgram>

    <glyphProgram name="uni03040301.case">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1833, 0, 150

    </glyphProgram>

    <glyphProgram name="uni03040308">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1904, 0, 0
OFFSET[R], 1896, 0, 113

    </glyphProgram>

    <glyphProgram name="uni03040308.case">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1831, 0, 150

    </glyphProgram>

    <glyphProgram name="uni0306">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 0
SHP[2], 7
SMD[], 128
MDRP[m&gt;RGr], 4
SHP[2], 10
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0306.case">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1823, 0, 150

    </glyphProgram>

    <glyphProgram name="uni0306.loclVIET">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 0
SHP[2], 7
SMD[], 128
MDRP[m&gt;RGr], 3
SHP[2], 10
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0306.narrow">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 0
DLTP1[(0 @3 8)(0 @5 8)]
SHP[2], 7
SMD[], 128
MDRP[m&gt;RGr], 3
SHP[2], 10
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni03060300">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1902, 0, 0
OFFSET[R], 1898, 0, 94

    </glyphProgram>

    <glyphProgram name="uni03060300.case">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1926, 0, 150

    </glyphProgram>

    <glyphProgram name="uni03060301">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1902, 0, 0
OFFSET[R], 1899, 0, 94

    </glyphProgram>

    <glyphProgram name="uni03060301.case">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1925, 0, 150

    </glyphProgram>

    <glyphProgram name="uni03060303">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1902, 0, 0
OFFSET[R], 1903, 0, 94

    </glyphProgram>

    <glyphProgram name="uni03060303.case">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1928, 0, 150

    </glyphProgram>

    <glyphProgram name="uni03060309">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1902, 0, 0
OFFSET[R], 1905, 0, 74

    </glyphProgram>

    <glyphProgram name="uni03060309.case">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1927, 0, 150

    </glyphProgram>

    <glyphProgram name="uni0307">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 0
SHP[2], 6
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0307.case">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1811, 0, 150

    </glyphProgram>

    <glyphProgram name="uni0307.i">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 0
SHP[2], 6
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0307.loclVIET">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 0
SHP[2], 6
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni03070304">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1897, 0, 0
OFFSET[R], 1904, 0, 113

    </glyphProgram>

    <glyphProgram name="uni03070304.case">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1812, 0, 150

    </glyphProgram>

    <glyphProgram name="uni0308">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 12
SHP[1], 18
SHP[1], 0
SHP[2], 6
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0308.case">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1807, 0, 150

    </glyphProgram>

    <glyphProgram name="uni0308.loclVIET">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 12
SHP[1], 18
SHP[1], 0
MDAP[R], 0
SHP[2], 6
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0308.narrow">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 12
SHP[1], 18
SHP[1], 0
SHP[2], 6
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni03080300">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1896, 0, 0
OFFSET[R], 1898, 0, 113

    </glyphProgram>

    <glyphProgram name="uni03080300.case">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1808, 0, 150

    </glyphProgram>

    <glyphProgram name="uni03080301">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1896, 0, 0
OFFSET[R], 1899, 0, 113

    </glyphProgram>

    <glyphProgram name="uni03080301.case">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1809, 0, 150

    </glyphProgram>

    <glyphProgram name="uni03080304">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1896, 0, 0
OFFSET[R], 1904, 0, 113

    </glyphProgram>

    <glyphProgram name="uni03080304.case">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1810, 0, 150

    </glyphProgram>

    <glyphProgram name="uni030A">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 8
SHP[1], 22
SMD[], 192
MDRP[m&gt;RGr], 0
SHP[2], 16
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni030A0301">
/* VTT 6.32 compiler */
SVTCA[Y]
MIAP[R], 8, 17
SHP[1], 22
SMD[], 192
MDRP[m&gt;RGr], 0
SHP[2], 16
SHP[1], 28
SRP1[], 28
SHP[1], 29
SHP[1], 30
SRP1[], 30
SHP[1], 31
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni030B">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 4
SHP[1], 0
SMD[], 128
MDRP[m&gt;RBl], 5
SHP[2], 1
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni030B.case">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1818, 0, 150

    </glyphProgram>

    <glyphProgram name="uni030C">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 0
SMD[], 128
MDRP[m&gt;RBl], 2
SHP[2], 5
IP[], 4
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni030C.alt">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 0
MDRP[m&gt;RBl], 1
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni030C.alt.short">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 1
SMD[], 128
MDRP[m&gt;RBl], 0
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni030C.case">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1821, 0, 150

    </glyphProgram>

    <glyphProgram name="uni030C.loclVIET">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 0
SMD[], 128
MDRP[m&gt;RBl], 2
SHP[2], 5
IP[], 3
IP[], 4
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni030C.narrow">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 0
SHP[2], 4
SMD[], 128
MDRP[m&gt;RBl], 2
SHP[2], 5
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni030C0307">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1901, 0, 0
OFFSET[R], 1897, 0, 90

    </glyphProgram>

    <glyphProgram name="uni030C0307.case">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1822, 0, 150

    </glyphProgram>

    <glyphProgram name="uni030F">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 4
SHP[1], 0
SMD[], 128
MDRP[m&gt;RBl], 6
SHP[2], 1
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni030F.case">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1835, 0, 150

    </glyphProgram>

    <glyphProgram name="uni0311">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 0
SHP[2], 7
SMD[], 128
MDRP[m&gt;RGr], 3
SHP[2], 10
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0311.case">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1836, 0, 150

    </glyphProgram>

    <glyphProgram name="uni0311.narrow">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 0
SHP[2], 7
SMD[], 128
MDRP[m&gt;RGr], 3
SHP[2], 10
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0312">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 7
SMD[], 128
MDRP[m&gt;RGr], 0
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni031B">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 9
SHP[1], 8
SMD[], 128
MDRP[m&gt;RGr], 15
SHP[2], 2
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0324">
/* VTT 6.32 compiler */
SVTCA[Y]
RUTG[]
MDAP[R], 6
SHP[1], 0
MDAP[R], 18
SHP[1], 12
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0326">
/* VTT 6.32 compiler */
SVTCA[Y]
RUTG[]
MDAP[R], 8
SMD[], 128
RTG[]
MDRP[m&gt;RGr], 0
IP[], 2
IP[], 1
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0326.alt">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 8
SMD[], 128
MDRP[m&gt;RGr], 0
IP[], 2
IP[], 1
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0327">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 15
SMD[], 192
MDRP[m&gt;RGr], 0
SHP[2], 7
SHP[1], 17
SRP1[], 17
SHP[1], 14
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0328">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 7
SHP[1], 8
SMD[], 192
MDRP[m&gt;RGr], 0
SHP[2], 15
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0328.i">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 6
MDRP[m&gt;RGr], 0
SHP[2], 13
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni032E">
/* VTT 6.32 compiler */
SVTCA[Y]
RUTG[]
MDAP[R], 3
SHP[1], 10
SMD[], 128
RTG[]
MDRP[m&gt;RGr], 0
SHP[2], 7
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0331">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 1
SHP[1], 0
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0335">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 0
SHP[2], 1
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0335.case">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 0
SHP[2], 1
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0335.sc">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 0
SHP[2], 1
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0335.t">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 0
SHP[2], 1
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0336">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 0
SHP[2], 1
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0336.sc">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 0
SHP[2], 1
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0337">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 0
SHP[2], 1
SMD[], 128
MDRP[m&gt;RBl], 2
SHP[2], 3
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0337.case">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 0
MDRP[m&gt;RBl], 2
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0338">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 1
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0338.case">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 1
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0338.sc">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 1
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0394">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 2, 8, 114
SHP[2], 5
SRP1[], 5
SHP[1], 4
SHP[1], 7
CALL[], 3, 2, 114
SHP[2], 8
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni03A9">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 0, 8, 114
SHP[2], 1
SHP[2], 21
MDAP[R], 21
SHP[1], 18
SRP1[], 18
SHP[1], 22
SRP1[], 22
SHP[1], 38
CALL[], 10, 3, 114
SHP[2], 30
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni03BC">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 0, 14, 114
CALL[], 1, 6, 114
SHP[2], 12
MDAP[R], 12
CALL[], 13, 10, 114
CALL[], 20, 11, 114
SHP[2], 6
SRP1[], 1
IP[], 23
IP[], 15
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0400">
/* VTTTalk Unicode 0x400 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1145, 0, 0
OFFSET[R], 1869, 63, 0
SVTCA[Y]
CALL[], 12, 8, 1, 1, 57, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni0400.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1264, 0, 0
OFFSET[R], 1869, 36, 0

SVTCA[Y]
CALL[], 47, 17, 1, 1, 55, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="uni0401">
/* VTTTalk Unicode 0x401 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1145, 0, 0
OFFSET[R], 1863, 63, 0
SVTCA[Y]
CALL[], 12, 8, 1, 1, 70, 86
SHC[2], 2
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni0401.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1264, 0, 0
OFFSET[R], 1863, 36, 0



SVTCA[Y]
MDAP[R], 17
MDRP[m&gt;RWh], 47
MDRP[m&gt;RWh], 59

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0402">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 0, 8, 114
SHP[2], 10
CALL[], 4, 2, 114
SHP[2], 6
SHP[2], 3
SRP1[], 3
SHP[1], 1
SHP[1], 8
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0403">
/* VTTTalk Unicode 0x403 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1141, 0, 0
OFFSET[R], 1871, 38, 0
SVTCA[Y]
CALL[], 7, 1, 1, 1, 57, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="uni0404">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 4, 9, 114
SHP[2], 31
CALL[], 14, 3, 114
SHP[2], 21
SRP1[], 4
IP[], 2
MDAP[R], 2
SHP[1], 3
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0405">
/* VTTTalk Unicode 0x405 */
/* ACT generated Wed May  6 15:33:15 2020 */

OFFSET[R], 176, 4, 0

    </glyphProgram>

    <glyphProgram name="uni0406">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 0, 8, 114
CALL[], 1, 2, 114
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0407">
/* VTT 6.32 compiler */
SVTCA[Y]
MIAP[R], 0, 8
CALL[], 1, 2, 114
MDRP[m&gt;RWh], 16
SHP[2], 22
SHP[2], 4
SRP1[], 4
SHP[1], 10
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0408">
/* VTTTalk Unicode 0x408 */
/* ACT generated Wed May  6 15:33:15 2020 */

OFFSET[R], 101, 23, 0

    </glyphProgram>

    <glyphProgram name="uni0408.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 326, 0, 0

    </glyphProgram>

    <glyphProgram name="uni0409">
/* VTTTalk Unicode 0x409 */
/* ACT generated Wed May  6 15:33:15 2020 */

OFFSET[R], 1156, 0, 0
OFFSET[R], 1173, 481, 0

    </glyphProgram>

    <glyphProgram name="uni0409.ss01">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 0, 9, 114
SHP[2], 6
CALL[], 13, 2, 114
SHP[2], 28
SHP[2], 16
SRP1[], 16
SHP[1], 17
SRP1[], 0
IP[], 47
IP[], 24
MDAP[R], 47
MDAP[R], 24
SRP1[], 47
SHP[1], 40
SRP1[], 24
SHP[1], 33
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni040A">
/* VTT 6.32 compiler */
SVTCA[Y]
MIAP[R], 0, 8
CALL[], 1, 2, 114
SHP[2], 6
SRP1[], 6
SHP[1], 25
SRP1[], 0
IP[], 10
MDAP[R], 10
SHP[1], 3
SHP[1], 21
SRP1[], 21
SHP[1], 27
SRP2[], 27
IP[], 26
IP[], 22
MIAP[R], 8, 8
SHP[1], 23
SRP1[], 23
SHP[1], 13
SRP1[], 13
SHP[1], 12
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni040A.ss01">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 0, 9, 114
SHP[2], 23
MIAP[R], 8, 8
CALL[], 9, 2, 114
SHP[2], 14
SRP1[], 0
IP[], 11
MDAP[R], 11
SHP[1], 15
SHP[1], 6
SRP1[], 6
SHP[1], 31
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni040B">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 0, 8, 114
SHP[2], 18
CALL[], 4, 2, 114
SHP[2], 3
SRP1[], 3
SLOOP[], 3
SHP[1], 6, 1, 8
SRP1[], 0
IP[], 13
MDAP[R], 13
SHP[1], 22
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni040C">
/* VTTTalk Unicode 0x40c */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1154, 0, 0
OFFSET[R], 1871, 38, 0
SVTCA[Y]
CALL[], 16, 5, 1, 1, 57, 86
SHC[2], 4

    </glyphProgram>

    <glyphProgram name="uni040D">
/* VTTTalk Unicode 0x40d */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1150, 0, 0
OFFSET[R], 1869, 110, 0
SVTCA[Y]
CALL[], 10, 4, 1, 1, 57, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="uni040D.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1267, 0, 0
OFFSET[R], 1869, 100, 0

SVTCA[Y]
CALL[], 21, 14, 1, 1, 55, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="uni040E">
/* VTTTalk Unicode 0x40e */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1164, 0, 0
OFFSET[R], 1921, 91, 0
SVTCA[Y]
CALL[], 17, 14, 1, 1, 55, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni040E.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1274, 0, 0
OFFSET[R], 1921, 167, 0

SVTCA[Y]
CALL[], 34, 19, 1, 1, 55, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="uni040F">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 6, 8, 114
SHP[2], 2
MDRP[m&gt;RGr], 3
SHP[1], 9
CALL[], 7, 2, 114
SHP[2], 11
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0410">
/* VTTTalk Unicode 0x410 */
/* ACT generated Wed May  6 15:33:15 2020 */

OFFSET[R], 1, 14, 0

    </glyphProgram>

    <glyphProgram name="uni0410.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 247, 0, 0

    </glyphProgram>

    <glyphProgram name="uni0411">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 0, 8, 114
SHP[2], 13
CALL[], 1, 2, 114
SHP[2], 4
SRP1[], 0
IP[], 5
MDAP[R], 5
SHP[1], 20
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0412">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 0, 8, 114
SHP[2], 16
CALL[], 1, 2, 114
SHP[2], 33
SRP1[], 0
IP[], 24
MDAP[R], 24
SHP[1], 25
SHP[1], 8
SRP1[], 8
SHP[1], 9
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0413">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 0, 8, 114
CALL[], 1, 2, 114
SHP[2], 4
SRP1[], 4
SHP[1], 5
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0414">
/* VTT 6.32 compiler */
SVTCA[Y]
MIAP[R], 0, 8
CALL[], 15, 2, 114
SHP[2], 2
MIAP[R], 24, 8
MDRP[m&gt;RBl], 18
SHP[2], 22
SHP[1], 19
SRP1[], 19
SHP[1], 9
SRP1[], 9
SHP[1], 8
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0414.loclBGR">
/* VTT 6.32 compiler */
SVTCA[Y]
MIAP[R], 6, 8
SHP[1], 1
MDRP[m&gt;RBl], 0
SHP[2], 4
SHP[1], 14
SRP1[], 14
SHP[1], 10
CALL[], 15, 2, 114
SHP[2], 11
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0414.ss01">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 5, 3, 114
SHP[2], 15
MIAP[R], 26, 8
SHP[1], 21
SHP[1], 0
SRP1[], 0
SHP[1], 11
MDRP[m&gt;RBl], 20
SHP[2], 24
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0415">
/* VTTTalk Unicode 0x415 */
/* ACT generated Wed May  6 15:33:15 2020 */

OFFSET[R], 45, 4, 0

    </glyphProgram>

    <glyphProgram name="uni0415.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 277, 0, 0

    </glyphProgram>

    <glyphProgram name="uni0416">
/* VTT 6.32 compiler */
SVTCA[Y]
MIAP[R], 13, 8
SHP[1], 17
SRP1[], 17
SHP[1], 0
CALL[], 25, 2, 114
SHP[2], 18
SRP1[], 18
SHP[1], 10
SRP1[], 13
IP[], 20
MDAP[R], 20
SHP[1], 23
SHP[1], 4
SRP1[], 4
SHP[1], 5
SRP1[], 20
SLOOP[], 8
SHP[1], 24, 27, 14, 15, 1, 2, 9, 8
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0417">
/* VTT 6.32 compiler */
SVTCA[Y]
MIAP[R], 25, 3
SHP[1], 20
CALL[], 42, 9, 114
SHP[2], 3
SRP1[], 25
IP[], 12
MDAP[R], 12
SHP[1], 11
SHP[1], 34
SRP1[], 34
SHP[1], 33
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0418">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 1, 2, 114
SHP[2], 5
CALL[], 9, 8, 114
SHP[2], 7
SRP1[], 1
IP[], 3
IP[], 8
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0418.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 352, 0, 0

    </glyphProgram>

    <glyphProgram name="uni0419">
/* VTTTalk Unicode 0x419 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1150, 0, 0
OFFSET[R], 1921, 182, 0
SVTCA[Y]
CALL[], 10, 4, 1, 1, 55, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="uni0419.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1267, 0, 0
OFFSET[R], 1921, 172, 0

SVTCA[Y]
CALL[], 21, 14, 1, 1, 55, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="uni041A">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 4, 8, 114
SHP[2], 0
CALL[], 5, 2, 114
SHP[2], 14
SRP1[], 4
IP[], 8
MDAP[R], 8
SHP[1], 9
SHP[1], 12
SRP1[], 12
SHP[1], 13
SRP1[], 13
SHP[1], 1
SHP[1], 2
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni041B">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 0, 9, 114
SHP[2], 6
CALL[], 11, 2, 114
SHP[2], 17
SRP1[], 17
SHP[1], 15
SHP[1], 18
CALL[], 13, 8, 114
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni041B.loclBGR">
/* VTT 6.32 compiler */
SVTCA[Y]
MIAP[R], 5, 8
SHP[1], 2
CALL[], 7, 2, 114
SHP[2], 3
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni041B.ss01">
/* VTT 6.32 compiler */
SVTCA[Y]
MIAP[R], 0, 8
SHP[2], 11
SHP[2], 21
CALL[], 5, 3, 114
SHP[2], 15
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni041C">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 0, 8, 114
SHP[2], 8
CALL[], 1, 2, 114
SHP[2], 6
SRP2[], 0
SLOOP[], 4
IP[], 12, 3, 9, 13
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni041D">
/* VTTTalk Unicode 0x41d */
/* ACT generated Wed May  6 15:33:15 2020 */

OFFSET[R], 79, 4, 0

    </glyphProgram>

    <glyphProgram name="uni041E">
/* VTTTalk Unicode 0x41e */
/* ACT generated Wed May  6 15:33:15 2020 */

OFFSET[R], 130, 10, 0

    </glyphProgram>

    <glyphProgram name="uni041F">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 0, 8, 114
SHP[2], 4
CALL[], 1, 2, 114
SHP[2], 7
SRP1[], 7
SHP[1], 8
SHP[1], 5
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0420">
/* VTTTalk Unicode 0x420 */
/* ACT generated Wed May  6 15:33:15 2020 */

OFFSET[R], 165, 4, 0

    </glyphProgram>

    <glyphProgram name="uni0420.ss01">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 0
CALL[], 4, 3, 114
SHP[2], 24
SRP1[], 0
IP[], 11
MDAP[R], 11
SHP[1], 18
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0421">
/* VTTTalk Unicode 0x421 */
/* ACT generated Wed May  6 15:33:15 2020 */

OFFSET[R], 30, 10, 0

    </glyphProgram>

    <glyphProgram name="uni0422">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 0, 8, 114
CALL[], 4, 2, 114
SHP[2], 3
SRP1[], 3
SLOOP[], 4
SHP[1], 2, 7, 1, 8
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0422.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

OFFSET[R], 345, 10, 0

    </glyphProgram>

    <glyphProgram name="uni0423">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 12
SHP[1], 0
CALL[], 14, 2, 114
SHP[2], 7
SRP2[], 12
SLOOP[], 6
IP[], 13, 4, 5, 16, 3, 8
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0423.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 381, 0, 0

    </glyphProgram>

    <glyphProgram name="uni0424">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 12
SHP[1], 8
MDRP[m&gt;RBl], 48
SHP[1], 35
SRP1[], 35
SHP[1], 38
MDAP[R], 20
SHP[1], 0
MDRP[m&gt;RBl], 46
SHP[1], 27
SRP1[], 27
SHP[1], 24
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0424.loclBGR">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 0, 9, 114
SHP[2], 20
MDRP[m&gt;RBl], 40
CALL[], 10, 3, 114
SHP[2], 30
MDRP[m&gt;RBl], 41
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0424.ss01">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 0, 9, 114
SHP[2], 20
SRP1[], 20
SHP[1], 40
CALL[], 10, 3, 114
SHP[2], 30
SRP1[], 30
SHP[1], 41
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0425">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 0, 2, 114
SHP[2], 4
CALL[], 10, 8, 114
SHP[2], 7
SRP1[], 0
SLOOP[], 4
IP[], 8, 5, 11, 2
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0426">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 0, 8, 114
SHP[2], 3
MDRP[m&gt;RWh], 8
SHP[1], 11
SRP1[], 11
SHP[1], 12
SRP1[], 12
SHP[1], 9
CALL[], 1, 2, 114
SHP[2], 6
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0427">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 7, 2, 114
SHP[2], 18
CALL[], 19, 8, 114
SRP2[], 7
IP[], 3
MDAP[R], 3
IP[], 15
IP[], 0
SHP[1], 12
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0428">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 11, 8, 114
SHP[2], 1
SHP[2], 4
SHP[2], 6
SRP1[], 6
SHP[1], 7
SHP[2], 15
SRP1[], 15
SHP[1], 14
CALL[], 12, 2, 114
SHP[2], 3
SHP[2], 9
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0429">
/* VTTTalk Unicode 0x429 */
/* ACT generated Wed May  6 15:33:15 2020 */

OFFSET[R], 1170, 0, 0
OFFSET[R], 1922, 886, 0

SVTCA[Y]
CALL[], 19, 11, 0, 0, 0, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="uni042A">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 7, 8, 114
SHP[2], 21
CALL[], 10, 2, 114
SHP[2], 9
SRP1[], 7
IP[], 12
MDAP[R], 12
SHP[1], 20
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni042A.ss01">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 2, 2, 114
SHP[2], 1
SHP[2], 8
CALL[], 4, 9, 114
SHP[2], 13
SRP2[], 2
IP[], 27
MDAP[R], 27
SHP[1], 20
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni042B">
/* VTTTalk Unicode 0x42b */
/* ACT generated Wed May  6 15:33:15 2020 */

OFFSET[R], 1173, 0, 0
OFFSET[R], 1181, 654, 0

    </glyphProgram>

    <glyphProgram name="uni042B.ss01">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 0, 9, 114
SHP[2], 9
SHP[2], 30
MDAP[R], 30
CALL[], 4, 2, 114
SHP[2], 31
SRP1[], 0
IP[], 23
MDAP[R], 23
SHP[1], 16
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni042C">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 7, 8, 114
SHP[2], 19
CALL[], 8, 2, 114
SRP1[], 7
IP[], 10
MDAP[R], 10
SHP[1], 18
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni042C.ss01">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 0, 9, 114
SHP[2], 9
CALL[], 4, 2, 114
SRP1[], 0
IP[], 23
MDAP[R], 23
SRP2[], 0
IP[], 20
IP[], 19
SHP[1], 16
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni042D">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 4, 3, 114
SHP[2], 31
CALL[], 14, 9, 114
SHP[2], 21
SRP2[], 4
IP[], 0
MDAP[R], 0
SHP[1], 1
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni042E">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 0, 8, 114
CALL[], 1, 2, 114
CALL[], 8, 9, 114
SHP[2], 28
CALL[], 18, 3, 114
SHP[2], 38
SRP1[], 8
IP[], 6
MDAP[R], 6
SHP[1], 3
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni042F">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 11, 2, 114
SHP[2], 21
SRP1[], 21
SHP[1], 19
CALL[], 14, 8, 114
SHP[2], 13
SRP2[], 11
IP[], 3
MDAP[R], 3
SHP[1], 16
SHP[1], 27
SHP[1], 1
SRP1[], 1
SHP[1], 18
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0430">
/* VTTTalk Unicode 0x430 */
/* ACT generated Wed May  6 15:33:15 2020 */

OFFSET[R], 396, 0, 0

    </glyphProgram>

    <glyphProgram name="uni0430.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 643, 0, 0

    </glyphProgram>

    <glyphProgram name="uni0431">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 0, 11, 114
SHP[2], 37
MDAP[R], 12
SHP[1], 13
MDAP[R], 29
SRP2[], 12
SLOOP[], 8
IP[], 18, 17, 8, 16, 14, 11, 6, 19
SHP[1], 45
SRP1[], 45
SHP[1], 25
SHP[1], 27
SHP[1], 47
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0431.loclSRB">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 0, 11, 114
SHP[2], 33
CALL[], 16, 0, 114
SHP[2], 18
SRP1[], 0
IP[], 9
MDAP[R], 9
SLOOP[], 3
SHP[1], 41, 10, 26
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0432">
/* VTT 6.32 compiler */
SVTCA[Y]
MIAP[R], 0, 10
SHP[2], 16
CALL[], 1, 6, 114
SHP[2], 33
SRP2[], 0
IP[], 24
MDAP[R], 24
SHP[1], 25
SRP1[], 25
SHP[1], 8
SRP1[], 8
SHP[1], 9
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0432.loclBGR">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 6, 1, 114
SHP[2], 51
CALL[], 25, 11, 114
SHP[2], 34
SRP1[], 6
IP[], 42
MDAP[R], 42
SHP[1], 43
SHP[1], 15
SRP1[], 15
SHP[1], 16
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0433">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 0, 10, 114
CALL[], 1, 6, 114
SHP[2], 4
SRP1[], 4
SHP[1], 5
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0433.loclBGR">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 0, 11, 114
SHP[2], 38
CALL[], 23, 7, 114
SHP[2], 15
SRP2[], 0
SLOOP[], 4
IP[], 35, 4, 27, 12
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0433.loclSRB">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 494, 0, 0



SVTCA[Y]
MDAP[R], 1
MDRP[m&gt;RWh], 4

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0434">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 15, 6, 114
SHP[2], 2
MIAP[R], 24, 10
SHP[1], 0
SHP[1], 19
SHP[1], 8
SRP1[], 8
SHP[1], 9
MDRP[m&gt;RBl], 25
SHP[2], 22
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0434.loclBGR">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

OFFSET[R], 466, 4, 0

    </glyphProgram>

    <glyphProgram name="uni0434.loclSRB">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1420, 0, 0

    </glyphProgram>

    <glyphProgram name="uni0434.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

OFFSET[R], 466, 4, 0

    </glyphProgram>

    <glyphProgram name="uni0435">
/* VTTTalk Unicode 0x435 */
/* ACT generated Wed May  6 15:33:15 2020 */

OFFSET[R], 439, 9, 0

    </glyphProgram>

    <glyphProgram name="uni0435.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 672, 0, 0

    </glyphProgram>

    <glyphProgram name="uni0436">
/* VTT 6.32 compiler */
SVTCA[Y]
MIAP[R], 13, 10
SHP[1], 17
SRP1[], 17
SHP[1], 0
CALL[], 25, 6, 114
SHP[2], 18
SRP1[], 18
SHP[1], 10
SRP1[], 13
IP[], 20
MDAP[R], 20
SHP[1], 4
SHP[1], 23
SRP1[], 23
SLOOP[], 9
SHP[1], 5, 14, 15, 24, 27, 1, 2, 9, 8
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0436.loclBGR">
/* VTT 6.32 compiler */
SVTCA[Y]
MIAP[R], 12, 10
SHP[1], 17
SRP1[], 17
SHP[1], 0
CALL[], 18, 0, 114
MIAP[R], 25, 6
SHP[1], 10
SRP2[], 12
IP[], 20
MDAP[R], 20
SHP[1], 4
SLOOP[], 9
SHP[1], 23, 24, 27, 14, 15, 1, 2, 9, 8
SRP1[], 23
SHP[1], 5
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0437">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 0, 11, 114
SHP[2], 41
CALL[], 16, 7, 114
SHP[2], 23
SRP2[], 0
IP[], 33
MDAP[R], 33
SHP[1], 32
SRP1[], 32
SHP[1], 8
SRP1[], 8
SHP[1], 7
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0437.loclBGR">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 0
SHP[2], 7
CALL[], 31, 7, 114
SHP[2], 25
SRP1[], 0
IP[], 17
MDAP[R], 17
SHP[1], 16
SHP[1], 40
SHP[1], 39
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0438">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 1, 6, 114
SHP[2], 5
CALL[], 9, 10, 114
SHP[2], 7
SRP1[], 1
IP[], 3
IP[], 8
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0438.loclBGR">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

OFFSET[R], 595, -10, 0

    </glyphProgram>

    <glyphProgram name="uni0438.ss01">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 0, 11, 114
SHP[2], 18
MDAP[R], 18
SHP[2], 10
SRP1[], 10
SHP[1], 19
SRP1[], 19
SHP[1], 20
CALL[], 5, 6, 114
SHP[2], 16
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0439">
/* VTTTalk Unicode 0x439 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1312, 0, 0
OFFSET[R], 1919, 120, 0

SVTCA[Y]
CALL[], 10, 1, 1, 1, 55, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="uni0439.loclBGR">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1423, 0, 0
OFFSET[R], 1919, 105, 0




SVTCA[Y]
MDAP[R], 5
MDRP[m&gt;RWh], 23

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0439.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1452, 0, 0
OFFSET[R], 1919, 105, 0



SVTCA[Y]
MDAP[R], 5
MDRP[m&gt;RWh], 23

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni043A">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 4, 10, 114
SHP[2], 0
CALL[], 5, 6, 114
SHP[2], 14
SRP1[], 4
IP[], 8
MDAP[R], 8
SLOOP[], 5
SHP[1], 9, 1, 2, 13, 12
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni043A.loclBGR">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 0
SHP[2], 7
CALL[], 5, 0, 114
CALL[], 14, 6, 114
SRP1[], 5
SRP2[], 0
IP[], 8
MDAP[R], 8
SLOOP[], 5
SHP[1], 9, 1, 2, 13, 12
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni043B">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 10, 6, 114
SHP[2], 16
SRP1[], 16
SHP[1], 17
SRP1[], 17
SHP[1], 14
CALL[], 12, 10, 114
CALL[], 23, 11, 114
SHP[2], 4
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni043B.loclBGR">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 0, 6, 114
SHP[2], 4
MDAP[R], 1
SHP[1], 6
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni043C">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 0, 10, 114
SHP[2], 8
CALL[], 1, 6, 114
SHP[2], 6
SRP2[], 0
SLOOP[], 4
IP[], 12, 4, 9, 13
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni043D">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 0, 10, 114
CALL[], 1, 6, 114
SRP1[], 0
IP[], 10
MDAP[R], 10
SHP[1], 3
SHP[2], 6
SRP1[], 0
SHP[1], 8
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni043D.loclBGR">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1320, 0, 0

    </glyphProgram>

    <glyphProgram name="uni043E">
/* VTTTalk Unicode 0x43e */
/* ACT generated Wed May  6 15:33:15 2020 */

OFFSET[R], 527, 8, 0

    </glyphProgram>

    <glyphProgram name="uni043F">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 0, 10, 114
SHP[2], 4
CALL[], 1, 6, 114
SHP[2], 7
SRP1[], 7
SHP[1], 8
SRP1[], 8
SHP[1], 5
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni043F.loclBGR">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

OFFSET[R], 516, 2, 0

    </glyphProgram>

    <glyphProgram name="uni043F.loclSRB">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 595, 0, 0
OFFSET[R], 1830, 29, 0



SVTCA[Y]
MDAP[R], 5
MDRP[m&gt;RWh], 23

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0440">
/* VTTTalk Unicode 0x440 */
/* ACT generated Wed May  6 15:33:15 2020 */

OFFSET[R], 562, 3, 0

    </glyphProgram>

    <glyphProgram name="uni0440.ss01">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 0, 7, 114
SHP[2], 27
CALL[], 13, 14, 114
CALL[], 8, 11, 114
SHP[2], 19
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0441">
/* VTTTalk Unicode 0x441 */
/* ACT generated Wed May  6 15:33:15 2020 */

OFFSET[R], 425, 8, 0

    </glyphProgram>

    <glyphProgram name="uni0442">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 0, 10, 114
CALL[], 4, 6, 114
SHP[2], 3
SRP1[], 3
SHP[1], 6
SHP[1], 1
SRP1[], 1
SHP[1], 8
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0442.loclBGR">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

OFFSET[R], 514, 2, 0

    </glyphProgram>

    <glyphProgram name="uni0442.loclSRB">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 4, 11, 114
SHP[2], 14
CALL[], 9, 6, 114
MDRP[m&gt;RWh], 0
SHP[2], 1
SHP[1], 19
SRP1[], 19
SHP[1], 29
SRP1[], 4
SRP2[], 9
SLOOP[], 4
IP[], 34, 33, 41, 40
MIAP[R], 32, 10
CALL[], 37, 11, 114
SHP[2], 24
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0442.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1430, 0, 0

    </glyphProgram>

    <glyphProgram name="uni0443">
/* VTTTalk Unicode 0x443 */
/* ACT generated Wed May  6 15:33:15 2020 */

OFFSET[R], 626, 10, 0

    </glyphProgram>

    <glyphProgram name="uni0443.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 720, 0, 0

    </glyphProgram>

    <glyphProgram name="uni0444">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 4, 11, 114
SHP[2], 20
MDRP[m&gt;RBl], 42
CALL[], 14, 7, 114
SHP[2], 10
MDRP[m&gt;RBl], 43
SHP[1], 31
SRP1[], 31
SHP[1], 28
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0445">
/* VTTTalk Unicode 0x445 */
/* ACT generated Wed May  6 15:33:15 2020 */

OFFSET[R], 625, -1, 0

    </glyphProgram>

    <glyphProgram name="uni0446">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 0, 10, 114
SHP[2], 3
MDRP[m&gt;RWh], 8
SHP[1], 11
SRP1[], 11
SHP[1], 9
SHP[1], 12
CALL[], 1, 6, 114
SHP[2], 6
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0446.loclBGR">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

OFFSET[R], 1423, 0, 0
OFFSET[R], 1920, 454, 0

SVTCA[Y]
CALL[], 26, 18, 0, 0, 0, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="uni0447">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 7, 6, 114
SHP[2], 18
CALL[], 19, 10, 114
SRP2[], 7
IP[], 3
MDAP[R], 3
SHP[1], 12
SRP1[], 12
SHP[1], 0
SRP1[], 0
SHP[1], 15
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0447.loclBGR">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 7, 6, 114
SHP[2], 19
MDAP[R], 17
IP[], 3
MDAP[R], 3
IP[], 16
IP[], 0
SHP[1], 12
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0448">
/* VTT 6.32 compiler */
SVTCA[Y]
MIAP[R], 11, 10
SHP[1], 15
SRP1[], 15
SHP[1], 14
SHP[1], 5
SRP1[], 5
SHP[1], 1
SRP1[], 1
SHP[1], 4
SRP1[], 4
SHP[1], 7
CALL[], 12, 6, 114
SHP[2], 2
SRP1[], 2
SHP[1], 8
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0448.loclBGR">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 0, 11, 114
SHP[2], 10
SHP[2], 28
MDAP[R], 28
CALL[], 5, 6, 114
SHP[2], 16
SHP[2], 26
CALL[], 33, 11, 114
SRP2[], 5
SLOOP[], 4
IP[], 36, 37, 29, 30
SHP[1], 20
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0449">
/* VTTTalk Unicode 0x449 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1332, 0, 0
OFFSET[R], 1920, 697, 0

SVTCA[Y]
CALL[], 19, 11, 1, 0, 0, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="uni0449.loclBGR">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

OFFSET[R], 1433, 0, 0
OFFSET[R], 1920, 858, 0

SVTCA[Y]
CALL[], 43, 28, 0, 0, 0, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="uni044A">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 7, 10, 114
SHP[2], 20
CALL[], 10, 6, 114
SHP[2], 9
SRP1[], 7
IP[], 12
MDAP[R], 12
SHP[1], 19
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni044A.loclBGR">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 2, 6, 114
SHP[2], 1
SHP[2], 9
CALL[], 4, 11, 114
SHP[2], 21
SRP2[], 2
IP[], 13
MDAP[R], 13
SHP[1], 28
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni044A.ss01">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 2, 6, 114
SHP[2], 1
SHP[2], 9
CALL[], 4, 11, 114
SHP[2], 21
SRP1[], 2
IP[], 13
MDAP[R], 13
SHP[1], 28
SRP1[], 28
SHP[1], 10
SRP1[], 10
SHP[1], 31
SRP1[], 31
SHP[1], 7
SHP[1], 32
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni044B">
/* VTT 6.32 compiler */
SVTCA[Y]
MIAP[R], 0, 10
MIAP[R], 4, 6
SHP[1], 14
SHP[1], 21
SRP1[], 21
SHP[1], 22
MIAP[R], 11, 10
SHP[1], 23
MIAP[R], 12, 6
SHP[1], 1
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni044B.ss01">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 0, 11, 114
SHP[2], 17
SHP[2], 31
MDAP[R], 31
CALL[], 4, 6, 114
SHP[2], 32
MDAP[R], 32
SRP1[], 0
IP[], 9
MDAP[R], 9
SHP[1], 24
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni044C">
/* VTT 6.32 compiler */
SVTCA[Y]
MIAP[R], 0, 6
SHP[2], 10
SHP[2], 17
SRP1[], 17
SHP[1], 18
MIAP[R], 7, 10
SHP[1], 19
CALL[], 8, 6, 114
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni044C.loclBGR">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 0, 11, 114
SHP[2], 17
CALL[], 4, 6, 114
SRP1[], 0
IP[], 9
MDAP[R], 9
SHP[1], 24
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni044C.ss01">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 0, 11, 114
SHP[2], 17
CALL[], 4, 6, 114
SRP2[], 0
IP[], 9
MDAP[R], 9
SLOOP[], 3
IP[], 28, 27, 6
SHP[1], 24
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni044D">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 4, 7, 114
SHP[2], 27
CALL[], 12, 11, 114
SHP[2], 19
SRP2[], 4
IP[], 0
MDAP[R], 0
SHP[1], 1
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni044E">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 0, 10, 114
CALL[], 1, 6, 114
CALL[], 8, 11, 114
SHP[2], 24
CALL[], 16, 7, 114
SHP[2], 32
SRP1[], 8
IP[], 6
MDAP[R], 6
SHP[1], 3
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni044E.loclBGR">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 1, 0, 114
CALL[], 8, 11, 114
SHP[2], 7
MDAP[R], 7
SHP[2], 24
SRP1[], 1
IP[], 16
IP[], 6
MDAP[R], 16
MDAP[R], 6
SRP1[], 16
SHP[1], 32
SRP1[], 6
SHP[1], 3
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni044F">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 9, 6, 114
SHP[2], 19
SRP1[], 19
SHP[1], 17
CALL[], 12, 10, 114
SHP[2], 11
SRP2[], 9
IP[], 3
MDAP[R], 3
SHP[1], 24
SHP[1], 14
SRP1[], 14
SHP[1], 13
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0450">
/* VTTTalk Unicode 0x450 */
/* ACT generated Wed May  6 15:33:15 2020 */

OFFSET[R], 1307, 0, 0
OFFSET[R], 1813, 1, 0

SVTCA[Y]
CALL[], 39, 8, 1, 1, 55, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="uni0450.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1449, 0, 0
OFFSET[R], 1813, -10, 0



SVTCA[Y]
MDAP[R], 8
MDRP[m&gt;RWh], 35

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0451">
/* VTTTalk Unicode 0x451 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1307, 0, 0
OFFSET[R], 1807, 3, 0

SVTCA[Y]
CALL[], 39, 8, 1, 1, 75, 86
SHC[2], 1
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni0451.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1449, 0, 0
OFFSET[R], 1807, -10, 0



SVTCA[Y]
MDAP[R], 8
MDRP[m&gt;RWh], 35
MDRP[m&gt;RWh], 47

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0452">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 0, 15, 114
SHP[2], 6
CALL[], 19, 10, 114
CALL[], 20, 0, 114
CALL[], 26, 7, 114
SHP[2], 13
SRP2[], 19
SLOOP[], 3
IP[], 17, 22, 23
MDRP[m&gt;RGr], 34
SHP[2], 35
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0453">
/* VTTTalk Unicode 0x453 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1303, 0, 0
OFFSET[R], 1815, -11, 0



SVTCA[Y]
MDAP[R], 1
MDRP[m&gt;RWh], 7

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0453.loclMKD">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1303, 0, 0
OFFSET[R], 1815, -11, 0



SVTCA[Y]
MDAP[R], 1
MDRP[m&gt;RWh], 7

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0454">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 4, 11, 114
SHP[2], 27
CALL[], 12, 7, 114
SHP[2], 19
SRP1[], 4
IP[], 2
MDAP[R], 2
SHP[1], 3
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0455">
/* VTTTalk Unicode 0x455 */
/* ACT generated Wed May  6 15:33:15 2020 */

OFFSET[R], 573, 25, 0

    </glyphProgram>

    <glyphProgram name="uni0456">
/* VTTTalk Unicode 0x456 */
/* ACT generated Wed May  6 15:33:15 2020 */

OFFSET[R], 480, 2, 0

    </glyphProgram>

    <glyphProgram name="uni0457">
/* VTTTalk Unicode 0x457 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 481, 0, 0
OFFSET[R], 1906, -175, 0

SVTCA[Y]
CALL[], 4, 1, 1, 1, 80, 86
SHC[2], 1
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni0458">
/* VTTTalk Unicode 0x458 */
/* ACT generated Wed May  6 15:33:15 2020 */

OFFSET[R], 497, -2, 0

    </glyphProgram>

    <glyphProgram name="uni0459">
/* VTTTalk Unicode 0x459 */
/* ACT generated Wed May  6 15:33:15 2020 */

OFFSET[R], 1318, 0, 0
OFFSET[R], 1335, 359, 0

    </glyphProgram>

    <glyphProgram name="uni0459.ss01">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 10, 6, 114
SHP[2], 29
SHP[2], 13
SRP1[], 13
SHP[1], 14
CALL[], 21, 11, 114
SHP[2], 4
SRP2[], 10
IP[], 33
IP[], 24
MDAP[R], 33
MDAP[R], 24
SRP1[], 33
SHP[1], 48
SRP1[], 24
SHP[1], 41
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni045A">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 11, 10, 114
SHP[2], 7
SRP1[], 7
SHP[1], 27
CALL[], 12, 6, 114
SHP[2], 17
SRP1[], 11
IP[], 14
MDAP[R], 14
SHP[1], 18
SHP[1], 9
SRP1[], 9
SHP[1], 26
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni045A.ss01">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 1, 6, 114
SHP[2], 24
MDAP[R], 24
CALL[], 19, 11, 114
SHP[2], 7
MDAP[R], 7
SHP[2], 8
SRP1[], 1
IP[], 25
IP[], 3
MDAP[R], 25
MDAP[R], 3
SRP1[], 25
SHP[1], 15
SRP1[], 3
SHP[1], 6
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni045B">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 4, 7, 114
SHP[2], 14
MDRP[m&gt;RGr], 0
SHP[2], 1
CALL[], 20, 10, 114
SHP[2], 10
SRP1[], 4
SLOOP[], 3
IP[], 18, 23, 24
CALL[], 21, 0, 114
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni045C">
/* VTTTalk Unicode 0x45c */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1316, 0, 0
OFFSET[R], 1815, -19, 0



SVTCA[Y]
MDAP[R], 5
MDRP[m&gt;RWh], 16

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni045D">
/* VTTTalk Unicode 0x45d */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1312, 0, 0
OFFSET[R], 1813, 37, 0

SVTCA[Y]
CALL[], 10, 1, 1, 1, 55, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="uni045D.loclBGR">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1423, 0, 0
OFFSET[R], 1813, 22, 0



SVTCA[Y]
MDAP[R], 5
MDRP[m&gt;RWh], 23

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni045D.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1452, 0, 0
OFFSET[R], 1813, 22, 0



SVTCA[Y]
MDAP[R], 5
MDRP[m&gt;RWh], 23

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni045E">
/* VTTTalk Unicode 0x45e */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1326, 0, 0
OFFSET[R], 1919, 32, 0

SVTCA[Y]
CALL[], 23, 20, 1, 1, 55, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni045E.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1458, 0, 0
OFFSET[R], 1919, 112, 0



SVTCA[Y]
MDAP[R], 25
MDRP[m&gt;RWh], 35

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni045F">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 6, 10, 114
SHP[2], 2
MDRP[m&gt;RGr], 3
SHP[1], 9
CALL[], 7, 6, 114
SHP[2], 11
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0462">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 0, 8, 114
SHP[2], 11
MDAP[R], 1
IP[], 3
MDAP[R], 3
SHP[1], 18
MDRP[m&gt;RGr], 19
SHP[2], 20
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0462.ss01">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 0, 9, 114
SHP[2], 9
CALL[], 4, 2, 114
SRP1[], 0
IP[], 23
MDAP[R], 23
SHP[1], 16
MDRP[m&gt;RGr], 30
SHP[2], 31
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0463">
/* VTT 6.32 compiler */
SVTCA[Y]
MIAP[R], 11, 10
SHP[1], 23
MDAP[R], 12
MIAP[R], 14, 6
SHP[1], 4
MDRP[m&gt;RGr], 0
SHP[2], 1
SHP[1], 22
SRP1[], 22
SHP[1], 21
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0463.ss01">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 0, 11, 114
SHP[2], 17
MDAP[R], 4
IP[], 9
MDAP[R], 9
SHP[1], 24
MDRP[m&gt;RWh], 34
SHP[2], 33
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni046A">
/* VTT 6.32 compiler */
SVTCA[Y]
MIAP[R], 0, 8
SHP[2], 25
SRP1[], 25
SHP[1], 18
CALL[], 8, 2, 114
SHP[2], 7
SHP[2], 10
SHP[2], 32
SRP2[], 0
IP[], 26
MDAP[R], 26
SHP[1], 23
SHP[1], 6
SRP1[], 6
SHP[1], 11
SHP[1], 33
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni046B">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 0
SHP[2], 12
SHP[2], 19
CALL[], 31, 6, 114
SRP1[], 0
IP[], 21
MDAP[R], 21
SHP[1], 17
SHP[1], 5
SRP1[], 5
SHP[1], 29
SRP1[], 29
SHP[1], 26
SHP[2], 28
SRP1[], 28
SHP[1], 30
SHP[1], 33
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0472">
/* VTTTalk Unicode 0x472 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1235, 0, 0

    </glyphProgram>

    <glyphProgram name="uni0473">
/* VTTTalk Unicode 0x473 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1398, 0, 0

    </glyphProgram>

    <glyphProgram name="uni0474">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 0, 8, 114
CALL[], 1, 2, 114
SRP2[], 0
IP[], 3
SHP[1], 7
SRP1[], 7
SHP[1], 8
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0475">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 0, 10, 114
SHP[2], 4
CALL[], 1, 6, 114
CALL[], 9, 6, 114
SHP[2], 10
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni048A">
/* VTTTalk Unicode 0x48a */
/* ACT generated Wed May  6 15:33:15 2020 */

OFFSET[R], 1151, 0, 0
OFFSET[R], 1949, 669, 0



SVTCA[Y]
MDAP[R], 1
MDRP[m&gt;RWh], 10

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni048A.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1267, 0, 0
OFFSET[R], 1921, 172, 0
OFFSET[R], 1949, 647, 0


SVTCA[Y]
CALL[], 21, 14, 1, 1, 55, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="uni048B">
/* VTTTalk Unicode 0x48b */
/* ACT generated Wed May  6 15:33:15 2020 */

OFFSET[R], 1312, 0, 0
OFFSET[R], 1823, 37, 0
OFFSET[R], 1950, 457, 0

SVTCA[Y]
CALL[], 10, 1, 1, 1, 55, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="uni048B.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1452, 0, 0
OFFSET[R], 1823, 22, 0
OFFSET[R], 1950, 439, 0



SVTCA[Y]
MDAP[R], 5
MDRP[m&gt;RWh], 23


IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni048C">
/* VTT 6.32 compiler */
SVTCA[Y]
MIAP[R], 0, 8
SHP[2], 11
MDAP[R], 1
IP[], 3
MDAP[R], 3
SHP[1], 18
MDRP[m&gt;RGr], 19
SHP[2], 20
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni048C.ss01">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 0, 9, 114
SHP[2], 9
CALL[], 4, 2, 114
SRP1[], 0
IP[], 23
MDAP[R], 23
SHP[1], 16
MDRP[m&gt;RGr], 30
SHP[2], 31
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni048D">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 1, 6, 114
CALL[], 10, 11, 114
SHP[2], 11
SRP2[], 1
IP[], 4
MDAP[R], 4
SHP[1], 18
MDRP[m&gt;RGr], 20
SHP[2], 21
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni048D.ss01">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 0, 11, 114
SHP[2], 17
CALL[], 4, 6, 114
SRP2[], 0
IP[], 9
MDAP[R], 9
IP[], 27
IP[], 6
SRP2[], 4
SLOOP[], 4
IP[], 31, 34, 33, 32
SHP[1], 24
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni048E">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 0, 8, 114
CALL[], 1, 2, 114
SRP1[], 0
IP[], 11
MDAP[R], 11
SHP[1], 15
SRP1[], 15
SHP[1], 14
SRP1[], 14
SHP[1], 12
SRP1[], 15
SHP[1], 28
MDAP[R], 28
SHP[1], 27
SRP1[], 11
SHP[1], 26
MDAP[R], 26
SHP[1], 25
SHP[2], 23
SRP1[], 23
SHP[1], 24
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni048F">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 0, 11, 114
SHP[2], 23
SRP1[], 23
SHP[1], 41
SRP1[], 41
SHP[1], 42
SHP[2], 40
SRP1[], 40
SHP[1], 39
CALL[], 8, 7, 114
SHP[2], 31
CALL[], 16, 14, 114
CALL[], 17, 6, 114
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0490">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 0, 8, 114
CALL[], 1, 2, 114
MDRP[m&gt;RWh], 3
SHP[1], 6
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0491">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 0, 10, 114
CALL[], 1, 6, 114
MDRP[m&gt;RWh], 3
SHP[1], 6
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0492">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 4, 8, 114
CALL[], 5, 2, 114
SRP1[], 4
IP[], 0
MDAP[R], 0
SHP[1], 1
SHP[2], 8
SRP1[], 8
SHP[1], 9
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0492.loclBSH">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 4
CALL[], 5, 2, 114
SRP1[], 4
IP[], 0
MDAP[R], 0
SHP[1], 1
SHP[2], 8
SRP1[], 8
SHP[1], 9
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0493">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 4, 10, 114
CALL[], 5, 6, 114
SRP1[], 4
IP[], 0
MDAP[R], 0
SHP[1], 1
SHP[2], 8
SRP1[], 8
SHP[1], 9
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0493.loclBSH">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 0
CALL[], 1, 6, 114
SHP[2], 4
SRP1[], 0
IP[], 6
MDAP[R], 6
SHP[1], 7
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0494">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 0, 8, 114
CALL[], 1, 2, 114
SHP[2], 4
SRP1[], 4
SHP[1], 5
MDAP[R], 7
SHP[1], 8
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0495">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 0, 10, 114
CALL[], 1, 6, 114
SHP[2], 4
SRP1[], 4
SHP[1], 5
MDAP[R], 7
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0496">
/* VTTTalk Unicode 0x496 */
/* ACT generated Wed May  6 15:33:15 2020 */

OFFSET[R], 1148, 0, 0
OFFSET[R], 1923, 848, 0

SVTCA[Y]
CALL[], 31, 13, 0, 0, 0, 86
SHC[2], 7

    </glyphProgram>

    <glyphProgram name="uni0497">
/* VTTTalk Unicode 0x497 */
/* ACT generated Wed May  6 15:33:15 2020 */

OFFSET[R], 1310, 0, 0
OFFSET[R], 1924, 655, 0

    </glyphProgram>

    <glyphProgram name="uni0498">
/* VTTTalk Unicode 0x498 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1149, 0, 0
OFFSET[R], 1947, 162, 0

    </glyphProgram>

    <glyphProgram name="uni0498.loclBSH">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1149, 0, 0
OFFSET[R], 1947, 162, 0

    </glyphProgram>

    <glyphProgram name="uni0499">
/* VTT 6.32 compiler */
SVTCA[Y]
MIAP[R], 0, 11
SHP[2], 41
SHP[2], 49
MDRP[m&gt;RBl], 50
MIAP[R], 16, 7
SHP[1], 23
SRP2[], 0
IP[], 33
MDAP[R], 33
SHP[1], 32
SRP1[], 32
SHP[1], 8
SRP1[], 8
SHP[1], 7
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0499.loclBSH">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1311, 0, 0
OFFSET[R], 1842, -67, 0

    </glyphProgram>

    <glyphProgram name="uni049A">
/* VTTTalk Unicode 0x49a */
/* ACT generated Wed May  6 15:33:15 2020 */

OFFSET[R], 1154, 0, 0
OFFSET[R], 1923, 563, 0

SVTCA[Y]
CALL[], 19, 4, 0, 0, 0, 86
SHC[2], 4

    </glyphProgram>

    <glyphProgram name="uni049B">
/* VTTTalk Unicode 0x49b */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1316, 0, 0
OFFSET[R], 1924, 432, 0

SVTCA[Y]
CALL[], 19, 4, 0, 0, 0, 86
SHC[2], 4

    </glyphProgram>

    <glyphProgram name="uni049C">
/* VTT 6.32 compiler */
SVTCA[Y]
MIAP[R], 4, 8
SHP[1], 0
CALL[], 5, 2, 114
SHP[2], 18
SRP2[], 4
IP[], 8
MDAP[R], 8
SHP[1], 1
SHP[1], 2
SHP[1], 12
MDAP[R], 12
SRP1[], 8
SHP[1], 16
SHP[1], 17
SHP[1], 9
SRP1[], 9
SHP[1], 13
MDAP[R], 13
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni049D">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 4, 10, 114
SHP[2], 0
CALL[], 5, 6, 114
SHP[2], 14
SRP1[], 4
IP[], 8
MDAP[R], 8
SHP[1], 1
SHP[1], 2
SHP[1], 12
SHP[1], 13
MDRP[m&gt;RGr], 16
SHP[1], 9
SRP0[], 9
MDRP[m&gt;RGr], 17
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni049E">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 8, 8, 114
SHP[2], 4
CALL[], 9, 2, 114
SHP[2], 18
SHP[2], 1
MDAP[R], 1
SHP[1], 0
SRP1[], 8
IP[], 12
MDAP[R], 12
SHP[1], 13
SRP1[], 13
SHP[1], 5
SHP[1], 6
SHP[1], 16
SHP[1], 17
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni049F">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 8, 10, 114
SHP[2], 4
MDAP[R], 9
IP[], 1
IP[], 12
MDAP[R], 1
MDAP[R], 12
SRP1[], 1
SHP[1], 0
SRP1[], 12
SLOOP[], 5
SHP[1], 13, 17, 16, 5, 6
CALL[], 19, 6, 114
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni04A0">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 1, 2, 114
SHP[2], 0
SHP[2], 10
SHP[2], 18
CALL[], 8, 8, 114
SHP[2], 4
SRP2[], 1
IP[], 12
MDAP[R], 12
SHP[1], 13
SRP1[], 13
SLOOP[], 4
SHP[1], 17, 16, 5, 6
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni04A1">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 1, 6, 114
SHP[2], 0
SHP[2], 10
SHP[2], 18
CALL[], 8, 10, 114
SHP[2], 4
SRP2[], 1
IP[], 12
MDAP[R], 12
SLOOP[], 5
SHP[1], 13, 16, 17, 5, 6
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni04A2">
/* VTTTalk Unicode 0x4a2 */
/* ACT generated Wed May  6 15:33:15 2020 */

OFFSET[R], 1158, 0, 0
OFFSET[R], 1922, 618, 0

SVTCA[Y]
CALL[], 15, 5, 0, 0, 0, 86
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni04A3">
/* VTTTalk Unicode 0x4a3 */
/* ACT generated Wed May  6 15:33:15 2020 */

OFFSET[R], 1320, 0, 0
OFFSET[R], 1920, 461, 0

SVTCA[Y]
CALL[], 15, 0, 0, 0, 0, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="uni04A4">
/* VTTTalk Unicode 0x4a4 */
/* ACT generated Wed May  6 15:33:15 2020 */

OFFSET[R], 1158, 0, 0
OFFSET[R], 1141, 530, 0

    </glyphProgram>

    <glyphProgram name="uni04A5">
/* VTTTalk Unicode 0x4a5 */
/* ACT generated Wed May  6 15:33:15 2020 */

OFFSET[R], 1320, 0, 0
OFFSET[R], 1303, 409, 0

    </glyphProgram>

    <glyphProgram name="uni04A6">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 15
SHP[1], 10
MDAP[R], 23
SHP[1], 2
MIAP[R], 24, 8
SHP[1], 28
CALL[], 25, 2, 114
SHP[2], 31
SRP1[], 31
SHP[1], 32
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni04A7">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 0, 10, 114
SHP[2], 4
CALL[], 1, 6, 114
SHP[2], 7
SRP1[], 7
SHP[1], 8
SRP1[], 8
SHP[1], 5
MDAP[R], 10
SHP[1], 11
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni04A8">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 0, 9, 114
SHP[2], 16
SHP[2], 35
SRP1[], 35
SHP[1], 34
CALL[], 45, 3, 114
SHP[2], 25
SHP[2], 8
SRP1[], 8
SHP[1], 9
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni04A9">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 0, 11, 114
SHP[2], 15
SHP[2], 33
SRP1[], 33
SHP[1], 32
CALL[], 7, 7, 114
SHP[2], 43
SRP1[], 43
SHP[1], 23
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni04AA">
/* VTTTalk Unicode 0x4aa */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1162, 0, 0
OFFSET[R], 1947, 284, 0

    </glyphProgram>

    <glyphProgram name="uni04AA.loclBSH">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1162, 0, 0
OFFSET[R], 1947, 284, 0

    </glyphProgram>

    <glyphProgram name="uni04AA.loclCHU">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1162, 0, 0
OFFSET[R], 1842, 118, 0

    </glyphProgram>

    <glyphProgram name="uni04AB">
/* VTTTalk Unicode 0x4ab */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1324, 0, 0
OFFSET[R], 1948, 184, 0

    </glyphProgram>

    <glyphProgram name="uni04AB.loclCHU">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1324, 0, 0
OFFSET[R], 1842, 17, 0

    </glyphProgram>

    <glyphProgram name="uni04AC">
/* VTTTalk Unicode 0x4ac */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1163, 0, 0
OFFSET[R], 1922, 219, 0

SVTCA[Y]
CALL[], 13, 0, 0, 0, 0, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="uni04AC.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1273, 0, 0
OFFSET[R], 1922, 225, 0



SVTCA[Y]
CALL[], 21, 14, 0, 0, 0, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni04AD">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 0, 10, 114
SHP[2], 13
SRP0[], 13
MDRP[m&gt;RWh], 10
SHP[1], 14
SRP1[], 14
SHP[1], 11
CALL[], 4, 6, 114
SHP[2], 3
SRP1[], 3
SHP[1], 7
SRP1[], 7
SHP[1], 8
SRP1[], 8
SHP[1], 1
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni04B2">
/* VTTTalk Unicode 0x4b2 */
/* ACT generated Wed May  6 15:33:15 2020 */

OFFSET[R], 1167, 0, 0
OFFSET[R], 1923, 487, 0

SVTCA[Y]
CALL[], 15, 10, 0, 0, 0, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="uni04B3">
/* VTTTalk Unicode 0x4b3 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1329, 0, 0
OFFSET[R], 1924, 371, 0

SVTCA[Y]
CALL[], 19, 0, 0, 0, 0, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="uni04B4">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 4, 2, 114
SHP[2], 11
SHP[2], 3
SRP1[], 3
SHP[1], 1
SHP[1], 6
SHP[1], 8
MIAP[R], 9, 8
SHP[1], 0
SHP[1], 13
SHP[1], 21
SRP0[], 21
MDRP[m&gt;RWh], 18
SHP[1], 17
SRP1[], 17
SHP[1], 19
SRP1[], 4
SHP[1], 15
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni04B5">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 0, 10, 114
SHP[2], 3
MDRP[m&gt;RWh], 8
SHP[1], 11
SRP1[], 11
SHP[1], 9
SHP[1], 12
CALL[], 18, 6, 114
SHP[2], 2
SHP[2], 6
SHP[2], 17
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni04B6">
/* VTTTalk Unicode 0x4b6 */
/* ACT generated Wed May  6 15:33:15 2020 */

OFFSET[R], 1168, 0, 0
OFFSET[R], 1922, 514, 0

SVTCA[Y]
CALL[], 23, 16, 0, 0, 0, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni04B7">
/* VTTTalk Unicode 0x4b7 */
/* ACT generated Wed May  6 15:33:15 2020 */

OFFSET[R], 1330, 0, 0
OFFSET[R], 1920, 377, 0

SVTCA[Y]
CALL[], 23, 16, 0, 0, 0, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni04B8">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 11, 2, 114
SHP[2], 22
CALL[], 23, 8, 114
SRP2[], 11
IP[], 7
MDAP[R], 7
IP[], 19
IP[], 4
SHP[1], 0
MDAP[R], 0
SRP1[], 7
SHP[1], 16
SRP1[], 16
SHP[1], 1
MDAP[R], 1
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni04B9">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 11, 6, 114
SHP[2], 22
CALL[], 23, 10, 114
SRP2[], 11
IP[], 7
MDAP[R], 7
SHP[1], 0
MDAP[R], 0
SRP1[], 7
SHP[1], 16
SRP1[], 16
SHP[1], 1
MDAP[R], 1
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni04BA">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 16, 8, 114
SHP[2], 15
CALL[], 17, 2, 114
SRP1[], 16
IP[], 11
MDAP[R], 11
SHP[1], 4
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni04BB">
/* VTTTalk Unicode 0x4bb */
/* ACT generated Wed May  6 15:33:15 2020 */

OFFSET[R], 474, 3, 0

    </glyphProgram>

    <glyphProgram name="uni04BC">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 0, 9, 114
SHP[2], 47
CALL[], 10, 3, 114
SHP[2], 37
SRP1[], 0
IP[], 19
MDAP[R], 19
SHP[1], 30
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni04BD">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 12, 11, 114
SHP[2], 44
CALL[], 20, 7, 114
SHP[2], 35
SRP1[], 12
IP[], 10
IP[], 29
MDAP[R], 10
MDAP[R], 29
SRP1[], 10
SHP[1], 1
SRP1[], 29
SHP[1], 28
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni04BE">
/* VTTTalk Unicode 0x4be */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1214, 0, 0
OFFSET[R], 1947, 422, 0

    </glyphProgram>

    <glyphProgram name="uni04BF">
/* VTTTalk Unicode 0x4bf */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1376, 0, 0
OFFSET[R], 1948, 285, 0

    </glyphProgram>

    <glyphProgram name="uni04C0">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 0, 8, 114
CALL[], 1, 2, 114
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni04C1">
/* VTTTalk Unicode 0x4c1 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1148, 0, 0
OFFSET[R], 1921, 260, 0
SVTCA[Y]
CALL[], 28, 18, 1, 1, 55, 86
SHC[2], 7

    </glyphProgram>

    <glyphProgram name="uni04C2">
/* VTTTalk Unicode 0x4c2 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1310, 0, 0
OFFSET[R], 1919, 172, 0

SVTCA[Y]
CALL[], 28, 18, 1, 1, 55, 86
SHC[2], 7

    </glyphProgram>

    <glyphProgram name="uni04C3">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 0, 8, 114
CALL[], 1, 2, 114
SHP[2], 10
MDAP[R], 12
SHP[1], 17
IP[], 5
MDAP[R], 5
SHP[1], 4
SHP[1], 9
SRP1[], 9
SHP[1], 8
SHP[1], 26
SRP1[], 26
SHP[1], 25
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni04C4">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 0, 15, 114
SHP[2], 5
CALL[], 21, 10, 114
CALL[], 22, 6, 114
SHP[2], 31
SRP1[], 0
IP[], 26
MDAP[R], 26
SLOOP[], 5
SHP[1], 25, 30, 29, 12, 13
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni04C5.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1271, 0, 0
OFFSET[R], 1949, 646, 0

    </glyphProgram>

    <glyphProgram name="uni04C6">
/* VTTTalk Unicode 0x4c6 */
/* ACT generated Wed May  6 15:33:15 2020 */

OFFSET[R], 1318, 0, 0
OFFSET[R], 1950, 396, 0

    </glyphProgram>

    <glyphProgram name="uni04C7">
/* VTT 6.32 compiler */
SVTCA[Y]
MIAP[R], 10, 8
CALL[], 11, 2, 114
SHP[2], 15
SRP2[], 10
IP[], 8
MDAP[R], 8
SHP[1], 13
MIAP[R], 20, 9
SHP[1], 3
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni04C8">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 0, 15, 114
SHP[2], 6
CALL[], 13, 10, 114
CALL[], 14, 6, 114
SHP[2], 19
SRP1[], 0
IP[], 16
MDAP[R], 16
SHP[1], 11
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni04C9">
/* VTTTalk Unicode 0x4c9 */
/* ACT generated Wed May  6 15:33:15 2020 */

OFFSET[R], 1158, 0, 0
OFFSET[R], 1949, 667, 0

    </glyphProgram>

    <glyphProgram name="uni04CA">
/* VTTTalk Unicode 0x4ca */
/* ACT generated Wed May  6 15:33:15 2020 */

OFFSET[R], 1320, 0, 0
OFFSET[R], 1950, 446, 0

    </glyphProgram>

    <glyphProgram name="uni04CB">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 4, 2, 114
SHP[2], 24
MDAP[R], 16
IP[], 0
MDAP[R], 0
SHP[1], 9
SRP1[], 9
SHP[1], 13
SRP1[], 13
SHP[1], 12
CALL[], 20, 8, 114
SHP[2], 17
SHP[2], 21
SHP[2], 23
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni04CC">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 4, 6, 114
SHP[2], 23
CALL[], 19, 10, 114
SHP[2], 16
SHP[2], 20
SHP[2], 22
MDRP[m&gt;RBl], 15
SRP2[], 4
IP[], 0
MDAP[R], 0
SHP[1], 9
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni04CD">
/* VTTTalk Unicode 0x4cd */
/* ACT generated Wed May  6 15:33:15 2020 */

OFFSET[R], 1157, 0, 0
OFFSET[R], 1949, 807, 0

    </glyphProgram>

    <glyphProgram name="uni04CE">
/* VTTTalk Unicode 0x4ce */
/* ACT generated Wed May  6 15:33:15 2020 */

OFFSET[R], 1319, 0, 0
OFFSET[R], 1950, 559, 0

    </glyphProgram>

    <glyphProgram name="uni04CF">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 0, 10, 114
CALL[], 1, 0, 114
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni04D0">
/* VTTTalk Unicode 0x4d0 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1138, 0, 0
OFFSET[R], 1921, 130, 0
SVTCA[Y]
CALL[], 12, 1, 1, 1, 55, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni04D0.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1262, 0, 0
OFFSET[R], 1921, 174, 0

SVTCA[Y]
CALL[], 24, 5, 1, 1, 45, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni04D1">
/* VTTTalk Unicode 0x4d1 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1300, 0, 0
OFFSET[R], 1919, 56, 0
SVTCA[Y]
CALL[], 42, 13, 1, 1, 55, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni04D1.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1447, 0, 0
OFFSET[R], 1919, 100, 0



SVTCA[Y]
MDAP[R], 8
MDRP[m&gt;RWh], 39

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni04D2">
/* VTTTalk Unicode 0x4d2 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1138, 0, 0
OFFSET[R], 1863, 58, 0



SVTCA[Y]
MDAP[R], 1
MDRP[m&gt;RWh], 12
MDRP[m&gt;RWh], 24

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni04D2.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1262, 0, 0
OFFSET[R], 1863, 102, 0



SVTCA[Y]
MDAP[R], 5
MDRP[m&gt;RWh], 24
MDRP[m&gt;RWh], 36

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni04D3">
/* VTTTalk Unicode 0x4d3 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1300, 0, 0
OFFSET[R], 1807, -27, 0

SVTCA[Y]
CALL[], 42, 13, 1, 1, 80, 86
SHC[2], 2
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni04D3.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1447, 0, 0
OFFSET[R], 1807, 17, 0



SVTCA[Y]
MDAP[R], 8
MDRP[m&gt;RWh], 39
MDRP[m&gt;RWh], 51

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni04D4">
/* VTTTalk Unicode 0x4d4 */
/* ACT generated Wed May  6 15:33:15 2020 */

OFFSET[R], 27, 5, 0

    </glyphProgram>

    <glyphProgram name="uni04D4.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 273, 0, 0

    </glyphProgram>

    <glyphProgram name="uni04D5">
/* VTTTalk Unicode 0x4d5 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 422, 0, 0

    </glyphProgram>

    <glyphProgram name="uni04D5.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 669, 0, 0

    </glyphProgram>

    <glyphProgram name="uni04D6">
/* VTTTalk Unicode 0x4d6 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1145, 0, 0
OFFSET[R], 1921, 135, 0
SVTCA[Y]
CALL[], 12, 8, 1, 1, 55, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni04D6.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1264, 0, 0
OFFSET[R], 1921, 108, 0

SVTCA[Y]
CALL[], 47, 17, 1, 1, 55, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="uni04D7">
/* VTTTalk Unicode 0x4d7 */
/* ACT generated Wed May  6 15:33:15 2020 */

OFFSET[R], 1307, 0, 0
OFFSET[R], 1919, 84, 0

SVTCA[Y]
CALL[], 39, 8, 1, 1, 55, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="uni04D7.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1449, 0, 0
OFFSET[R], 1919, 73, 0



SVTCA[Y]
MDAP[R], 8
MDRP[m&gt;RWh], 35

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni04D8">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 0, 9, 114
SHP[2], 17
CALL[], 34, 3, 114
SHP[2], 27
SRP1[], 0
IP[], 11
MDAP[R], 11
SHP[1], 8
SHP[1], 12
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni04D8.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 344, 0, 0

    </glyphProgram>

    <glyphProgram name="uni04D9">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 0, 7, 114
SHP[2], 32
CALL[], 8, 11, 114
SHP[2], 23
SRP2[], 0
IP[], 18
MDAP[R], 18
SHP[1], 15
SRP1[], 15
SHP[1], 19
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni04D9.ss01">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 0, 7, 114
SHP[2], 28
CALL[], 8, 11, 114
SHP[2], 20
SRP1[], 0
SLOOP[], 5
IP[], 12, 15, 16, 13, 14
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni04DA">
/* VTTTalk Unicode 0x4da */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1227, 0, 0
OFFSET[R], 1863, 113, 0


SVTCA[Y]
MDAP[R], 34
MDRP[m&gt;RWh], 44
MDRP[m&gt;RWh], 56

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni04DA.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1290, 0, 0
OFFSET[R], 1863, 108, 0




SVTCA[Y]
MDAP[R], 31
MDRP[m&gt;RWh], 41
MDRP[m&gt;RWh], 53

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni04DB">
/* VTTTalk Unicode 0x4db */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1390, 0, 0
OFFSET[R], 1807, -6, 0

SVTCA[Y]
CALL[], 39, 0, 1, 1, 75, 86
SHC[2], 1
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni04DB.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1470, 0, 0
OFFSET[R], 1807, -2, 0



SVTCA[Y]
MDAP[R], 0
MDRP[m&gt;RWh], 35
MDRP[m&gt;RWh], 47

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni04DC">
/* VTTTalk Unicode 0x4dc */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1148, 0, 0
OFFSET[R], 1863, 188, 0


SVTCA[Y]
MDAP[R], 18
MDRP[m&gt;RWh], 28
MDRP[m&gt;RWh], 40

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni04DD">
/* VTTTalk Unicode 0x4dd */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1310, 0, 0
OFFSET[R], 1807, 89, 0


SVTCA[Y]
MDAP[R], 18
MDRP[m&gt;RWh], 28
MDRP[m&gt;RWh], 40

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni04DE">
/* VTTTalk Unicode 0x4de */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1149, 0, 0
OFFSET[R], 1863, 10, 0



SVTCA[Y]
MDAP[R], 25
MDRP[m&gt;RWh], 45
MDRP[m&gt;RWh], 57

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni04DF">
/* VTTTalk Unicode 0x4df */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1311, 0, 0
OFFSET[R], 1807, -59, 0


SVTCA[Y]
MDAP[R], 16
MDRP[m&gt;RWh], 48
MDRP[m&gt;RWh], 60

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni04E0">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 0, 9, 114
SHP[2], 7
CALL[], 19, 2, 114
SRP2[], 0
IP[], 13
MDAP[R], 13
SHP[1], 24
SRP1[], 24
SHP[1], 22
SRP1[], 22
SHP[1], 15
SRP1[], 19
SHP[1], 18
SRP1[], 18
SHP[1], 16
SRP1[], 16
SHP[1], 21
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni04E1">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 0, 15, 114
SHP[2], 7
CALL[], 19, 6, 114
SHP[2], 18
SRP1[], 18
SHP[1], 21
SRP1[], 21
SHP[1], 16
SRP1[], 0
IP[], 23
MDAP[R], 23
SHP[1], 14
SRP1[], 14
SHP[1], 15
SRP1[], 15
SHP[1], 22
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni04E2">
/* VTTTalk Unicode 0x4e2 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1150, 0, 0
OFFSET[R], 1883, 110, 0
SVTCA[Y]
CALL[], 10, 1, 1, 1, 102, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="uni04E2.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1267, 0, 0
OFFSET[R], 1883, 100, 0



SVTCA[Y]
MDAP[R], 4
MDRP[m&gt;RWh], 21

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni04E3">
/* VTTTalk Unicode 0x4e3 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1312, 0, 0
OFFSET[R], 1830, 37, 0


SVTCA[Y]
MDAP[R], 1
MDRP[m&gt;RWh], 10

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni04E3.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1452, 0, 0
OFFSET[R], 1830, 22, 0



SVTCA[Y]
MDAP[R], 5
MDRP[m&gt;RWh], 23

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni04E4">
/* VTTTalk Unicode 0x4e4 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1150, 0, 0
OFFSET[R], 1863, 110, 0



SVTCA[Y]
MDAP[R], 1
MDRP[m&gt;RWh], 10
MDRP[m&gt;RWh], 22

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni04E4.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1267, 0, 0
OFFSET[R], 1863, 100, 0




SVTCA[Y]
MDAP[R], 4
MDRP[m&gt;RWh], 21
MDRP[m&gt;RWh], 33

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni04E5">
/* VTTTalk Unicode 0x4e5 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1312, 0, 0
OFFSET[R], 1807, 37, 0


SVTCA[Y]
MDAP[R], 1
MDRP[m&gt;RWh], 10
MDRP[m&gt;RWh], 22

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni04E5.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1452, 0, 0
OFFSET[R], 1807, 22, 0



SVTCA[Y]
MDAP[R], 5
MDRP[m&gt;RWh], 23
MDRP[m&gt;RWh], 35

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni04E6">
/* VTTTalk Unicode 0x4e6 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1159, 0, 0
OFFSET[R], 1863, 128, 0


SVTCA[Y]
MDAP[R], 10
MDRP[m&gt;RWh], 40
MDRP[m&gt;RWh], 52

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni04E7">
/* VTTTalk Unicode 0x4e7 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1321, 0, 0
OFFSET[R], 1807, 13, 0



SVTCA[Y]
MDAP[R], 8
MDRP[m&gt;RWh], 32
MDRP[m&gt;RWh], 44

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni04E8">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 0, 3, 114
SHP[2], 20
CALL[], 10, 9, 114
SHP[2], 31
SRP2[], 0
IP[], 37
MDAP[R], 37
SHP[1], 25
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni04E9">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 0, 7, 114
SHP[2], 16
CALL[], 8, 11, 114
SHP[2], 25
SRP2[], 0
IP[], 30
MDAP[R], 30
IP[], 4
IP[], 12
SHP[1], 20
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni04EA">
/* VTTTalk Unicode 0x4ea */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1235, 0, 0
OFFSET[R], 1863, 128, 0


SVTCA[Y]
MDAP[R], 0
MDRP[m&gt;RWh], 42
MDRP[m&gt;RWh], 54

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni04EB">
/* VTTTalk Unicode 0x4eb */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1398, 0, 0
OFFSET[R], 1807, 19, 0



SVTCA[Y]
MDAP[R], 0
MDRP[m&gt;RWh], 34
MDRP[m&gt;RWh], 46

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni04EC">
/* VTTTalk Unicode 0x4ec */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1180, 0, 0
OFFSET[R], 1863, 12, 0


SVTCA[Y]
MDAP[R], 4
MDRP[m&gt;RWh], 38
MDRP[m&gt;RWh], 50

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni04ED">
/* VTTTalk Unicode 0x4ed */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1342, 0, 0
OFFSET[R], 1807, -48, 0



SVTCA[Y]
MDAP[R], 4
MDRP[m&gt;RWh], 34
MDRP[m&gt;RWh], 46

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni04EE">
/* VTTTalk Unicode 0x4ee */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1164, 0, 0
OFFSET[R], 1883, 19, 0
SVTCA[Y]
CALL[], 17, 14, 1, 1, 102, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni04EE.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1274, 0, 0
OFFSET[R], 1883, 95, 0

SVTCA[Y]
CALL[], 34, 19, 1, 1, 85, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="uni04EF">
/* VTTTalk Unicode 0x4ef */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1326, 0, 0
OFFSET[R], 1830, -51, 0



SVTCA[Y]
MDAP[R], 20
MDRP[m&gt;RWh], 23

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni04EF.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1458, 0, 0
OFFSET[R], 1830, 29, 0


SVTCA[Y]
MDAP[R], 25
MDRP[m&gt;RWh], 35

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni04F0">
/* VTTTalk Unicode 0x4f0 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1164, 0, 0
OFFSET[R], 1863, 19, 0



SVTCA[Y]
MDAP[R], 14
MDRP[m&gt;RWh], 17
MDRP[m&gt;RWh], 29

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni04F0.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1274, 0, 0
OFFSET[R], 1863, 95, 0



SVTCA[Y]
MDAP[R], 19
MDRP[m&gt;RWh], 34
MDRP[m&gt;RWh], 46

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni04F1">
/* VTTTalk Unicode 0x4f1 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1326, 0, 0
OFFSET[R], 1807, -51, 0



SVTCA[Y]
MDAP[R], 20
MDRP[m&gt;RWh], 23
MDRP[m&gt;RWh], 35

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni04F1.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1458, 0, 0
OFFSET[R], 1807, 29, 0



SVTCA[Y]
MDAP[R], 25
MDRP[m&gt;RWh], 35
MDRP[m&gt;RWh], 47

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni04F2">
/* VTTTalk Unicode 0x4f2 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1164, 0, 0
OFFSET[R], 1874, 19, 0
SVTCA[Y]
CALL[], 17, 6, 1, 1, 57, 86
SHC[2], 2
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni04F2.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1274, 0, 0
OFFSET[R], 1874, 95, 0

SVTCA[Y]
CALL[], 37, 19, 1, 1, 55, 86
SHC[2], 1
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni04F3">
/* VTTTalk Unicode 0x4f3 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1326, 0, 0
OFFSET[R], 1818, -51, 0



SVTCA[Y]
MDAP[R], 20
MDRP[m&gt;RWh], 26
MDRP[m&gt;RWh], 27

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni04F3.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1458, 0, 0
OFFSET[R], 1818, 29, 0



SVTCA[Y]
MDAP[R], 25
MDRP[m&gt;RWh], 35
MDRP[m&gt;RWh], 39

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni04F4">
/* VTTTalk Unicode 0x4f4 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1168, 0, 0
OFFSET[R], 1863, 29, 0


SVTCA[Y]
MDAP[R], 7
MDRP[m&gt;RWh], 20
MDRP[m&gt;RWh], 32

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni04F5">
/* VTTTalk Unicode 0x4f5 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1330, 0, 0
OFFSET[R], 1807, -44, 0




SVTCA[Y]
MDAP[R], 7
MDRP[m&gt;RWh], 20
MDRP[m&gt;RWh], 32

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni04F6">
/* VTTTalk Unicode 0x4f6 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1141, 0, 0
OFFSET[R], 1922, 88, 0

SVTCA[Y]
CALL[], 10, 0, 0, 0, 0, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="uni04F7">
/* VTTTalk Unicode 0x4f7 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1303, 0, 0
OFFSET[R], 1920, 52, 0

SVTCA[Y]
CALL[], 10, 6, 0, 0, 0, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="uni04F8">
/* VTTTalk Unicode 0x4f8 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1175, 0, 0
OFFSET[R], 1863, 174, 0


SVTCA[Y]
MDAP[R], 8
MDRP[m&gt;RWh], 24
MDRP[m&gt;RWh], 36

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni04F8.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1279, 0, 0
OFFSET[R], 1863, 174, 0




SVTCA[Y]
MDAP[R], 4
MDRP[m&gt;RWh], 34
MDRP[m&gt;RWh], 46

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni04F9">
/* VTTTalk Unicode 0x4f9 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1337, 0, 0
OFFSET[R], 1807, 91, 0




SVTCA[Y]
MDAP[R], 12
MDRP[m&gt;RWh], 24
MDRP[m&gt;RWh], 36

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni04F9.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1462, 0, 0
OFFSET[R], 1807, 70, 0



SVTCA[Y]
MDAP[R], 4
MDRP[m&gt;RWh], 35
MDRP[m&gt;RWh], 47

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni04FA">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 1, 2, 114
SHP[2], 4
MDAP[R], 6
SHP[1], 12
IP[], 26
IP[], 18
MDAP[R], 26
MDAP[R], 18
SRP1[], 26
SHP[1], 25
SRP1[], 18
SHP[1], 5
SHP[1], 19
SRP1[], 19
SHP[1], 16
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni04FB">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 1, 6, 114
SHP[2], 4
MDAP[R], 6
SHP[1], 13
IP[], 27
IP[], 19
MDAP[R], 27
MDAP[R], 19
SRP1[], 27
SHP[1], 26
SRP1[], 19
SHP[1], 20
SHP[1], 5
SRP1[], 5
SHP[1], 17
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni04FC">
/* VTT 6.32 compiler */
SVTCA[Y]
MIAP[R], 0, 8
CALL[], 2, 2, 114
SHP[2], 6
SRP2[], 0
SLOOP[], 6
IP[], 8, 24, 7, 1, 25, 4
MDAP[R], 10
SHP[1], 16
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni04FD">
/* VTT 6.32 compiler */
SVTCA[Y]
MIAP[R], 0, 18
CALL[], 2, 6, 114
SHP[2], 6
SRP2[], 0
SLOOP[], 4
IP[], 21, 1, 22, 4
MDAP[R], 8
SHP[1], 14
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni04FE">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 4, 2, 114
SHP[2], 8
MDAP[R], 10
SHP[1], 13
IP[], 1
MDAP[R], 1
IP[], 6
SRP2[], 10
SLOOP[], 3
IP[], 9, 15, 12
SHP[1], 0
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni04FF">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 0
SHP[2], 12
CALL[], 3, 6, 114
SHP[2], 8
SRP1[], 0
IP[], 16
MDAP[R], 16
SLOOP[], 8
IP[], 5, 6, 10, 1, 2, 9, 13, 14
SHP[1], 17
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0510">
/* VTT 6.32 compiler */
SVTCA[Y]
MIAP[R], 3, 9
SHP[1], 41
MIAP[R], 20, 3
SHP[1], 25
SRP2[], 3
IP[], 34
MDAP[R], 34
SHP[1], 33
SHP[1], 12
SRP1[], 12
SHP[1], 11
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0511">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 0, 11, 114
SHP[2], 41
CALL[], 16, 7, 114
SHP[2], 23
SRP1[], 0
IP[], 33
MDAP[R], 33
SHP[1], 32
SRP1[], 32
SHP[1], 7
SRP1[], 7
SHP[1], 8
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0512">
/* VTT 6.32 compiler */
SVTCA[Y]
MIAP[R], 14, 9
SHP[1], 20
CALL[], 25, 2, 114
SHP[2], 8
MIAP[R], 30, 9
SHP[1], 3
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0513">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 0
SHP[2], 6
CALL[], 32, 6, 114
SHP[2], 12
SRP1[], 12
SHP[1], 13
SRP1[], 13
SHP[1], 10
SRP1[], 0
IP[], 19
MDAP[R], 19
SHP[1], 26
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni051A">
/* VTTTalk Unicode 0x51a */
/* ACT generated Wed May  6 15:33:15 2020 */

OFFSET[R], 167, 10, 0

    </glyphProgram>

    <glyphProgram name="uni051A.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 343, 0, 0

    </glyphProgram>

    <glyphProgram name="uni051B">
/* VTTTalk Unicode 0x51b */
/* ACT generated Wed May  6 15:33:15 2020 */

OFFSET[R], 564, 8, 0

    </glyphProgram>

    <glyphProgram name="uni051C">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 0
SHP[2], 12
CALL[], 1, 2, 114
SHP[2], 6
SHP[2], 10
SRP2[], 0
SLOOP[], 3
IP[], 8, 4, 13
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni051D">
/* VTT 6.32 compiler */
SVTCA[Y]
MIAP[R], 0, 10
SHP[2], 12
CALL[], 1, 6, 114
SRP2[], 0
SLOOP[], 3
IP[], 4, 8, 13
SHP[1], 5
SRP1[], 5
SHP[1], 9
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0524">
/* VTTTalk Unicode 0x524 */
/* ACT generated Wed May  6 15:33:15 2020 */

OFFSET[R], 1160, 0, 0
OFFSET[R], 1922, 627, 0

SVTCA[Y]
CALL[], 13, 0, 0, 0, 0, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="uni0525">
/* VTTTalk Unicode 0x525 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1322, 0, 0
OFFSET[R], 1920, 466, 0


SVTCA[Y]
CALL[], 13, 0, 0, 0, 0, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="uni0526">
/* VTTTalk Unicode 0x526 */
/* ACT generated Wed May  6 15:33:15 2020 */

OFFSET[R], 1212, 0, 0
OFFSET[R], 1922, 581, 0

SVTCA[Y]
CALL[], 23, 16, 0, 0, 0, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni0527">
/* VTT 6.32 compiler */
SVTCA[Y]
MIAP[R], 0, 18
SHP[2], 25
SRP1[], 25
SHP[1], 24
SHP[1], 28
CALL[], 13, 7, 114
SHP[2], 4
MIAP[R], 19, 18
IP[], 8
IP[], 9
MDAP[R], 20
MIAP[R], 26, 18
MDRP[m&gt;RWh], 23
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0528">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 0
CALL[], 7, 2, 114
SHP[2], 12
SRP1[], 0
IP[], 9
MDAP[R], 9
SHP[1], 16
MIAP[R], 14, 18
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni0529">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 0, 6, 114
SHP[2], 20
MIAP[R], 3, 18
MDAP[R], 9
SHP[1], 15
IP[], 21
MDAP[R], 21
SHP[1], 5
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni052E">
/* VTT 6.32 compiler */
SVTCA[Y]
MIAP[R], 0, 9
SHP[2], 6
CALL[], 11, 2, 114
SHP[2], 17
SRP1[], 17
SHP[1], 18
MIAP[R], 13, 8
MDRP[m&lt;RWh], 24
SHP[1], 25
SHP[1], 28
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni052F">
/* VTTTalk Unicode 0x52f */
/* ACT generated Wed May  6 15:33:15 2020 */

OFFSET[R], 1318, 0, 0
OFFSET[R], 1920, 411, 0

SVTCA[Y]
CALL[], 29, 13, 0, 0, 0, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="uni1E08">
/* VTTTalk Unicode 0x1e08 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 30, 0, 0
OFFSET[R], 1842, 108, 0
OFFSET[R], 1871, 108, 0
SVTCA[Y]
CALL[], 57, 10, 1, 1, 54, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni1E09">
/* VTTTalk Unicode 0x1e09 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 425, 0, 0
OFFSET[R], 1842, -9, 0
OFFSET[R], 1815, -9, 0



SVTCA[Y]
MDAP[R], 8
MDRP[m&gt;RWh], 56

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1E09.sc">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 773, 0, 0
OFFSET[R], 1842, 39, 0
OFFSET[R], 1815, 39, 42



SVTCA[Y]
MDAP[R], 8
MDRP[m&gt;RWh], 53

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1E0C">
/* VTTTalk Unicode 0x1e0c */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 37, 0, 0
OFFSET[R], 1839, 96, 0

    </glyphProgram>

    <glyphProgram name="uni1E0D">
/* VTTTalk Unicode 0x1e0d */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 432, 0, 0
OFFSET[R], 1839, 28, 0

    </glyphProgram>

    <glyphProgram name="uni1E0D.sc">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 780, 0, 0
OFFSET[R], 1839, 36, 0

    </glyphProgram>

    <glyphProgram name="uni1E0E">
/* VTTTalk Unicode 0x1e0e */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 37, 0, 0
OFFSET[R], 1845, 96, 0

    </glyphProgram>

    <glyphProgram name="uni1E0F">
/* VTTTalk Unicode 0x1e0f */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 432, 0, 0
OFFSET[R], 1845, 28, 0

    </glyphProgram>

    <glyphProgram name="uni1E0F.sc">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 780, 0, 0
OFFSET[R], 1845, 36, 0

    </glyphProgram>

    <glyphProgram name="uni1E14">
/* VTTTalk Unicode 0x1e14 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 45, 0, 0
OFFSET[R], 1885, 59, 0
SVTCA[Y]
CALL[], 12, 8, 1, 1, 70, 86
SHC[2], 2
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni1E14.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 277, 0, 0
OFFSET[R], 1885, 36, 0

SVTCA[Y]
CALL[], 50, 17, 1, 1, 55, 86
SHC[2], 1
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni1E15">
/* VTTTalk Unicode 0x1e15 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 439, 0, 0
OFFSET[R], 1832, -6, 0
SVTCA[Y]
CALL[], 39, 8, 1, 1, 80, 86
SHC[2], 1
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni1E15.sc">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 787, 0, 0
OFFSET[R], 1832, 6, 42


SVTCA[Y]
MDAP[R], 8
MDRP[m&gt;RWh], 15

MDAP[R], 15

SMD[], 128

MDRP[m&gt;RWh], 16


IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1E15.sc.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1016, 0, 0
OFFSET[R], 1832, -23, 42


SVTCA[Y]
MDAP[R], 19
MDRP[m&gt;RWh], 49

MDAP[R], 49

SMD[], 128

MDRP[m&gt;RWh], 50


IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1E15.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 672, 0, 0
OFFSET[R], 1832, -10, 0



SVTCA[Y]
MDAP[R], 8
MDRP[m&gt;RWh], 38
MDAP[R], 38

SMD[], 128

MDRP[m&gt;RWh], 39

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1E16">
/* VTTTalk Unicode 0x1e16 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 45, 0, 0
OFFSET[R], 1886, 59, 0
SVTCA[Y]
CALL[], 12, 8, 1, 1, 87, 86
SHC[2], 2
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni1E16.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 277, 0, 0
OFFSET[R], 1886, 36, 0

SVTCA[Y]
CALL[], 50, 17, 1, 1, 55, 86
SHC[2], 1
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni1E17">
/* VTTTalk Unicode 0x1e17 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 439, 0, 0
OFFSET[R], 1833, -6, 0
SVTCA[Y]
CALL[], 39, 8, 1, 1, 80, 86
SHC[2], 1
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni1E17.sc">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 787, 0, 0
OFFSET[R], 1833, 6, 42


SVTCA[Y]
MDAP[R], 8
MDRP[m&gt;RWh], 15

MDAP[R], 15

SMD[], 128

MDRP[m&gt;RWh], 16


IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1E17.sc.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1016, 0, 0
OFFSET[R], 1833, -23, 42


SVTCA[Y]
MDAP[R], 19
MDRP[m&gt;RWh], 49

MDAP[R], 49

SMD[], 128

MDRP[m&gt;RWh], 50


IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1E17.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 672, 0, 0
OFFSET[R], 1833, -10, 0



SVTCA[Y]
MDAP[R], 8
MDRP[m&gt;RWh], 38
MDAP[R], 38

SMD[], 128

MDRP[m&gt;RWh], 39

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1E1C">
/* VTTTalk Unicode 0x1e1c */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 45, 0, 0
OFFSET[R], 1842, 76, 0
OFFSET[R], 1878, 59, 0
SVTCA[Y]
CALL[], 27, 7, 0, 0, 5, 86
SHC[2], 2
CALL[], 35, 8, 1, 1, 54, 86
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni1E1C.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 277, 0, 0
OFFSET[R], 1842, 36, 0
OFFSET[R], 1878, 36, 0

SVTCA[Y]
CALL[], 70, 17, 1, 1, 55, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni1E1D">
/* VTTTalk Unicode 0x1e1d */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 439, 0, 0
OFFSET[R], 1842, -6, 0
OFFSET[R], 1823, -6, 0



SVTCA[Y]
MDAP[R], 8
MDRP[m&gt;RWh], 62

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1E1D.sc">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 787, 0, 0
OFFSET[R], 1842, 20, 0
OFFSET[R], 1823, 6, 42



SVTCA[Y]
MDAP[R], 8
MDRP[m&gt;RWh], 35

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1E1D.sc.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1016, 0, 0
OFFSET[R], 1842, -23, 0
OFFSET[R], 1823, -23, 42




SVTCA[Y]
MDAP[R], 19
MDRP[m&gt;RWh], 69

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1E1D.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 672, 0, 0
OFFSET[R], 1842, -10, 0
OFFSET[R], 1823, -10, 0



SVTCA[Y]
MDAP[R], 8
MDRP[m&gt;RWh], 58

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1E20">
/* VTTTalk Unicode 0x1e20 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 71, 0, 0
OFFSET[R], 1883, 102, -1
SVTCA[Y]
CALL[], 38, 10, 1, 1, 98, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni1E20.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 301, 0, 0
OFFSET[R], 1883, 102, 0



SVTCA[Y]
MDAP[R], 10
MDRP[m&gt;RWh], 40

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1E21">
/* VTTTalk Unicode 0x1e21 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 466, 0, 0
OFFSET[R], 1830, 15, 0




SVTCA[Y]
MDAP[R], 27
MDRP[m&gt;RWh], 51

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1E21.sc">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 814, 0, 0
OFFSET[R], 1830, 35, 42



SVTCA[Y]
MDAP[R], 12
MDRP[m&gt;RWh], 35

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1E21.sc.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1041, 0, 0
OFFSET[R], 1830, 35, 42



SVTCA[Y]
MDAP[R], 9
MDRP[m&gt;RWh], 37

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1E24">
/* VTTTalk Unicode 0x1e24 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 79, 0, 0
OFFSET[R], 1839, 108, 0

    </glyphProgram>

    <glyphProgram name="uni1E25">
/* VTTTalk Unicode 0x1e25 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 474, 0, 0
OFFSET[R], 1839, 35, 0

    </glyphProgram>

    <glyphProgram name="uni1E25.sc">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 823, 0, 0
OFFSET[R], 1839, 46, 0

    </glyphProgram>

    <glyphProgram name="uni1E2A">
/* VTTTalk Unicode 0x1e2a */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 79, 0, 0
OFFSET[R], 1844, 108, 0

    </glyphProgram>

    <glyphProgram name="uni1E2B">
/* VTTTalk Unicode 0x1e2b */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 474, 0, 0
OFFSET[R], 1844, 35, 0
SVTCA[Y]
CALL[], 26, 16, 1, 1, -90, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="uni1E2B.sc">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 823, 0, 0
OFFSET[R], 1844, 46, 0

    </glyphProgram>

    <glyphProgram name="uni1E2E">
/* VTTTalk Unicode 0x1e2e */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 85, 0, 0
OFFSET[R], 1865, -157, 0
SVTCA[Y]
CALL[], 4, 1, 1, 1, 65, 86
SHC[2], 1
SHC[2], 2
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni1E2E.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 309, 0, 0
OFFSET[R], 1865, -89, 0

SVTCA[Y]
CALL[], 12, 9, 1, 1, 70, 86
SHC[2], 3
SHC[2], 4
SHC[2], 5

    </glyphProgram>

    <glyphProgram name="uni1E2F">
/* VTTTalk Unicode 0x1e2f */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 481, 0, 0
OFFSET[R], 1809, -175, 0



SVTCA[Y]
MDAP[R], 1
MDRP[m&gt;RWh], 4
MDRP[m&gt;RWh], 16

MDAP[R], 4
SMD[], 128

MDRP[m&gt;RWh], 28

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1E2F.sc">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 829, 0, 0
OFFSET[R], 1809, -168, 42



SVTCA[Y]
MDAP[R], 1
MDRP[m&gt;RWh], 4
MDRP[m&gt;RWh], 16

MDAP[R], 4
SMD[], 128

MDRP[m&gt;RWh], 28

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1E2F.sc.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1049, 0, 0
OFFSET[R], 1809, -99, 42



SVTCA[Y]
MDAP[R], 9
MDRP[m&gt;RWh], 12
MDRP[m&gt;RWh], 24

MDAP[R], 24
SMD[], 128

MDRP[m&gt;RWh], 36

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1E36">
/* VTTTalk Unicode 0x1e36 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 107, 0, 0
OFFSET[R], 1839, 62, 0

    </glyphProgram>

    <glyphProgram name="uni1E37">
/* VTTTalk Unicode 0x1e37 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 505, 0, 0
OFFSET[R], 1839, -175, 0

    </glyphProgram>

    <glyphProgram name="uni1E37.sc">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 854, 0, 0
OFFSET[R], 1839, 9, 0

    </glyphProgram>

    <glyphProgram name="uni1E37.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 697, 0, 0
OFFSET[R], 1839, -113, 0

    </glyphProgram>

    <glyphProgram name="uni1E3A">
/* VTTTalk Unicode 0x1e3a */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 107, 0, 0
OFFSET[R], 1845, 62, 0

    </glyphProgram>

    <glyphProgram name="uni1E3B">
/* VTTTalk Unicode 0x1e3b */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 505, 0, 0
OFFSET[R], 1845, -175, 0

    </glyphProgram>

    <glyphProgram name="uni1E3B.sc">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 854, 0, 0
OFFSET[R], 1845, 9, 0

    </glyphProgram>

    <glyphProgram name="uni1E3B.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 697, 0, 0
OFFSET[R], 1845, -113, 0

    </glyphProgram>

    <glyphProgram name="uni1E42">
/* VTTTalk Unicode 0x1e42 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 117, 0, 0
OFFSET[R], 1839, 178, 0

    </glyphProgram>

    <glyphProgram name="uni1E42.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 330, 0, 0
OFFSET[R], 1839, 314, 0

    </glyphProgram>

    <glyphProgram name="uni1E43">
/* VTTTalk Unicode 0x1e43 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 514, 0, 0
OFFSET[R], 1839, 237, 0

    </glyphProgram>

    <glyphProgram name="uni1E43.sc">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 863, 0, 0
OFFSET[R], 1839, 103, 0

    </glyphProgram>

    <glyphProgram name="uni1E43.sc.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1070, 0, 0
OFFSET[R], 1839, 226, 0

    </glyphProgram>

    <glyphProgram name="uni1E44">
/* VTTTalk Unicode 0x1e44 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 119, 0, 0
OFFSET[R], 1867, 108, 0


SVTCA[Y]
CALL[], 12, 1, 1, 1, 65, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="uni1E44.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 332, 0, 0
OFFSET[R], 1867, 103, 0




SVTCA[Y]
MDAP[R], 0
MDRP[m&gt;RWh], 21

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1E45">
/* VTTTalk Unicode 0x1e45 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 516, 0, 0
OFFSET[R], 1811, 35, 0




SVTCA[Y]
MDAP[R], 0
MDRP[m&gt;RWh], 23
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1E45.sc">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 865, 0, 0
OFFSET[R], 1811, 46, 42


SVTCA[Y]
MDAP[R], 1
MDRP[m&gt;RWh], 12

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1E45.sc.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1072, 0, 0
OFFSET[R], 1811, 42, 42



SVTCA[Y]
MDAP[R], 0
MDRP[m&gt;RWh],21

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1E46">
/* VTTTalk Unicode 0x1e46 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 119, 0, 0
OFFSET[R], 1839, 108, 0

    </glyphProgram>

    <glyphProgram name="uni1E46.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 332, 0, 0
OFFSET[R], 1839, 101, 0

    </glyphProgram>

    <glyphProgram name="uni1E47">
/* VTTTalk Unicode 0x1e47 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 516, 0, 0
OFFSET[R], 1839, 35, 0

    </glyphProgram>

    <glyphProgram name="uni1E47.sc">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 865, 0, 0
OFFSET[R], 1839, 46, 0

    </glyphProgram>

    <glyphProgram name="uni1E47.sc.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1072, 0, 0
OFFSET[R], 1839, 40, 0

    </glyphProgram>

    <glyphProgram name="uni1E48">
/* VTTTalk Unicode 0x1e48 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 119, 0, 0
OFFSET[R], 1845, 108, 0

    </glyphProgram>

    <glyphProgram name="uni1E48.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 332, 0, 0
OFFSET[R], 1845, 101, 0

    </glyphProgram>

    <glyphProgram name="uni1E49">
/* VTTTalk Unicode 0x1e49 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 516, 0, 0
OFFSET[R], 1845, 35, 0

    </glyphProgram>

    <glyphProgram name="uni1E49.sc">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 865, 0, 0
OFFSET[R], 1845, 46, 0

    </glyphProgram>

    <glyphProgram name="uni1E49.sc.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1072, 0, 0
OFFSET[R], 1845, 40, 0

    </glyphProgram>

    <glyphProgram name="uni1E4C">
/* VTTTalk Unicode 0x1e4c */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 130, 0, 0
OFFSET[R], 1881, 118, 0
SVTCA[Y]
CALL[], 40, 10, 1, 1, 55, 86
SHC[2], 2
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni1E4D">
/* VTTTalk Unicode 0x1e4d */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 527, 0, 0
OFFSET[R], 1828, 5, 0

SVTCA[Y]
MDAP[R], 8
MDRP[m&gt;RWh], 32

MDAP[R], 32

SMD[], 128

MDRP[m&gt;RWh], 57


IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1E4D.sc">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 875, 0, 0
OFFSET[R], 1828, 47, 42



SVTCA[Y]
MDAP[R], 8
MDRP[m&gt;RWh], 32
MDAP[R], 32

SMD[], 128

MDRP[m&gt;RWh], 57

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1E4E">
/* VTTTalk Unicode 0x1e4e */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 130, 0, 0
OFFSET[R], 1880, 118, 0

SVTCA[Y]
CALL[], 40, 10, 1, 1, 69, 86
SHC[2], 2
SHC[2], 3
SHC[2], 4

    </glyphProgram>

    <glyphProgram name="uni1E4F">
/* VTTTalk Unicode 0x1e4f */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 527, 0, 0
OFFSET[R], 1827, 5, 0


SVTCA[Y]
MDAP[R], 8
MDRP[m&gt;RWh], 32
MDAP[R], 32

SMD[], 192


MDRP[m&gt;RWh], 54
MDRP[m&gt;RWh], 66

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1E4F.sc">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 875, 0, 0
OFFSET[R], 1827, 47, 42



SVTCA[Y]
MDAP[R], 8
MDRP[m&gt;RWh], 32
MDAP[R], 32

SMD[], 192

MDRP[m&gt;RWh], 54
MDRP[m&gt;RWh], 66

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1E50">
/* VTTTalk Unicode 0x1e50 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 130, 0, 0
OFFSET[R], 1885, 118, 0
SVTCA[Y]
CALL[], 40, 10, 1, 1, 84, 86
SHC[2], 2
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni1E51">
/* VTTTalk Unicode 0x1e51 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 527, 0, 0
OFFSET[R], 1832, 5, 0


SVTCA[Y]
MDAP[R], 8
MDRP[m&gt;RWh], 32

MDAP[R], 32

SMD[], 128

MDRP[m&gt;RWh], 36


IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1E51.sc">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 875, 0, 0
OFFSET[R], 1832, 47, 42


SVTCA[Y]
MDAP[R], 8
MDRP[m&gt;RWh], 35

MDAP[R], 35

SMD[], 128

MDRP[m&gt;RWh], 36


IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1E52">
/* VTTTalk Unicode 0x1e52 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 130, 0, 0
OFFSET[R], 1886, 118, 0
SVTCA[Y]
CALL[], 40, 10, 1, 1, 84, 86
SHC[2], 2
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni1E53">
/* VTTTalk Unicode 0x1e53 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 527, 0, 0
OFFSET[R], 1833, 5, 0


SVTCA[Y]
MDAP[R], 8
MDRP[m&gt;RWh], 32

MDAP[R], 32

SMD[], 128

MDRP[m&gt;RWh], 36


IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1E53.sc">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 875, 0, 0
OFFSET[R], 1833, 47, 42


SVTCA[Y]
MDAP[R], 8
MDRP[m&gt;RWh], 35

MDAP[R], 35

SMD[], 128

MDRP[m&gt;RWh], 36


IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1E5A">
/* VTTTalk Unicode 0x1e5a */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 168, 0, 0
OFFSET[R], 1839, 66, 0

    </glyphProgram>

    <glyphProgram name="uni1E5B">
/* VTTTalk Unicode 0x1e5b */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 565, 0, 0
OFFSET[R], 1839, -175, 0

    </glyphProgram>

    <glyphProgram name="uni1E5B.sc">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 913, 0, 0
OFFSET[R], 1839, 12, 0

    </glyphProgram>

    <glyphProgram name="uni1E5E">
/* VTTTalk Unicode 0x1e5e */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 168, 0, 0
OFFSET[R], 1845, 66, 0

    </glyphProgram>

    <glyphProgram name="uni1E5F">
/* VTTTalk Unicode 0x1e5f */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 565, 0, 0
OFFSET[R], 1845, -175, 0

    </glyphProgram>

    <glyphProgram name="uni1E5F.sc">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 913, 0, 0
OFFSET[R], 1845, 12, 0

    </glyphProgram>

    <glyphProgram name="uni1E60">
/* VTTTalk Unicode 0x1e60 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 176, 0, 0
OFFSET[R], 1867, 18, 0



SVTCA[Y]
MDAP[R], 23
MDRP[m&gt;RWh], 46

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1E61">
/* VTTTalk Unicode 0x1e61 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 573, 0, 0
OFFSET[R], 1811, -68, 0



SVTCA[Y]
MDAP[R], 22
MDRP[m&gt;RWh], 44

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1E61.sc">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 921, 0, 0
OFFSET[R], 1811, -33, 42



SVTCA[Y]
MDAP[R], 26
MDRP[m&gt;RWh], 44

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1E62">
/* VTTTalk Unicode 0x1e62 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 176, 0, 0
OFFSET[R], 1839, 18, 0

    </glyphProgram>

    <glyphProgram name="uni1E63">
/* VTTTalk Unicode 0x1e63 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 573, 0, 0
OFFSET[R], 1839, -68, 0

    </glyphProgram>

    <glyphProgram name="uni1E63.sc">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 921, 0, 0
OFFSET[R], 1839, -33, 0

    </glyphProgram>

    <glyphProgram name="uni1E64">
/* VTTTalk Unicode 0x1e64 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 176, 0, 0
OFFSET[R], 1872, 18, 0
SVTCA[Y]
CALL[], 46, 23, 1, 1, 54, 86
SHC[2], 1
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni1E65">
/* VTTTalk Unicode 0x1e65 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 573, 0, 0
OFFSET[R], 1816, -68, 0



SVTCA[Y]
MDAP[R], 22
MDRP[m&gt;RWh], 44
MDRP[m&gt;RWh], 48

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1E65.sc">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 921, 0, 0
OFFSET[R], 1816, -33, 42



SVTCA[Y]
MDAP[R], 26
MDRP[m&gt;RWh], 47

MDAP[R], 47
SMD[], 64

MDRP[m&gt;RWh], 48

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1E66">
/* VTTTalk Unicode 0x1e66 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 176, 0, 0
OFFSET[R], 1877, 18, 0
SVTCA[Y]
CALL[], 46, 23, 1, 1, 54, 86
SHC[2], 1
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni1E67">
/* VTTTalk Unicode 0x1e67 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 573, 0, 0
OFFSET[R], 1822, -68, 0



SVTCA[Y]
MDAP[R], 22
MDRP[m&gt;RWh], 44
MDAP[R], 44
SMD[], 128

MDRP[m&gt;RWh], 52

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1E67.sc">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 921, 0, 0
OFFSET[R], 1822, -33, 42


SVTCA[Y]
MDAP[R], 26
MDRP[m&gt;RWh], 44

MDAP[R], 44
SMD[], 128

MDRP[m&gt;RWh], 52

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1E68">
/* VTTTalk Unicode 0x1e68 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 176, 0, 0
OFFSET[R], 1839, 18, 0
OFFSET[R], 1867, 18, 0



SVTCA[Y]
MDAP[R], 23
MDRP[m&gt;RWh], 58

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1E69">
/* VTTTalk Unicode 0x1e69 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 573, 0, 0
OFFSET[R], 1839, -68, 0
OFFSET[R], 1811, -68, 0



SVTCA[Y]
MDAP[R], 22
MDRP[m&gt;RWh], 56
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1E69.sc">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 921, 0, 0
OFFSET[R], 1839, -33, 0
OFFSET[R], 1811, -33, 42




SVTCA[Y]
MDAP[R], 26
MDRP[m&gt;RWh], 56

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1E6C">
/* VTTTalk Unicode 0x1e6c */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 190, 0, 0
OFFSET[R], 1839, -26, 0

    </glyphProgram>

    <glyphProgram name="uni1E6C.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 345, 0, 0
OFFSET[R], 1839, -26, 0

    </glyphProgram>

    <glyphProgram name="uni1E6D">
/* VTTTalk Unicode 0x1e6d */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 587, 0, 0
OFFSET[R], 1839, -59, 0

    </glyphProgram>

    <glyphProgram name="uni1E6D.sc">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 933, 0, 0
OFFSET[R], 1839, -76, 0

    </glyphProgram>

    <glyphProgram name="uni1E6D.sc.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1083, 0, 0
OFFSET[R], 1839, -76, 0

    </glyphProgram>

    <glyphProgram name="uni1E6D.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 707, 0, 0
OFFSET[R], 1839, -73, 0

    </glyphProgram>

    <glyphProgram name="uni1E6E">
/* VTTTalk Unicode 0x1e6e */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 190, 0, 0
OFFSET[R], 1845, -26, 0

    </glyphProgram>

    <glyphProgram name="uni1E6E.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 345, 0, 0
OFFSET[R], 1845, -26, 0

    </glyphProgram>

    <glyphProgram name="uni1E6F">
/* VTTTalk Unicode 0x1e6f */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 587, 0, 0
OFFSET[R], 1845, -59, 0

    </glyphProgram>

    <glyphProgram name="uni1E6F.sc">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 933, 0, 0
OFFSET[R], 1845, -76, 0

    </glyphProgram>

    <glyphProgram name="uni1E6F.sc.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1083, 0, 0
OFFSET[R], 1845, -76, 0

    </glyphProgram>

    <glyphProgram name="uni1E6F.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 707, 0, 0
OFFSET[R], 1845, -73, 0

    </glyphProgram>

    <glyphProgram name="uni1E78">
/* VTTTalk Unicode 0x1e78 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 197, 0, 0
OFFSET[R], 1881, 97, 0
SVTCA[Y]
CALL[], 18, 13, 1, 1, 72, 86
SHC[2], 1
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni1E78.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 352, 0, 0
OFFSET[R], 1881, 93, 0


SVTCA[Y]
CALL[], 21, 4, 1, 1, 70, 86
SHC[2], 1
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni1E79">
/* VTTTalk Unicode 0x1e79 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 595, 0, 0
OFFSET[R], 1828, 29, 0



SVTCA[Y]
MDAP[R], 5
MDRP[m&gt;RWh], 23
MDAP[R], 23

SMD[], 192

MDRP[m&gt;RWh], 45

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1E79.sc">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 941, 0, 0
OFFSET[R], 1828, 36, 42



SVTCA[Y]
MDAP[R], 5
MDRP[m&gt;RWh], 20
MDAP[R], 20

SMD[], 128

MDRP[m&gt;RWh], 45

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1E79.sc.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1091, 0, 0
OFFSET[R], 1828, 36, 42



SVTCA[Y]
MDAP[R], 5
MDRP[m&gt;RWh], 21
MDAP[R], 21

SMD[], 128

MDRP[m&gt;RWh], 43

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1E7A">
/* VTTTalk Unicode 0x1e7a */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 197, 0, 0
OFFSET[R], 1884, 97, 1
SVTCA[Y]
CALL[], 18, 4, 1, 1, 88, 86
SHC[2], 1
SHC[2], 2
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni1E7A.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 352, 0, 0
OFFSET[R], 1884, 93, 1


SVTCA[Y]
CALL[], 21, 4, 1, 1, 65, 86
SHC[2], 1
SHC[2], 2
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni1E7B">
/* VTTTalk Unicode 0x1e7b */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 595, 0, 0
OFFSET[R], 1831, 29, 0



SVTCA[Y]
MDAP[R], 5
MDRP[m&gt;RWh], 23
MDAP[R], 23

SMD[], 128

MDRP[m&gt;RWh], 27
MDRP[m&gt;RWh], 39

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1E7B.sc">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 941, 0, 0
OFFSET[R], 1831, 36, 42



SVTCA[Y]
MDAP[R], 5
MDRP[m&gt;RWh], 23

MDAP[R], 23
SMD[], 192

MDRP[m&gt;RWh], 24
MDRP[m&gt;RWh], 36

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1E7B.sc.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1091, 0, 0
OFFSET[R], 1831, 36, 42



SVTCA[Y]
MDAP[R], 4
MDRP[m&gt;RWh], 24

MDAP[R], 24
SMD[], 192

MDRP[m&gt;RWh], 25
MDRP[m&gt;RWh], 37

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1E8E">
/* VTTTalk Unicode 0x1e8e */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 228, 0, 0
OFFSET[R], 1867, 5, 0
SVTCA[Y]
CALL[], 12, 7, 1, 1, 65, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="uni1E8E.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 381, 0, 0
OFFSET[R], 1867, 92, 0




SVTCA[Y]
CALL[], 34, 19, 1, 1, 55, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="uni1E8F">
/* VTTTalk Unicode 0x1e8f */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 626, 0, 0
OFFSET[R], 1811, -61, 0



SVTCA[Y]
MDAP[R], 20
MDRP[m&gt;RWh], 23

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1E8F.sc">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 972, 0, 0
OFFSET[R], 1811, -36, 42



SVTCA[Y]
MDAP[R], 3
MDRP[m&gt;RWh], 12

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1E8F.sc.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1120, 0, 0
OFFSET[R], 1811, 31, 42



SVTCA[Y]
MDAP[R], 19
MDRP[m&gt;RWh], 34

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1E8F.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 720, 0, 0
OFFSET[R], 1811, 29, 0


SVTCA[Y]
MDAP[R], 25
MDRP[m&gt;RWh], 35

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1E92">
/* VTTTalk Unicode 0x1e92 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 238, 0, 0
OFFSET[R], 1839, 35, 0

    </glyphProgram>

    <glyphProgram name="uni1E92.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 391, 0, 0
OFFSET[R], 1839, 35, 0

    </glyphProgram>

    <glyphProgram name="uni1E93">
/* VTTTalk Unicode 0x1e93 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 636, 0, 0
OFFSET[R], 1839, -45, 0

    </glyphProgram>

    <glyphProgram name="uni1E93.sc">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 982, 0, 0
OFFSET[R], 1839, -21, 0

    </glyphProgram>

    <glyphProgram name="uni1E93.sc.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1130, 0, 0
OFFSET[R], 1839, -25, 0

    </glyphProgram>

    <glyphProgram name="uni1E93.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 730, 0, 0
OFFSET[R], 1839, -50, 0

    </glyphProgram>

    <glyphProgram name="uni1E97">
/* VTTTalk Unicode 0x1e97 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 587, 0, 0
OFFSET[R], 1807, -167, 113



SVTCA[Y]
MDAP[R], 4
MDRP[m&gt;RWh], 19
MDRP[m&gt;RWh], 31

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1E97.sc">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 933, 0, 0
OFFSET[R], 1807, -76, 42


SVTCA[Y]
MDAP[R], 3
MDRP[m&gt;RWh], 8
MDRP[m&gt;RWh], 20

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1E97.sc.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1083, 0, 0
OFFSET[R], 1807, -76, 42



SVTCA[Y]
MDAP[R], 4
MDRP[m&gt;RWh],18
MDRP[m&gt;RWh],30

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1E97.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 707, 0, 0
OFFSET[R], 1807, -181, 113



SVTCA[Y]
MDAP[R], 4
MDRP[m&gt;RWh], 19
MDRP[m&gt;RWh], 31

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1E9E">
/* VTT 6.32 compiler */
SVTCA[Y]
MIAP[R], 0, 9
SHP[2], 7
MIAP[R], 27, 8
MIAP[R], 32, 3
SHP[1], 22
IP[], 42
MDAP[R], 42
SHP[1], 13
SHP[1], 39
SRP1[], 39
SHP[1], 38
SHP[1], 17
SRP1[], 17
SHP[1], 16
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1EA0">
/* VTTTalk Unicode 0x1ea0 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1, 0, 0
OFFSET[R], 1839, 44, 0

    </glyphProgram>

    <glyphProgram name="uni1EA0.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 247, 0, 0
OFFSET[R], 1839, 102, 0

    </glyphProgram>

    <glyphProgram name="uni1EA1">
/* VTTTalk Unicode 0x1ea1 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 396, 0, 0
OFFSET[R], 1839, -17, 0

    </glyphProgram>

    <glyphProgram name="uni1EA1.sc">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 743, 0, 0
OFFSET[R], 1839, -19, 0

    </glyphProgram>

    <glyphProgram name="uni1EA1.sc.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 987, 0, 0
OFFSET[R], 1839, 40, 0

    </glyphProgram>

    <glyphProgram name="uni1EA1.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 643, 0, 0
OFFSET[R], 1839, 17, 0

    </glyphProgram>

    <glyphProgram name="uni1EA2">
/* VTTTalk Unicode 0x1ea2 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1, 0, 0
OFFSET[R], 1887, 44, 0
SVTCA[Y]
CALL[], 12, 1, 1, 1, 53, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni1EA2.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 247, 0, 0
OFFSET[R], 1887, 102, 0

SVTCA[Y]
CALL[], 24, 5, 1, 1, 57, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni1EA3">
/* VTTTalk Unicode 0x1ea3 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 396, 0, 0
OFFSET[R], 1834, -27, 0



SVTCA[Y]
MDAP[R], 13
MDRP[m&gt;RWh], 42

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1EA3.sc">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 743, 0, 0
OFFSET[R], 1834, -19, 42



SVTCA[Y]
MDAP[R], 1
MDRP[m&gt;RWh], 12

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1EA3.sc.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 987, 0, 0
OFFSET[R], 1834, 40, 42



SVTCA[Y]
MDAP[R], 5
MDRP[m&gt;RWh], 24

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1EA3.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 643, 0, 0
OFFSET[R], 1834, 17, 0



SVTCA[Y]
MDAP[R], 8
MDRP[m&gt;RWh], 39

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1EA4">
/* VTTTalk Unicode 0x1ea4 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1, 0, 0
OFFSET[R], 1937, 44, 0

SVTCA[Y]
CALL[], 12, 1, 1, 1, 57, 86
SHC[2], 2
CALL[], 20, 12, 1, 1, 90, 86
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni1EA4.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 247, 0, 0
OFFSET[R], 1937, 102, 0



SVTCA[Y]
CALL[], 24, 5, 1, 1, 45, 86
SHC[2], 2
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni1EA5">
/* VTTTalk Unicode 0x1ea5 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 396, 0, 0
OFFSET[R], 1929, -27, 0
SVTCA[Y]
CALL[], 46, 13, 1, 1, 55, 86
SHC[2], 2
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni1EA5.sc">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 743, 0, 0
OFFSET[R], 1929, -19, 42

SVTCA[Y]
MDAP[R], 2
MDRP[m&gt;RWh], 15

MDAP[R], 15

SMD[], 64

MDRP[m&gt;RWh], 20


IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1EA5.sc.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 987, 0, 0
OFFSET[R], 1929, 40, 42

SVTCA[Y]
MDAP[R], 5
MDRP[m&gt;RWh], 24


MDAP[R], 24

SMD[], 64

MDRP[m&gt;RWh], 32


IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1EA5.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 643, 0, 0
OFFSET[R], 1929, 17, 0



SVTCA[Y]
MDAP[R], 8
MDRP[m&gt;RWh], 43
MDAP[R], 43

SMD[], 64

MDRP[m&gt;RWh], 47

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1EA6">
/* VTTTalk Unicode 0x1ea6 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1, 0, 0
OFFSET[R], 1938, 44, 0

SVTCA[Y]
CALL[], 12, 1, 1, 1, 57, 86
SHC[2], 2


CALL[], 20, 12, 1, 1, 75, 86
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni1EA6.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 247, 0, 0
OFFSET[R], 1938, 102, 0



SVTCA[Y]
CALL[], 24, 5, 1, 1, 45, 86
SHC[2], 2
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni1EA7">
/* VTTTalk Unicode 0x1ea7 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 396, 0, 0
OFFSET[R], 1930, -27, 0
SVTCA[Y]
CALL[], 46, 13, 1, 1, 55, 86
SHC[2], 2
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni1EA7.sc">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 743, 0, 0
OFFSET[R], 1930, -19, 42

SVTCA[Y]
MDAP[R], 2
MDRP[m&gt;RWh], 15

MDAP[R], 15

SMD[], 64

MDRP[m&gt;RWh], 20


IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1EA7.sc.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 987, 0, 0
OFFSET[R], 1930, 40, 42

SVTCA[Y]
MDAP[R], 5
MDRP[m&gt;RWh], 24


MDAP[R], 24

SMD[], 64

MDRP[m&gt;RWh], 32


IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1EA7.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 643, 0, 0
OFFSET[R], 1930, 17, 0



SVTCA[Y]
MDAP[R], 8
MDRP[m&gt;RWh], 43
MDAP[R], 43

SMD[], 64

MDRP[m&gt;RWh], 47

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1EA8">
/* VTTTalk Unicode 0x1ea8 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1, 0, 0
OFFSET[R], 1939, 44, 0

SVTCA[Y]
CALL[], 12, 1, 1, 1, 57, 86
SHC[2], 2

CALL[], 20, 12, 1, 1, 61, 86
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni1EA8.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 247, 0, 0
OFFSET[R], 1939, 102, 0




SVTCA[Y]
CALL[], 24, 5, 1, 1, 45, 86
SHC[2], 2
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni1EA9">
/* VTTTalk Unicode 0x1ea9 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 396, 0, 0
OFFSET[R], 1931, -27, 0
SVTCA[Y]
CALL[], 46, 13, 1, 1, 55, 86
SHC[2], 2
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni1EA9.sc">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 743, 0, 0
OFFSET[R], 1931, -19, 42

SVTCA[Y]
MDAP[R], 2
MDRP[m&gt;RWh], 15

MDAP[R], 15

SMD[], 64

MDRP[m&gt;RWh], 20


IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1EA9.sc.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 987, 0, 0
OFFSET[R], 1931, 40, 42

SVTCA[Y]
MDAP[R], 5
MDRP[m&gt;RWh], 24


MDAP[R], 24

SMD[], 64

MDRP[m&gt;RWh], 32


IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1EA9.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 643, 0, 0
OFFSET[R], 1931, 17, 0



SVTCA[Y]
MDAP[R], 8
MDRP[m&gt;RWh], 43
MDAP[R], 43

SMD[], 64

MDRP[m&gt;RWh], 47

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1EAA">
/* VTTTalk Unicode 0x1eaa */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1, 0, 0
OFFSET[R], 1940, 44, 0

SVTCA[Y]
CALL[], 12, 1, 1, 1, 57, 86
SHC[2], 2

CALL[], 20, 12, 1, 1, 160, 86
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni1EAA.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 247, 0, 0
OFFSET[R], 1940, 102, 0



SVTCA[Y]
CALL[], 24, 5, 1, 1, 45, 86
SHC[2], 2
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni1EAB">
/* VTTTalk Unicode 0x1eab */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 396, 0, 0
OFFSET[R], 1932, -27, 0
SVTCA[Y]
CALL[], 46, 13, 1, 1, 55, 86
SHC[2], 2
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni1EAB.sc">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 743, 0, 0
OFFSET[R], 1932, -19, 42

SVTCA[Y]
MDAP[R], 1
MDRP[m&gt;RWh], 12

MDAP[R], 12

SMD[], 192

MDRP[m&gt;RWh], 20


IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1EAB.sc.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 987, 0, 0
OFFSET[R], 1932, 40, 42

SVTCA[Y]
MDAP[R], 5
MDRP[m&gt;RWh], 24


MDAP[R], 24

SMD[], 128

MDRP[m&gt;RWh], 32


IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1EAB.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 643, 0, 0
OFFSET[R], 1932, 17, 0



SVTCA[Y]
MDAP[R], 8
MDRP[m&gt;RWh], 43
MDAP[R], 43

SMD[], 192

MDRP[m&gt;RWh], 47

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1EAC">
/* VTTTalk Unicode 0x1eac */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1, 0, 0
OFFSET[R], 1839, 44, 0
OFFSET[R], 1875, 44, 0
SVTCA[Y]
CALL[], 24, 1, 1, 1, 57, 86
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni1EAC.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 247, 0, 0
OFFSET[R], 1839, 102, 0
OFFSET[R], 1875, 102, 0

SVTCA[Y]
CALL[], 40, 5, 1, 1, 45, 86
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni1EAD">
/* VTTTalk Unicode 0x1ead */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 396, 0, 0
OFFSET[R], 1839, -17, 0
OFFSET[R], 1820, -27, 0
SVTCA[Y]
CALL[], 54, 13, 1, 1, 65, 86
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni1EAD.sc">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 743, 0, 0
OFFSET[R], 1839, -19, 0
OFFSET[R], 1820, -19, 42


SVTCA[Y]
MDAP[R], 1
MDRP[m&gt;RWh], 24

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1EAD.sc.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 987, 0, 0
OFFSET[R], 1839, 40, 0
OFFSET[R], 1820, 40, 42




SVTCA[Y]
MDAP[R], 5
MDRP[m&gt;RWh], 36

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1EAD.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 643, 0, 0
OFFSET[R], 1839, 17, 0
OFFSET[R], 1820, 17, 0



SVTCA[Y]
MDAP[R], 8
MDRP[m&gt;RWh], 51

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1EAE">
/* VTTTalk Unicode 0x1eae */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1, 0, 0
OFFSET[R], 1933, 44, 0

SVTCA[Y]
CALL[], 12, 1, 1, 1, 50, 86
SHC[2], 2
CALL[], 26, 19, 1, 1, 79, 86
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni1EAE.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 247, 0, 0
OFFSET[R], 1933, 102, 0

SVTCA[Y]
CALL[], 24, 5, 1, 1, 45, 86
SHC[2], 2
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni1EAF">
/* VTTTalk Unicode 0x1eaf */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 396, 0, 0
OFFSET[R], 1925, -27, 0
SVTCA[Y]
CALL[], 42, 13, 1, 1, 60, 86
SHC[2], 2
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni1EAF.sc">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 743, 0, 0
OFFSET[R], 1925, -19, 42

SVTCA[Y]
CALL[], 12, 1, 1, 1, 57, 86
SHC[2], 2
CALL[], 26, 19, 1, 1, 57, 86
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni1EAF.sc.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 987, 0, 0
OFFSET[R], 1925, 40, 42

SVTCA[Y]
MDAP[R], 5
MDRP[m&gt;RWh], 24


MDAP[R], 24

SMD[], 128

MDRP[m&gt;RWh], 41


IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1EAF.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 643, 0, 0
OFFSET[R], 1925, 17, 0



SVTCA[Y]
MDAP[R], 8
MDRP[m&gt;RWh], 39
MDAP[R], 39

SMD[], 128

MDRP[m&gt;RWh], 53

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1EB0">
/* VTTTalk Unicode 0x1eb0 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1, 0, 0
OFFSET[R], 1934, 44, 0

SVTCA[Y]

CALL[], 12, 1, 1, 1, 57, 86
SHC[2], 2
CALL[], 26, 19, 1, 1, 79, 86
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni1EB0.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 247, 0, 0
OFFSET[R], 1934, 102, 0

SVTCA[Y]
CALL[], 24, 5, 1, 1, 45, 86
SHC[2], 2
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni1EB1">
/* VTTTalk Unicode 0x1eb1 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 396, 0, 0
OFFSET[R], 1926, -27, 0
SVTCA[Y]
CALL[], 42, 13, 1, 1, 55, 86
SHC[2], 2
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni1EB1.sc">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 743, 0, 0
OFFSET[R], 1926, -19, 42



SVTCA[Y]
MDAP[R], 1
MDRP[m&gt;RWh], 12
MDAP[R], 12

SMD[], 128

MDRP[m&gt;RWh], 26

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1EB1.sc.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 987, 0, 0
OFFSET[R], 1926, 40, 42

SVTCA[Y]
MDAP[R], 5
MDRP[m&gt;RWh], 24


MDAP[R], 24

SMD[], 128

MDRP[m&gt;RWh], 41


IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1EB1.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 643, 0, 0
OFFSET[R], 1926, 17, 0



SVTCA[Y]
MDAP[R], 8
MDRP[m&gt;RWh], 39
MDAP[R], 39

SMD[], 128

MDRP[m&gt;RWh], 53

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1EB2">
/* VTTTalk Unicode 0x1eb2 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1, 0, 0
OFFSET[R], 1935, 44, 0

SVTCA[Y]
CALL[], 12, 1, 1, 1, 57, 86
SHC[2], 2
CALL[], 26, 19, 1, 1, 57, 86
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni1EB2.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 247, 0, 0
OFFSET[R], 1935, 102, 0


SVTCA[Y]
CALL[], 24, 5, 1, 1, 45, 86
SHC[2], 2
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni1EB3">
/* VTTTalk Unicode 0x1eb3 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 396, 0, 0
OFFSET[R], 1927, -27, 0
SVTCA[Y]
CALL[], 42, 13, 1, 1, 55, 86
SHC[2], 2
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni1EB3.sc">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 743, 0, 0
OFFSET[R], 1927, -19, 42



SVTCA[Y]
MDAP[R], 1
MDRP[m&gt;RWh], 12
MDAP[R], 12

SMD[], 128

MDRP[m&gt;RWh], 26

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1EB3.sc.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 987, 0, 0
OFFSET[R], 1927, 40, 42

SVTCA[Y]
MDAP[R], 5
MDRP[m&gt;RWh], 24


MDAP[R], 24

SMD[], 128

MDRP[m&gt;RWh], 38


IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1EB3.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 643, 0, 0
OFFSET[R], 1927, 17, 0



SVTCA[Y]
MDAP[R], 8
MDRP[m&gt;RWh], 39
MDAP[R], 39

SMD[], 128

MDRP[m&gt;RWh], 53

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1EB4">
/* VTTTalk Unicode 0x1eb4 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1, 0, 0
OFFSET[R], 1936, 44, 0

SVTCA[Y]
CALL[], 12, 1, 1, 1, 57, 86
SHC[2], 2
CALL[], 26, 19, 1, 1, 70, 86
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni1EB4.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 247, 0, 0
OFFSET[R], 1936, 102, 0


SVTCA[Y]
CALL[], 24, 5, 1, 1, 45, 86
SHC[2], 2
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni1EB5">
/* VTTTalk Unicode 0x1eb5 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 396, 0, 0
OFFSET[R], 1928, -27, 0
SVTCA[Y]
CALL[], 42, 13, 1, 1, 55, 86
SHC[2], 2
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni1EB5.sc">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 743, 0, 0
OFFSET[R], 1928, -19, 42



SVTCA[Y]
MDAP[R], 1
MDRP[m&gt;RWh], 12
MDAP[R], 12

SMD[], 192

MDRP[m&gt;RWh], 26

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1EB5.sc.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 987, 0, 0
OFFSET[R], 1928, 40, 42

SVTCA[Y]
MDAP[R], 5
MDRP[m&gt;RWh], 24


MDAP[R], 24

SMD[], 128

MDRP[m&gt;RWh], 38


IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1EB5.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 643, 0, 0
OFFSET[R], 1928, 17, 0



SVTCA[Y]
MDAP[R], 8
MDRP[m&gt;RWh], 39
MDAP[R], 39

SMD[], 192

MDRP[m&gt;RWh], 53

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1EB6">
/* VTTTalk Unicode 0x1eb6 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1, 0, 0
OFFSET[R], 1839, 44, 0
OFFSET[R], 1878, 44, 0


SVTCA[Y]
CALL[], 24, 1, 1, 1, 57, 86
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni1EB6.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 247, 0, 0
OFFSET[R], 1839, 102, 0
OFFSET[R], 1878, 102, 0


SVTCA[Y]
CALL[], 36, 5, 1, 1, 45, 86
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni1EB7">
/* VTTTalk Unicode 0x1eb7 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 396, 0, 0
OFFSET[R], 1839, -17, 0
OFFSET[R], 1823, -27, 0


SVTCA[Y]
MDAP[R], 13
MDRP[m&gt;RWh], 54

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1EB7.sc">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 743, 0, 0
OFFSET[R], 1839, -19, 0
OFFSET[R], 1823, -19, 42


SVTCA[Y]
MDAP[R], 1
MDRP[m&gt;RWh], 24

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1EB7.sc.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 987, 0, 0
OFFSET[R], 1839, 40, 0
OFFSET[R], 1823, 40, 42




SVTCA[Y]
MDAP[R], 5
MDRP[m&gt;RWh], 36

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1EB7.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 643, 0, 0
OFFSET[R], 1839, 17, 0
OFFSET[R], 1823, 17, 0



SVTCA[Y]
MDAP[R], 8
MDRP[m&gt;RWh], 51

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1EB8">
/* VTTTalk Unicode 0x1eb8 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 45, 0, 0
OFFSET[R], 1839, 76, 0

    </glyphProgram>

    <glyphProgram name="uni1EB8.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 277, 0, 0
OFFSET[R], 1839, 36, 0

    </glyphProgram>

    <glyphProgram name="uni1EB9">
/* VTTTalk Unicode 0x1eb9 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 439, 0, 0
OFFSET[R], 1839, -6, 0

    </glyphProgram>

    <glyphProgram name="uni1EB9.sc">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 787, 0, 0
OFFSET[R], 1839, 20, 0

    </glyphProgram>

    <glyphProgram name="uni1EB9.sc.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1016, 0, 0
OFFSET[R], 1839, -23, 0

    </glyphProgram>

    <glyphProgram name="uni1EB9.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 672, 0, 0
OFFSET[R], 1839, -10, 0

    </glyphProgram>

    <glyphProgram name="uni1EBA">
/* VTTTalk Unicode 0x1eba */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 45, 0, 0
OFFSET[R], 1887, 59, 0
SVTCA[Y]
CALL[], 12, 8, 1, 1, 53, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni1EBA.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 277, 0, 0
OFFSET[R], 1887, 36, 0

SVTCA[Y]
CALL[], 47, 17, 1, 1, 57, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="uni1EBB">
/* VTTTalk Unicode 0x1ebb */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 439, 0, 0
OFFSET[R], 1834, -6, 0



SVTCA[Y]
MDAP[R], 8
MDRP[m&gt;RWh], 39
MDRP[m&gt;RWh], 43

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1EBB.sc">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 787, 0, 0
OFFSET[R], 1834, 6, 42



SVTCA[Y]
MDAP[R], 8
MDRP[m&gt;RWh], 12

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1EBB.sc.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1016, 0, 0
OFFSET[R], 1834, -23, 42



SVTCA[Y]
MDAP[R], 19
MDRP[m&gt;RWh], 46

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1EBB.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 672, 0, 0
OFFSET[R], 1834, -10, 0



SVTCA[Y]
MDAP[R], 8
MDRP[m&gt;RWh], 35

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1EBC">
/* VTTTalk Unicode 0x1ebc */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 45, 0, 0
OFFSET[R], 1879, 59, 0
SVTCA[Y]
CALL[], 12, 8, 1, 1, 69, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni1EBC.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 277, 0, 0
OFFSET[R], 1879, 36, 0

SVTCA[Y]
CALL[], 47, 17, 1, 1, 57, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="uni1EBD">
/* VTTTalk Unicode 0x1ebd */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 439, 0, 0
OFFSET[R], 1826, -6, 0



SVTCA[Y]
MDAP[R], 8
MDRP[m&gt;RWh], 39

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1EBD.sc">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 787, 0, 0
OFFSET[R], 1826, 6, 42



SVTCA[Y]
MDAP[R], 8
MDRP[m&gt;RWh], 12

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1EBD.sc.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1016, 0, 0
OFFSET[R], 1826, -23, 42



SVTCA[Y]
MDAP[R], 19
MDRP[m&gt;RWh], 46

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1EBD.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 672, 0, 0
OFFSET[R], 1826, -10, 0



SVTCA[Y]
MDAP[R], 8
MDRP[m&gt;RWh], 35

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1EBE">
/* VTTTalk Unicode 0x1ebe */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 45, 0, 0
OFFSET[R], 1937, 59, 0
SVTCA[Y]
CALL[], 16, 8, 1, 1, 57, 86
SHC[2], 2
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni1EBE.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 277, 0, 0
OFFSET[R], 1937, 36, 0

SVTCA[Y]
CALL[], 51, 17, 1, 1, 55, 86
SHC[2], 1
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni1EBF">
/* VTTTalk Unicode 0x1ebf */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 439, 0, 0
OFFSET[R], 1929, -6, 0


SVTCA[Y]
CALL[], 43, 8, 1, 1, 65, 86
SHC[2], 1
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni1EBF.sc">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 787, 0, 0
OFFSET[R], 1929, 6, 42



SVTCA[Y]
MDAP[R], 8
MDRP[m&gt;RWh], 12
MDRP[m&gt;RWh], 20

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1EBF.sc.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1016, 0, 0
OFFSET[R], 1929, -23, 42




SVTCA[Y]
MDAP[R], 19
MDRP[m&gt;RWh], 46

MDAP[R], 46

SMD[], 64

MDRP[m&gt;RWh], 54


IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1EBF.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 672, 0, 0
OFFSET[R], 1929, -10, 0



SVTCA[Y]
MDAP[R], 8
MDRP[m&gt;RWh], 39
MDAP[R], 39

SMD[], 64

MDRP[m&gt;RWh], 43

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1EC0">
/* VTTTalk Unicode 0x1ec0 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 45, 0, 0
OFFSET[R], 1938, 59, 0

SVTCA[Y]
CALL[], 12, 8, 1, 1, 57, 86
SHC[2], 2
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni1EC0.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 277, 0, 0
OFFSET[R], 1938, 36, 0

SVTCA[Y]
CALL[], 51, 17, 1, 1, 55, 86
SHC[2], 1
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni1EC1">
/* VTTTalk Unicode 0x1ec1 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 439, 0, 0
OFFSET[R], 1930, -6, 0
SVTCA[Y]
CALL[], 43, 8, 1, 1, 65, 86
SHC[2], 1
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni1EC1.sc">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 787, 0, 0
OFFSET[R], 1930, 6, 42



SVTCA[Y]
MDAP[R], 8
MDRP[m&gt;RWh], 12
MDRP[m&gt;RWh], 20

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1EC1.sc.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1016, 0, 0
OFFSET[R], 1930, -23, 42




SVTCA[Y]
MDAP[R], 19
MDRP[m&gt;RWh], 46

MDAP[R], 46

SMD[], 64

MDRP[m&gt;RWh], 54


IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1EC1.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 672, 0, 0
OFFSET[R], 1930, -10, 0



SVTCA[Y]
MDAP[R], 8
MDRP[m&gt;RWh], 39
MDAP[R], 39

SMD[], 64

MDRP[m&gt;RWh], 43

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1EC2">
/* VTTTalk Unicode 0x1ec2 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 45, 0, 0
OFFSET[R], 1939, 59, 0

SVTCA[Y]
CALL[], 12, 8, 1, 1, 57, 86
SHC[2], 2


CALL[], 20, 12, 1, 1, 75, 86
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni1EC2.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 277, 0, 0
OFFSET[R], 1939, 36, 0

SVTCA[Y]
CALL[], 51, 17, 1, 1, 55, 86
SHC[2], 1
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni1EC3">
/* VTTTalk Unicode 0x1ec3 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 439, 0, 0
OFFSET[R], 1931, -6, 0



SVTCA[Y]
MDAP[R], 8
MDRP[m&gt;RWh], 43
MDAP[R], 43

SMD[], 64

MDRP[m&gt;RWh], 47

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1EC3.sc">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 787, 0, 0
OFFSET[R], 1931, 6, 42



SVTCA[Y]
MDAP[R], 8
MDRP[m&gt;RWh], 12
MDRP[m&gt;RWh], 20

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1EC3.sc.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1016, 0, 0
OFFSET[R], 1931, -23, 42



SVTCA[Y]
MDAP[R], 19
MDRP[m&gt;RWh], 46

MDAP[R], 46

SMD[], 64

MDRP[m&gt;RWh], 54


IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1EC3.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 672, 0, 0
OFFSET[R], 1931, -10, 0


SVTCA[Y]
MDAP[R], 8
MDRP[m&gt;RWh], 39
MDAP[R], 39

SMD[], 64

MDRP[m&gt;RWh], 43

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1EC4">
/* VTTTalk Unicode 0x1ec4 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 45, 0, 0
OFFSET[R], 1940, 59, 0

SVTCA[Y]
CALL[], 12, 8, 1, 1, 57, 86
SHC[2], 2
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni1EC4.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 277, 0, 0
OFFSET[R], 1940, 36, 0

SVTCA[Y]
CALL[], 51, 17, 1, 1, 55, 86
SHC[2], 1
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni1EC5">
/* VTTTalk Unicode 0x1ec5 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 439, 0, 0
OFFSET[R], 1932, -6, 0
SVTCA[Y]
CALL[], 43, 8, 1, 1, 65, 86
SHC[2], 1

CALL[], 47, 43, 1, 1, 157, 86

SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni1EC5.sc">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 787, 0, 0
OFFSET[R], 1932, 6, 42

SVTCA[Y]
MDAP[R], 8
MDRP[m&gt;RWh], 12

MDAP[R], 12

SMD[], 192

MDRP[m&gt;RWh], 20


IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1EC5.sc.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1016, 0, 0
OFFSET[R], 1932, -23, 42



SVTCA[Y]
MDAP[R], 19
MDRP[m&gt;RWh], 50

MDAP[R], 50

SMD[], 192

MDRP[m&gt;RWh], 54


IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1EC5.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 672, 0, 0
OFFSET[R], 1932, -10, 0



SVTCA[Y]
MDAP[R], 8
MDRP[m&gt;RWh], 39
MDAP[R], 39

SMD[], 192

MDRP[m&gt;RWh], 43

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1EC6">
/* VTTTalk Unicode 0x1ec6 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 45, 0, 0
OFFSET[R], 1839, 76, 0
OFFSET[R], 1875, 59, 0
SVTCA[Y]
CALL[], 24, 8, 1, 1, 57, 86
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni1EC6.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 277, 0, 0
OFFSET[R], 1839, 36, 0
OFFSET[R], 1875, 36, 0

SVTCA[Y]
CALL[], 63, 17, 1, 1, 55, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni1EC7">
/* VTTTalk Unicode 0x1ec7 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 439, 0, 0
OFFSET[R], 1839, -6, 0
OFFSET[R], 1820, -6, 0



SVTCA[Y]
MDAP[R], 8
MDRP[m&gt;RWh], 55

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1EC7.sc">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 787, 0, 0
OFFSET[R], 1839, 20, 0
OFFSET[R], 1820, 6, 42



SVTCA[Y]
MDAP[R], 8
MDRP[m&gt;RWh], 28

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1EC7.sc.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1016, 0, 0
OFFSET[R], 1839, -23, 0
OFFSET[R], 1820, -23, 42




SVTCA[Y]
MDAP[R], 19
MDRP[m&gt;RWh], 62

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1EC7.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 672, 0, 0
OFFSET[R], 1839, -10, 0
OFFSET[R], 1820, -10, 0



SVTCA[Y]
MDAP[R], 8
MDRP[m&gt;RWh], 51

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1EC8">
/* VTTTalk Unicode 0x1ec8 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 85, 0, 0
OFFSET[R], 1887, -157, 0
SVTCA[Y]
CALL[], 4, 1, 1, 1, 53, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="uni1EC8.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 309, 0, 0
OFFSET[R], 1887, -89, 0



SVTCA[Y]
CALL[], 12, 9, 1, 1, 57, 86
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni1EC9">
/* VTTTalk Unicode 0x1ec9 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 481, 0, 0
OFFSET[R], 1834, -175, 0



SVTCA[Y]
MDAP[R], 1
MDRP[m&gt;RWh], 4
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1EC9.sc">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 829, 0, 0
OFFSET[R], 1834, -168, 42



SVTCA[Y]
MDAP[R], 1
MDRP[m&gt;RWh], 4

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1EC9.sc.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1049, 0, 0
OFFSET[R], 1834, -99, 42



SVTCA[Y]
MDAP[R], 9
MDRP[m&gt;RWh], 12

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1ECA">
/* VTTTalk Unicode 0x1eca */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 85, 0, 0
OFFSET[R], 1839, -157, 0

    </glyphProgram>

    <glyphProgram name="uni1ECA.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 309, 0, 0
OFFSET[R], 1839, -89, 0

    </glyphProgram>

    <glyphProgram name="uni1ECB">
/* VTTTalk Unicode 0x1ecb */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 480, 0, 0
OFFSET[R], 1839, -175, 0

    </glyphProgram>

    <glyphProgram name="uni1ECB.sc">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 829, 0, 0
OFFSET[R], 1839, -168, 0

    </glyphProgram>

    <glyphProgram name="uni1ECB.sc.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1049, 0, 0
OFFSET[R], 1839, -99, 0

    </glyphProgram>

    <glyphProgram name="uni1ECC">
/* VTTTalk Unicode 0x1ecc */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 130, 0, 0
OFFSET[R], 1839, 118, 0

    </glyphProgram>

    <glyphProgram name="uni1ECD">
/* VTTTalk Unicode 0x1ecd */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 527, 0, 0
OFFSET[R], 1839, 5, 0

    </glyphProgram>

    <glyphProgram name="uni1ECD.sc">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 875, 0, 0
OFFSET[R], 1839, 47, 0

    </glyphProgram>

    <glyphProgram name="uni1ECE">
/* VTTTalk Unicode 0x1ece */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 130, 0, 0
OFFSET[R], 1887, 118, 0
SVTCA[Y]
CALL[], 40, 10, 1, 1, 50, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni1ECF">
/* VTTTalk Unicode 0x1ecf */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 527, 0, 0
OFFSET[R], 1834, 5, 0



SVTCA[Y]
MDAP[R], 8
MDRP[m&gt;RWh], 32
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1ECF.sc">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 875, 0, 0
OFFSET[R], 1834, 47, 42



SVTCA[Y]
MDAP[R], 8
MDRP[m&gt;RWh], 32

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1ED0">
/* VTTTalk Unicode 0x1ed0 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 130, 0, 0
OFFSET[R], 1937, 118, 0

SVTCA[Y]
CALL[], 40, 10, 1, 1, 57, 86
SHC[2], 2
CALL[], 48, 40, 1, 1, 95, 86
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni1ED1">
/* VTTTalk Unicode 0x1ed1 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 527, 0, 0
OFFSET[R], 1929, 5, 0
SVTCA[Y]
CALL[], 36, 8, 1, 1, 65, 86
SHC[2], 2
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni1ED1.sc">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 875, 0, 0
OFFSET[R], 1929, 47, 42

SVTCA[Y]
MDAP[R], 8
MDRP[m&gt;RWh], 32

MDAP[R], 32

SMD[], 64

MDRP[m&gt;RWh], 40


IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1ED2">
/* VTTTalk Unicode 0x1ed2 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 130, 0, 0
OFFSET[R], 1938, 118, 0

SVTCA[Y]
CALL[], 40, 10, 1, 1, 57, 86
SHC[2], 2
CALL[], 48, 40, 1, 1, 95, 86
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni1ED3">
/* VTTTalk Unicode 0x1ed3 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 527, 0, 0
OFFSET[R], 1930, 5, 0
SVTCA[Y]
CALL[], 36, 8, 1, 1, 65, 86
SHC[2], 2
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni1ED3.sc">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 875, 0, 0
OFFSET[R], 1930, 47, 42

SVTCA[Y]
MDAP[R], 8
MDRP[m&gt;RWh], 32

MDAP[R], 32

SMD[], 64

MDRP[m&gt;RWh], 40


IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1ED4">
/* VTTTalk Unicode 0x1ed4 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 130, 0, 0
OFFSET[R], 1939, 118, 0

SVTCA[Y]
CALL[], 40, 10, 1, 1, 57, 86
SHC[2], 2
CALL[], 48, 40, 1, 1, 95, 86
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni1ED5">
/* VTTTalk Unicode 0x1ed5 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 527, 0, 0
OFFSET[R], 1931, 5, 0
SVTCA[Y]
CALL[], 36, 8, 1, 1, 65, 86
SHC[2], 2

CALL[], 40, 36, 1, 1, 75, 86

SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni1ED5.sc">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 875, 0, 0
OFFSET[R], 1931, 47, 42

SVTCA[Y]
MDAP[R], 8
MDRP[m&gt;RWh], 32

MDAP[R], 32

SMD[], 64

MDRP[m&gt;RWh], 40


IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1ED6">
/* VTTTalk Unicode 0x1ed6 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 130, 0, 0
OFFSET[R], 1940, 118, 0

SVTCA[Y]
CALL[], 40, 10, 1, 1, 57, 86
SHC[2], 2
CALL[], 48, 40, 1, 1, 140, 86
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni1ED7">
/* VTTTalk Unicode 0x1ed7 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 527, 0, 0
OFFSET[R], 1932, 5, 0
SVTCA[Y]
CALL[], 36, 8, 1, 1, 65, 86
SHC[2], 2

CALL[], 40, 36, 1, 1, 140, 86

SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni1ED7.sc">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 875, 0, 0
OFFSET[R], 1932, 47, 42

SVTCA[Y]
MDAP[R], 8
MDRP[m&gt;RWh], 36

MDAP[R], 36

SMD[], 192

MDRP[m&gt;RWh], 40


IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1ED8">
/* VTTTalk Unicode 0x1ed8 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 130, 0, 0
OFFSET[R], 1839, 118, 0
OFFSET[R], 1875, 118, 0
SVTCA[Y]
CALL[], 52, 10, 1, 1, 54, 86
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni1ED9">
/* VTTTalk Unicode 0x1ed9 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 527, 0, 0
OFFSET[R], 1839, 5, 0
OFFSET[R], 1820, 5, 0
SVTCA[Y]
CALL[], 44, 8, 1, 1, 65, 86
SHC[2], 3

    </glyphProgram>

    <glyphProgram name="uni1ED9.sc">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 875, 0, 0
OFFSET[R], 1839, 47, 0
OFFSET[R], 1820, 47, 42



SVTCA[Y]
MDAP[R], 8
MDRP[m&gt;RWh], 48

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1EDA">
/* VTTTalk Unicode 0x1eda */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 146, 0, 0
OFFSET[R], 1871, 118, 0

SVTCA[Y]
CALL[], 59, 10, 1, 1, 50, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni1EDB">
/* VTTTalk Unicode 0x1edb */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 543, 0, 0
OFFSET[R], 1815, 5, 0



SVTCA[Y]
MDAP[R], 8
MDRP[m&gt;RWh], 53
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1EDB.sc">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 891, 0, 0
OFFSET[R], 1815, 47, 42



SVTCA[Y]
MDAP[R], 8
MDRP[m&gt;RWh], 56

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1EDC">
/* VTTTalk Unicode 0x1edc */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 146, 0, 0
OFFSET[R], 1869, 118, 0

SVTCA[Y]
CALL[], 59, 10, 1, 1, 50, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni1EDD">
/* VTTTalk Unicode 0x1edd */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 543, 0, 0
OFFSET[R], 1813, 5, 0



SVTCA[Y]
MDAP[R], 8
MDRP[m&gt;RWh], 53
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1EDD.sc">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 891, 0, 0
OFFSET[R], 1813, 47, 42




SVTCA[Y]
MDAP[R], 8
MDRP[m&gt;RWh], 56

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1EDE">
/* VTTTalk Unicode 0x1ede */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 146, 0, 0
OFFSET[R], 1887, 118, 0

SVTCA[Y]
CALL[], 59, 10, 1, 1, 50, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni1EDF">
/* VTTTalk Unicode 0x1edf */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 543, 0, 0
OFFSET[R], 1834, 5, 0



SVTCA[Y]
MDAP[R], 8
MDRP[m&gt;RWh], 53
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1EDF.sc">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 891, 0, 0
OFFSET[R], 1834, 47, 42




SVTCA[Y]
MDAP[R], 8
MDRP[m&gt;RWh], 53

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1EE0">
/* VTTTalk Unicode 0x1ee0 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 146, 0, 0
OFFSET[R], 1879, 118, 0

SVTCA[Y]
CALL[], 59, 10, 1, 1, 50, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni1EE1">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 24, 11, 114
SHP[2], 61
CALL[], 32, 7, 114
MDRP[m&gt;RWh], 0
SHP[2], 8
MDAP[R], 8
SHP[2], 17
SMD[], 128
SRP0[], 0
MDRP[m&gt;RBl], 12
SHP[2], 5
SHP[2], 20
MDAP[R], 20
SMD[], 64
SRP0[], 32
MDRP[m&gt;RGr], 43
SHP[2], 42
SHP[1], 69
SRP1[], 69
SHP[1], 54
SRP1[], 54
SHP[1], 53
SRP1[], 53
SHP[1], 36
SRP1[], 36
SHP[1], 50
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1EE1.sc">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 891, 0, 0
OFFSET[R], 1826, 47, 42




SVTCA[Y]
MDAP[R], 8
MDRP[m&gt;RWh], 53

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1EE2">
/* VTTTalk Unicode 0x1ee2 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 146, 0, 0
OFFSET[R], 1839, 118, 0

    </glyphProgram>

    <glyphProgram name="uni1EE3">
/* VTTTalk Unicode 0x1ee3 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 543, 0, 0
OFFSET[R], 1839, 5, 0

    </glyphProgram>

    <glyphProgram name="uni1EE3.sc">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 891, 0, 0
OFFSET[R], 1839, 47, 0

    </glyphProgram>

    <glyphProgram name="uni1EE4">
/* VTTTalk Unicode 0x1ee4 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 197, 0, 0
OFFSET[R], 1839, 97, 0

    </glyphProgram>

    <glyphProgram name="uni1EE4.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 352, 0, 0
OFFSET[R], 1839, 93, 0

    </glyphProgram>

    <glyphProgram name="uni1EE5">
/* VTTTalk Unicode 0x1ee5 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 595, 0, 0
OFFSET[R], 1839, 29, 0

    </glyphProgram>

    <glyphProgram name="uni1EE5.sc">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 941, 0, 0
OFFSET[R], 1839, 36, 0

    </glyphProgram>

    <glyphProgram name="uni1EE5.sc.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1091, 0, 0
OFFSET[R], 1839, 36, 0

    </glyphProgram>

    <glyphProgram name="uni1EE6">
/* VTTTalk Unicode 0x1ee6 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 197, 0, 0
OFFSET[R], 1887, 97, 0
SVTCA[Y]
CALL[], 18, 13, 1, 1, 53, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="uni1EE6.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 352, 0, 0
OFFSET[R], 1887, 93, 0




SVTCA[Y]
CALL[], 21, 4, 1, 1, 57, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="uni1EE7">
/* VTTTalk Unicode 0x1ee7 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 595, 0, 0
OFFSET[R], 1834, 29, 0




SVTCA[Y]
MDAP[R], 5
MDRP[m&gt;RWh], 23

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1EE7.sc">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 941, 0, 0
OFFSET[R], 1834, 36, 42



SVTCA[Y]
MDAP[R], 5
MDRP[m&gt;RWh], 20

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1EE7.sc.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1091, 0, 0
OFFSET[R], 1834, 36, 42



SVTCA[Y]
MDAP[R], 4
MDRP[m&gt;RWh],21

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1EE8">
/* VTTTalk Unicode 0x1ee8 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 207, 0, 0
OFFSET[R], 1871, 97, 0

SVTCA[Y]
CALL[], 34, 13, 1, 1, 53, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni1EE8.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 362, 0, 0
OFFSET[R], 1871, 93, 0




SVTCA[Y]
CALL[], 37, 4, 1, 1, 57, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni1EE9">
/* VTTTalk Unicode 0x1ee9 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 605, 0, 0
OFFSET[R], 1815, 29, 0



SVTCA[Y]
MDAP[R], 5
MDRP[m&gt;RWh], 39

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1EE9.sc">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 951, 0, 0
OFFSET[R], 1815, 36, 42



SVTCA[Y]
MDAP[R], 5
MDRP[m&gt;RWh], 36

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1EE9.sc.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1101, 0, 0
OFFSET[R], 1815, 36, 42



SVTCA[Y]
MDAP[R], 4
MDRP[m&gt;RWh],37

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1EEA">
/* VTTTalk Unicode 0x1eea */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 207, 0, 0
OFFSET[R], 1869, 97, 0

SVTCA[Y]
CALL[], 34, 13, 1, 1, 53, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni1EEA.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 362, 0, 0
OFFSET[R], 1869, 93, 0



SVTCA[Y]
CALL[], 37, 4, 1, 1, 57, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni1EEB">
/* VTTTalk Unicode 0x1eeb */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 605, 0, 0
OFFSET[R], 1813, 29, 0



SVTCA[Y]
MDAP[R], 5
MDRP[m&gt;RWh], 39

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1EEB.sc">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 951, 0, 0
OFFSET[R], 1813, 36, 42



SVTCA[Y]
MDAP[R], 5
MDRP[m&gt;RWh], 36

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1EEB.sc.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1101, 0, 0
OFFSET[R], 1813, 36, 42



SVTCA[Y]
MDAP[R], 4
MDRP[m&gt;RWh],37

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1EEC">
/* VTTTalk Unicode 0x1eec */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 207, 0, 0
OFFSET[R], 1887, 97, 0
SVTCA[Y]
CALL[], 34, 13, 1, 1, 53, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni1EEC.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 362, 0, 0
OFFSET[R], 1887, 93, 0



SVTCA[Y]
CALL[], 37, 4, 1, 1, 57, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni1EED">
/* VTTTalk Unicode 0x1eed */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 605, 0, 0
OFFSET[R], 1834, 29, 0



SVTCA[Y]
MDAP[R], 5
MDRP[m&gt;RWh], 39

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1EED.sc">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 951, 0, 0
OFFSET[R], 1834, 36, 42



SVTCA[Y]
MDAP[R], 5
MDRP[m&gt;RWh], 36

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1EED.sc.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1101, 0, 0
OFFSET[R], 1834, 36, 42



SVTCA[Y]
MDAP[R], 4
MDRP[m&gt;RWh],37

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1EEE">
/* VTTTalk Unicode 0x1eee */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 207, 0, 0
OFFSET[R], 1879, 97, 0

SVTCA[Y]
CALL[], 34, 13, 1, 1, 53, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni1EEE.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 362, 0, 0
OFFSET[R], 1879, 93, 0



SVTCA[Y]
CALL[], 37, 4, 1, 1, 57, 86
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uni1EEF">
/* VTTTalk Unicode 0x1eef */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 605, 0, 0
OFFSET[R], 1826, 29, 0



SVTCA[Y]
MDAP[R], 5
MDRP[m&gt;RWh], 39

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1EEF.sc">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 951, 0, 0
OFFSET[R], 1826, 36, 42



SVTCA[Y]
MDAP[R], 5
MDRP[m&gt;RWh], 36

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1EEF.sc.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1101, 0, 0
OFFSET[R], 1826, 36, 42



SVTCA[Y]
MDAP[R], 4
MDRP[m&gt;RWh],37

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1EF0">
/* VTTTalk Unicode 0x1ef0 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 207, 0, 0
OFFSET[R], 1839, 97, 0

    </glyphProgram>

    <glyphProgram name="uni1EF0.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 362, 0, 0
OFFSET[R], 1839, 93, 0

    </glyphProgram>

    <glyphProgram name="uni1EF1">
/* VTTTalk Unicode 0x1ef1 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 605, 0, 0
OFFSET[R], 1839, 29, 0

    </glyphProgram>

    <glyphProgram name="uni1EF1.sc">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 951, 0, 0
OFFSET[R], 1839, 36, 0

    </glyphProgram>

    <glyphProgram name="uni1EF1.sc.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1101, 0, 0
OFFSET[R], 1839, 36, 0

    </glyphProgram>

    <glyphProgram name="uni1EF4">
/* VTTTalk Unicode 0x1ef4 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 228, 0, 0
OFFSET[R], 1839, 5, 0

    </glyphProgram>

    <glyphProgram name="uni1EF4.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 381, 0, 0
OFFSET[R], 1839, 352, 0

    </glyphProgram>

    <glyphProgram name="uni1EF5">
/* VTTTalk Unicode 0x1ef5 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 626, 0, 0
OFFSET[R], 1839, 42, 0

    </glyphProgram>

    <glyphProgram name="uni1EF5.sc">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 972, 0, 0
OFFSET[R], 1839, -36, 0

    </glyphProgram>

    <glyphProgram name="uni1EF5.sc.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1120, 0, 0
OFFSET[R], 1839, 242, 0

    </glyphProgram>

    <glyphProgram name="uni1EF5.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 720, 0, 0
OFFSET[R], 1839, 338, 0

    </glyphProgram>

    <glyphProgram name="uni1EF6">
/* VTTTalk Unicode 0x1ef6 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 228, 0, 0
OFFSET[R], 1887, 5, 0
SVTCA[Y]
CALL[], 12, 7, 1, 1, 53, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="uni1EF6.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 381, 0, 0
OFFSET[R], 1887, 92, 0


SVTCA[Y]
CALL[], 34, 19, 1, 1, 55, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="uni1EF7">
/* VTTTalk Unicode 0x1ef7 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 626, 0, 0
OFFSET[R], 1834, -61, 0



SVTCA[Y]
MDAP[R], 20
MDRP[m&gt;RWh], 23

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1EF7.sc">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 972, 0, 0
OFFSET[R], 1834, -36, 42



SVTCA[Y]
MDAP[R], 3
MDRP[m&gt;RWh], 12

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1EF7.sc.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1120, 0, 0
OFFSET[R], 1834, 31, 42



SVTCA[Y]
MDAP[R], 19
MDRP[m&gt;RWh], 34

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1EF7.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 720, 0, 0
OFFSET[R], 1834, 29, 0


SVTCA[Y]
MDAP[R], 25
MDRP[m&gt;RWh], 35

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1EF8">
/* VTTTalk Unicode 0x1ef8 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 228, 0, 0
OFFSET[R], 1879, 5, 0
SVTCA[Y]
CALL[], 12, 7, 1, 1, 69, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="uni1EF8.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 381, 0, 0
OFFSET[R], 1879, 92, 0

SVTCA[Y]
CALL[], 34, 19, 1, 1, 65, 86
SHC[2], 1

    </glyphProgram>

    <glyphProgram name="uni1EF9">
/* VTTTalk Unicode 0x1ef9 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 626, 0, 0
OFFSET[R], 1826, -61, 0



SVTCA[Y]
MDAP[R], 20
MDRP[m&gt;RWh], 23

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1EF9.sc">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 972, 0, 0
OFFSET[R], 1826, -36, 42



SVTCA[Y]
MDAP[R], 3
MDRP[m&gt;RWh], 12

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1EF9.sc.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1120, 0, 0
OFFSET[R], 1826, 31, 42



SVTCA[Y]
MDAP[R], 19
MDRP[m&gt;RWh], 34

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni1EF9.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 720, 0, 0
OFFSET[R], 1826, 29, 0


SVTCA[Y]
MDAP[R], 25
MDRP[m&gt;RWh], 35

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni2007">
/* VTT 6.32 compiler */

    </glyphProgram>

    <glyphProgram name="uni2008">
/* VTT 6.32 compiler */

    </glyphProgram>

    <glyphProgram name="uni2009">
/* VTT 6.32 compiler */

    </glyphProgram>

    <glyphProgram name="uni200A">
/* VTT 6.32 compiler */

    </glyphProgram>

    <glyphProgram name="uni200B">
/* VTT 6.32 compiler */

    </glyphProgram>

    <glyphProgram name="uni2010">
/* VTTTalk Unicode 0x2010 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1638, 0, 0

    </glyphProgram>

    <glyphProgram name="uni2015">
/* VTTTalk Unicode 0x2015 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1641, 0, 0

    </glyphProgram>

    <glyphProgram name="uni2052">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 4, 12, 114
SHP[2], 0
MDAP[R], 0
SHP[2], 10
CALL[], 22, 4, 114
SHP[2], 1
MDAP[R], 1
SHP[2], 16
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni2070">
/* VTTTalk Unicode 0x2070 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1552, 0, 327

    </glyphProgram>

    <glyphProgram name="uni2074">
/* VTTTalk Unicode 0x2074 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1559, 0, 327

    </glyphProgram>

    <glyphProgram name="uni2075">
/* VTTTalk Unicode 0x2075 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1560, 0, 327

    </glyphProgram>

    <glyphProgram name="uni2076">
/* VTTTalk Unicode 0x2076 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1561, 0, 327

    </glyphProgram>

    <glyphProgram name="uni2077">
/* VTTTalk Unicode 0x2077 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1562, 0, 327

    </glyphProgram>

    <glyphProgram name="uni2078">
/* VTTTalk Unicode 0x2078 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1563, 0, 327

    </glyphProgram>

    <glyphProgram name="uni2079">
/* VTTTalk Unicode 0x2079 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1564, 0, 327

    </glyphProgram>

    <glyphProgram name="uni2080">
/* VTTTalk Unicode 0x2080 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1552, 0, -100

    </glyphProgram>

    <glyphProgram name="uni2081">
/* VTTTalk Unicode 0x2081 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1556, 0, -100

    </glyphProgram>

    <glyphProgram name="uni2082">
/* VTTTalk Unicode 0x2082 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1557, 0, -100

    </glyphProgram>

    <glyphProgram name="uni2083">
/* VTTTalk Unicode 0x2083 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1558, 0, -100

    </glyphProgram>

    <glyphProgram name="uni2084">
/* VTTTalk Unicode 0x2084 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1559, 0, -100

    </glyphProgram>

    <glyphProgram name="uni2085">
/* VTTTalk Unicode 0x2085 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1560, 0, -100

    </glyphProgram>

    <glyphProgram name="uni2086">
/* VTTTalk Unicode 0x2086 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1561, 0, -100

    </glyphProgram>

    <glyphProgram name="uni2087">
/* VTTTalk Unicode 0x2087 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1562, 0, -100

    </glyphProgram>

    <glyphProgram name="uni2088">
/* VTTTalk Unicode 0x2088 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1563, 0, -100

    </glyphProgram>

    <glyphProgram name="uni2089">
/* VTTTalk Unicode 0x2089 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1564, 0, -100

    </glyphProgram>

    <glyphProgram name="uni20A6">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 0, 12, 114
SHP[2], 8
SRP1[], 8
SHP[1], 4
CALL[], 1, 4, 114
SHP[2], 6
SHP[2], 9
SRP2[], 0
IP[], 13
MDAP[R], 13
SHP[1], 12
MDRP[m&gt;RWh], 16
SHP[2], 17
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni20A6.1">
/* VTT 6.32 compiler */
SVTCA[Y]
MIAP[R], 0, 12
SHP[2], 8
SRP1[], 8
SHP[1], 4
SRP1[], 4
SHP[1], 3
CALL[], 1, 4, 114
SHP[2], 5
SHP[2], 9
SRP1[], 9
SHP[1], 10
SRP1[], 0
IP[], 19
MDAP[R], 19
SHP[1], 18
MDRP[m&gt;RBl], 14
SHP[2], 15
SHP[2], 21
MDAP[R], 21
SHP[1], 20
SRP1[], 19
SHP[1], 24
MDAP[R], 24
SHP[1], 25
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni20A9">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 0, 12, 114
SHP[2], 12
MDAP[R], 12
CALL[], 1, 4, 114
SHP[2], 6
MDAP[R], 6
SHP[2], 10
MDAP[R], 10
SRP1[], 0
IP[], 20
MDAP[R], 20
SHP[1], 21
MDRP[m&gt;RWh], 17
SHP[2], 16
SRP1[], 1
SRP2[], 0
SLOOP[], 6
IP[], 13, 14, 4, 3, 8, 7
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni20A9.1">
/* VTT 6.32 compiler */
SVTCA[Y]
MIAP[R], 0, 12
SHP[2], 12
CALL[], 1, 4, 114
SRP2[], 0
IP[], 19
MDAP[R], 19
SLOOP[], 4
IP[], 4, 3, 8, 7
SRP2[], 1
IP[], 13
IP[], 14
SHP[1], 16
MDRP[m&gt;RBl], 20
SHP[2], 31
MDAP[R], 31
SHP[1], 28
SRP1[], 19
SHP[1], 24
MDAP[R], 24
SHP[1], 27
SRP1[], 1
SHP[1], 5
SRP1[], 5
SHP[1], 9
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni20AD">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 4, 12, 114
SHP[2], 8
CALL[], 5, 4, 114
SHP[2], 12
SRP1[], 4
IP[], 0
MDAP[R], 0
SLOOP[], 5
SHP[1], 1, 9, 10, 15, 14
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni20AE">
/* VTT 6.32 compiler */
SVTCA[Y]
MIAP[R], 0, 12
MIAP[R], 4, 4
SHP[1], 3
SRP1[], 3
SHP[1], 1
SHP[1], 7
SHP[1], 8
SRP1[], 4
SLOOP[], 8
IP[], 15, 14, 16, 17, 11, 10, 12, 13
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni20B1">
/* VTT 6.32 compiler */
SVTCA[Y]
MIAP[R], 8, 12
CALL[], 9, 4, 114
SRP2[], 8
IP[], 18
IP[], 1
MDAP[R], 1
RDTG[]
MDAP[R], 18
SHP[1], 24
SRP1[], 1
SHP[1], 0
RTG[]
SRP0[], 1
MDRP[m&gt;RWh], 4
SHP[2], 5
SRP1[], 9
SHP[1], 31
SRP1[], 31
SHP[1], 32
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni20B1.1">
/* VTT 6.32 compiler */
SVTCA[Y]
MIAP[R], 0, 12
MIAP[R], 1, 4
IP[], 10
IP[], 21
MDAP[R], 10
MDAP[R], 21
SRP1[], 10
SHP[1], 24
SRP1[], 24
SHP[1], 12
SHP[1], 22
SRP1[], 21
SHP[1], 20
MDRP[m&gt;RBl], 16
SHP[2], 17
SHP[2], 34
MDAP[R], 34
SHP[1], 33
SRP1[], 21
SHP[1], 37
MDAP[R], 37
SHP[1], 38
SRP1[], 1
SHP[1], 31
SRP1[], 31
SHP[1], 32
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni20B2">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 4, 13, 114
MDRP[m&gt;RGr], 0
SHP[1], 31
SRP1[], 31
SHP[1], 38
CALL[], 14, 5, 114
MDRP[m&gt;RGr], 1
SHP[1], 21
SRP2[], 4
IP[], 39
MDAP[R], 39
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni20B2.1">
/* VTT 6.32 compiler */
SVTCA[Y]
MIAP[R], 0, 13
MDRP[m&gt;RWh], 37
SHP[1], 27
SRP1[], 27
SHP[1], 36
MIAP[R], 10, 5
MDRP[m&gt;RWh], 44
SHP[1], 17
SRP1[], 17
SHP[1], 42
SRP1[], 10
SRP2[], 0
IP[], 40
MDAP[R], 40
SRP2[], 30
SLOOP[], 3
IP[], 38, 39, 31
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni20B4">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 0, 13, 114
SHP[2], 16
CALL[], 46, 5, 114
SHP[2], 39
SRP2[], 0
IP[], 27
MDAP[R], 27
MDRP[m&gt;RWh], 24
SHP[2], 23
SRP1[], 23
SHP[1], 7
SRP1[], 27
SHP[1], 28
SRP1[], 28
SHP[1], 53
SRP1[], 53
SHP[1], 31
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni20B5">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 4, 13, 114
MDRP[m&gt;RGr], 0
SHP[1], 31
CALL[], 14, 5, 114
MDRP[m&gt;RGr], 1
SHP[1], 21
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni20B5.1">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 0, 13, 114
MDRP[m&gt;RGr], 34
SHP[1], 27
SRP1[], 27
SHP[1], 36
CALL[], 10, 5, 114
MDRP[m&gt;RWh], 40
SHP[1], 17
SRP1[], 17
SHP[1], 38
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni20B8">
/* VTT 6.32 compiler */
SVTCA[Y]
MIAP[R], 0, 12
MIAP[R], 9, 4
SHP[1], 8
SMD[], 128
MDRP[m&gt;RWh], 3
SHP[2], 2
SRP1[], 2
SHP[1], 6
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni20B9">
/* VTT 6.32 compiler */
SVTCA[Y]
MIAP[R], 10, 4
SHP[1], 9
SMD[], 128
MDRP[m&gt;RWh], 27
SHP[2], 26
MIAP[R], 22, 12
SRP2[], 10
IP[], 21
RDTG[]
MDAP[R], 21
SHP[1], 2
SRP1[], 2
SHP[1], 23
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni20BA">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 0
SHP[2], 3
CALL[], 1, 4, 114
SRP2[], 0
IP[], 7
MDAP[R], 7
SRP2[], 1
SLOOP[], 8
IP[], 18, 17, 19, 20, 13, 14, 15, 16
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni20BC">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 0
SHP[2], 11
CALL[], 5, 5, 114
SHP[2], 16
MDRP[m&gt;RBl], 23
SRP2[], 0
IP[], 22
MDAP[R], 22
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni20BD">
/* VTT 6.32 compiler */
SVTCA[Y]
MIAP[R], 0, 12
CALL[], 1, 4, 114
SRP2[], 0
IP[], 8
RUTG[]
MDAP[R], 8
SHP[1], 14
SRP1[], 14
SHP[1], 10
SHP[1], 12
RTG[]
MDRP[m&gt;RGr], 24
SHP[2], 23
SRP1[], 1
SHP[1], 21
SRP1[], 21
SHP[1], 22
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni2113">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 0, 11, 114
SHP[2], 22
CALL[], 11, 3, 114
SHP[2], 36
SRP1[], 0
SLOOP[], 6
IP[], 4, 7, 29, 19, 6, 5
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni2116">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 0, 12, 114
CALL[], 1, 4, 114
SHP[2], 9
CALL[], 5, 4, 114
SHP[2], 24
MDAP[R], 24
SHP[1], 38
SHP[1], 16
MDAP[R], 16
SHP[1], 32
SHP[1], 13
MDAP[R], 13
SHP[1], 12
CALL[], 8, 12, 114
SHP[2], 4
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni2116.ss01">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 32, 3, 114
SHP[2], 12
MDAP[R], 12
SHP[1], 26
SHP[1], 4
MDAP[R], 4
SHP[1], 20
SHP[1], 1
MDAP[R], 1
SHP[1], 0
SHP[2], 41
SRP1[], 41
SHP[1], 49
SHP[1], 50
CALL[], 46, 8, 114
SHP[2], 37
MDAP[R], 37
MIAP[R], 47, 2
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni2126">
/* VTTTalk Unicode 0x2126 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1480, 0, 0

    </glyphProgram>

    <glyphProgram name="uni212A">
/* VTTTalk Unicode 0x212a */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 104, 0, 0

    </glyphProgram>

    <glyphProgram name="uni212B">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 1, 2, 114
SHP[2], 5
MDRP[m&gt;RWh], 12
SHP[2], 28
SHP[2], 20
MDAP[R], 20
SHP[1], 34
MIAP[R], 4, 8
MIAP[R], 7, 8
SRP2[], 1
IP[], 8
MDAP[R], 8
SHP[1], 9
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni2153">
/* VTTTalk Unicode 0x2153 */
/* ACT generated Wed May  6 15:33:15 2020 */

OFFSET[R], 1566, 0, 0
OFFSET[R], 1595, 430, 0
OFFSET[R], 1558, 590, 0

    </glyphProgram>

    <glyphProgram name="uni2154">
/* VTTTalk Unicode 0x2154 */
/* ACT generated Wed May  6 15:33:15 2020 */

OFFSET[R], 1567, 0, 0
OFFSET[R], 1595, 430, 0
OFFSET[R], 1558, 590, 0

    </glyphProgram>

    <glyphProgram name="uni2196">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 3
MDAP[R], 6
SRP2[], 3
SLOOP[], 8
IP[], 9, 0, 1, 7, 5, 8, 2, 4
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni2197">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 1
SHP[1], 0
SHP[1], 4
MDAP[R], 4
SHP[1], 3
SRP2[], 1
SLOOP[], 4
IP[], 2, 7, 5, 8
SHP[1], 9
RDTG[]
MDAP[R], 9
SHP[1], 6
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni2198">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 3
MDAP[R], 6
SRP2[], 3
SLOOP[], 8
IP[], 4, 2, 8, 5, 7, 1, 0, 9
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni2199">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 1
MDAP[R], 9
SRP2[], 1
SLOOP[], 8
IP[], 0, 2, 7, 5, 8, 3, 4, 6
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni2206">
/* VTTTalk Unicode 0x2206 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1479, 0, 0

    </glyphProgram>

    <glyphProgram name="uni2215">
/* VTTTalk Unicode 0x2215 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1618, 0, 0

    </glyphProgram>

    <glyphProgram name="uni2219">
/* VTTTalk Unicode 0x2219 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1620, 0, 0

    </glyphProgram>

    <glyphProgram name="uni25A1">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 0
SHP[2], 4
MDAP[R], 1
SHP[1], 7
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni25B3">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 0
SHP[2], 3
MDAP[R], 1
SHP[1], 5
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni25B6">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 2
MDAP[R], 0
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni25B7">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 2
MDAP[R], 0
SHP[2], 3
SRP1[], 2
SHP[1], 4
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni25BD">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 0
SHP[2], 3
MDAP[R], 2
SHP[1], 4
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni25C0">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 2
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni25C1">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 2
SHP[1], 4
SHP[2], 3
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni25C6">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 1
MDAP[R], 3
SRP2[], 1
IP[], 2
IP[], 0
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni25C7">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 1
SHP[1], 7
MDAP[R], 3
SHP[1], 5
SRP2[], 1
SLOOP[], 4
IP[], 2, 4, 0, 6
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni27E8">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 2
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uni27E9">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 2
MDAP[R], 0
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA78B">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 1
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA78C">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 0
MDAP[R], 1
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uniA78C.sc">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 576, 0, 0

    </glyphProgram>

    <glyphProgram name="uogonek">
/* VTTTalk Unicode 0x173 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 595, 0, 0
OFFSET[R], 1843, 248, 0

    </glyphProgram>

    <glyphProgram name="uogonek.sc">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 19
MDAP[R], 0
SRP1[], 19
IP[], 30
MDAP[R], 30
SHP[1], 40
SRP1[], 19
SHP[1], 12
SHP[2], 36
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="uogonek.sc.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1091, 0, 0
OFFSET[R], 1843, 255, 0

    </glyphProgram>

    <glyphProgram name="uring">
/* VTTTalk Unicode 0x16f */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 595, 0, 0
OFFSET[R], 1824, 29, 0
SVTCA[Y]
CALL[], 23, 15, 1, 1, 60, 86
SHC[2], 1
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uring.sc">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 941, 0, 0
OFFSET[R], 1824, 36, 42

SVTCA[Y]
CALL[], 20, 5, 1, 1, 55, 86
SHC[2], 1
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="uring.sc.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1091, 0, 0
OFFSET[R], 1824, 36, 42

SVTCA[Y]
CALL[], 21, 5, 1, 1, 55, 86
SHC[2], 1
SHC[2], 2

    </glyphProgram>

    <glyphProgram name="ustraitcy">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 1, 6, 114
SHP[2], 5
MIAP[R], 10, 14
SLOOP[], 3
IP[], 0, 11, 4
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="ustraitstrokecy">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 5, 6, 114
SHP[2], 9
MIAP[R], 14, 14
IP[], 0
MDAP[R], 0
SRP2[], 14
IP[], 4
SRP2[], 5
IP[], 15
IP[], 8
SHP[1], 1
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="utilde">
/* VTTTalk Unicode 0x169 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 595, 0, 0
OFFSET[R], 1826, 29, 0



SVTCA[Y]
MDAP[R], 5
MDRP[m&gt;RWh], 23

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="utilde.sc">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 941, 0, 0
OFFSET[R], 1826, 36, 42



SVTCA[Y]
MDAP[R], 5
MDRP[m&gt;RWh], 20

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="utilde.sc.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1091, 0, 0
OFFSET[R], 1826, 36, 42



SVTCA[Y]
MDAP[R], 4
MDRP[m&gt;RWh],21

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="v">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 0, 10, 114
CALL[], 1, 6, 114
SHP[2], 6
SRP2[], 0
IP[], 3
IP[], 4
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="v.sc">
/* VTT 6.32 compiler */
SVTCA[Y]
MIAP[R], 0, 18
MIAP[R], 1, 58
SHP[1], 6
IP[], 3
IP[], 4
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="verticalbarcy">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 3
SMD[], 128
MDRP[m&gt;RBl], 1
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="verticalbarcy.case">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 0
MDRP[m&gt;RBl], 1
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="verticallinelowmodcomb">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

OFFSET[R], 1805, -57, 0

    </glyphProgram>

    <glyphProgram name="w">
/* VTT 6.32 compiler */
SVTCA[Y]
MIAP[R], 0, 10
SHP[2], 12
CALL[], 1, 6, 114
SRP2[], 0
SLOOP[], 6
IP[], 7, 3, 4, 8, 14, 13
SHP[1], 5
SRP1[], 5
SHP[1], 9
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="w.sc">
/* VTT 6.32 compiler */
SVTCA[Y]
MIAP[R], 0, 18
SHP[2], 12
MIAP[R], 1, 58
SLOOP[], 3
IP[], 4, 8, 13
SHP[1], 5
SRP1[], 5
SHP[1], 9
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="w.sc.ss01">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 0
SHP[2], 10
SRP1[], 10
SHP[1], 31
MIAP[R], 5, 58
SHP[1], 15
SHP[1], 24
IP[], 28
MDAP[R], 28
SHP[1], 19
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="w.ss01">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 0
SHP[2], 9
SRP1[], 9
SHP[1], 30
CALL[], 4, 6, 114
SHP[2], 14
SHP[2], 23
SRP1[], 0
IP[], 27
MDAP[R], 27
SHP[1], 18
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="wacute">
/* VTTTalk Unicode 0x1e83 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 620, 0, 0
OFFSET[R], 1815, 119, 0




SVTCA[Y]
MDAP[R], 5
MDRP[m&gt;RWh], 16

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="wacute.sc">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 966, 0, 0
OFFSET[R], 1815, 153, 42



SVTCA[Y]
MDAP[R], 1
MDRP[m&gt;RWh], 16

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="wacute.sc.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1115, 0, 0
OFFSET[R], 1815, 222, 42



SVTCA[Y]
MDAP[R], 5
MDRP[m&gt;RWh], 35

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="wacute.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 715, 0, 0
OFFSET[R], 1815, 221, 0



SVTCA[Y]
MDAP[R], 4
MDRP[m&gt;RWh], 34

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="wcircumflex">
/* VTTTalk Unicode 0x175 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 620, 0, 0
OFFSET[R], 1820, 119, 0



SVTCA[Y]
MDAP[R], 5
MDRP[m&gt;RWh], 16

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="wcircumflex.sc">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 966, 0, 0
OFFSET[R], 1820, 153, 42




SVTCA[Y]
MDAP[R], 1
MDRP[m&gt;RWh], 16

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="wcircumflex.sc.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1115, 0, 0
OFFSET[R], 1820, 222, 42



SVTCA[Y]
MDAP[R], 5
MDRP[m&gt;RWh], 35

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="wcircumflex.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 715, 0, 0
OFFSET[R], 1820, 221, 0



SVTCA[Y]
MDAP[R], 4
MDRP[m&gt;RWh], 34

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="wdieresis">
/* VTTTalk Unicode 0x1e85 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 620, 0, 0
OFFSET[R], 1807, 119, 0



SVTCA[Y]
MDAP[R], 5
MDRP[m&gt;RWh], 16
MDRP[m&gt;RWh], 28

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="wdieresis.sc">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 966, 0, 0
OFFSET[R], 1807, 153, 42




SVTCA[Y]
MDAP[R], 1
MDRP[m&gt;RWh], 16
MDRP[m&gt;RWh], 28

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="wdieresis.sc.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1115, 0, 0
OFFSET[R], 1807, 222, 42



SVTCA[Y]
MDAP[R], 5
MDRP[m&gt;RWh], 35
MDRP[m&gt;RWh], 47

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="wdieresis.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 715, 0, 0
OFFSET[R], 1807, 221, 0



SVTCA[Y]
MDAP[R], 4
MDRP[m&gt;RWh], 34
MDRP[m&gt;RWh], 46

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="wgrave">
/* VTTTalk Unicode 0x1e81 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 620, 0, 0
OFFSET[R], 1813, 119, 0



SVTCA[Y]
MDAP[R], 5
MDRP[m&gt;RWh], 16

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="wgrave.sc">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 966, 0, 0
OFFSET[R], 1813, 153, 42




SVTCA[Y]
MDAP[R], 1
MDRP[m&gt;RWh], 16

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="wgrave.sc.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1115, 0, 0
OFFSET[R], 1813, 222, 42



SVTCA[Y]
MDAP[R], 5
MDRP[m&gt;RWh], 35

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="wgrave.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 715, 0, 0
OFFSET[R], 1813, 221, 0



SVTCA[Y]
MDAP[R], 4
MDRP[m&gt;RWh], 34

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="x">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 0, 10, 114
SHP[2], 12
CALL[], 3, 6, 114
SHP[2], 8
SRP2[], 0
SLOOP[], 8
IP[], 2, 1, 6, 13, 5, 14, 10, 9
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="x.sc">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 0
SHP[2], 12
MIAP[R], 3, 58
SHP[1], 8
SLOOP[], 8
IP[], 6, 5, 1, 2, 10, 9, 13, 14
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="y">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 0, 15, 114
SHP[2], 7
CALL[], 20, 6, 114
SHP[2], 14
SRP2[], 0
SLOOP[], 4
IP[], 11, 12, 22, 19
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="y.sc">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 0
MIAP[R], 3, 58
SHP[1], 8
SLOOP[], 6
IP[], 9, 2, 10, 1, 5, 6
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="y.sc.ss01">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 0
SHP[2], 7
MIAP[R], 19, 58
SHP[1], 29
IP[], 15
MDAP[R], 15
SHP[1], 24
SRP1[], 24
SHP[1], 11
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="y.ss01">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 0, 6, 114
SHP[2], 26
MDAP[R], 5
SHP[1], 12
IP[], 20
MDAP[R], 20
SHP[1], 30
SRP1[], 30
SHP[1], 16
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="yacute">
/* VTTTalk Unicode 0xfd */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 626, 0, 0
OFFSET[R], 1815, -61, 0



SVTCA[Y]
MDAP[R], 20
MDRP[m&gt;RWh], 23

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="yacute.sc">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 972, 0, 0
OFFSET[R], 1815, -36, 42



SVTCA[Y]
MDAP[R], 3
MDRP[m&gt;RWh], 12

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="yacute.sc.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1120, 0, 0
OFFSET[R], 1815, 31, 42



SVTCA[Y]
MDAP[R], 19
MDRP[m&gt;RWh], 34

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="yacute.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 720, 0, 0
OFFSET[R], 1815, 29, 0



SVTCA[Y]
MDAP[R], 25
MDRP[m&gt;RWh], 35

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="ycircumflex">
/* VTTTalk Unicode 0x177 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 626, 0, 0
OFFSET[R], 1820, -61, 0




SVTCA[Y]
MDAP[R], 20
MDRP[m&gt;RWh], 23

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="ycircumflex.sc">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 972, 0, 0
OFFSET[R], 1820, -36, 42



SVTCA[Y]
MDAP[R], 3
MDRP[m&gt;RWh], 12

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="ycircumflex.sc.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1120, 0, 0
OFFSET[R], 1820, 31, 42



SVTCA[Y]
MDAP[R], 19
MDRP[m&gt;RWh], 34

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="ycircumflex.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 720, 0, 0
OFFSET[R], 1820, 29, 0



SVTCA[Y]
MDAP[R], 25
MDRP[m&gt;RWh], 35

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="ydieresis">
/* VTTTalk Unicode 0xff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 626, 0, 0
OFFSET[R], 1807, -61, 0



SVTCA[Y]
MDAP[R], 20
MDRP[m&gt;RWh], 23
MDRP[m&gt;RWh], 35

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="ydieresis.sc">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 972, 0, 0
OFFSET[R], 1807, -36, 42



SVTCA[Y]
MDAP[R], 3
MDRP[m&gt;RWh], 12
MDRP[m&gt;RWh], 24

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="ydieresis.sc.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1120, 0, 0
OFFSET[R], 1807, 31, 42



SVTCA[Y]
MDAP[R], 19
MDRP[m&gt;RWh], 34
MDRP[m&gt;RWh], 46

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="ydieresis.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 720, 0, 0
OFFSET[R], 1807, 29, 0



SVTCA[Y]
MDAP[R], 25
MDRP[m&gt;RWh], 35
MDRP[m&gt;RWh], 47

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="yen">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 0, 12, 114
CALL[], 3, 4, 114
SHP[2], 8
MDAP[R], 8
SRP1[], 0
IP[], 16
MDAP[R], 16
SHP[1], 17
SHP[1], 2
SRP1[], 2
SHP[1], 1
SRP1[], 1
SHP[1], 9
SRP1[], 9
SHP[1], 10
SRP1[], 10
SHP[1], 6
MDRP[m&gt;RWh], 13
SHP[2], 12
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="ygrave">
/* VTTTalk Unicode 0x1ef3 */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 626, 0, 0
OFFSET[R], 1813, -61, 0



SVTCA[Y]
MDAP[R], 20
MDRP[m&gt;RWh], 23

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="ygrave.sc">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 972, 0, 0
OFFSET[R], 1813, -36, 42



SVTCA[Y]
MDAP[R], 3
MDRP[m&gt;RWh], 12

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="ygrave.sc.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1120, 0, 0
OFFSET[R], 1813, 31, 42



SVTCA[Y]
MDAP[R], 19
MDRP[m&gt;RWh], 34

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="ygrave.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 720, 0, 0
OFFSET[R], 1813, 29, 0


SVTCA[Y]
MDAP[R], 25
MDRP[m&gt;RWh], 35

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="z">
/* VTT 6.32 compiler */
SVTCA[Y]
MIAP[R], 0, 10
SHP[2], 8
SHP[2], 9
SRP1[], 9
SHP[1], 1
CALL[], 5, 6, 114
SHP[2], 4
SRP1[], 4
SHP[1], 2
SRP1[], 2
SHP[1], 7
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="z.sc">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 0
SHP[2], 9
SRP1[], 9
SHP[1], 1
SHP[1], 8
MIAP[R], 5, 58
SHP[1], 4
SRP1[], 4
SHP[1], 2
SHP[1], 7
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="z.sc.ss01">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 0
SHP[2], 9
SRP1[], 9
SHP[1], 1
SHP[1], 8
MIAP[R], 5, 58
SHP[1], 4
SRP1[], 4
SHP[1], 2
SRP1[], 5
IP[], 12
MDAP[R], 12
SHP[1], 13
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="z.ss01">
/* VTT 6.32 compiler */
SVTCA[Y]
MDAP[R], 0
SHP[2], 9
SRP1[], 9
SHP[1], 1
SHP[1], 8
CALL[], 5, 6, 114
SHP[2], 4
SRP1[], 4
SHP[1], 2
SRP1[], 2
SHP[1], 7
SRP1[], 0
IP[], 14
MDAP[R], 14
SHP[1], 15
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="zacute">
/* VTTTalk Unicode 0x17a */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 636, 0, 0
OFFSET[R], 1815, -55, 0



SVTCA[Y]
MDAP[R], 5
MDRP[m&gt;RWh], 12

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="zacute.sc">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 982, 0, 0
OFFSET[R], 1815, -29, 42



SVTCA[Y]
MDAP[R], 5
MDRP[m&gt;RWh], 12

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="zacute.sc.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1130, 0, 0
OFFSET[R], 1815, -32, 42



SVTCA[Y]
MDAP[R], 5
MDRP[m&gt;RWh], 23

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="zacute.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 730, 0, 0
OFFSET[R], 1815, -50, 0


SVTCA[Y]
MDAP[R], 5
MDRP[m&gt;RWh], 20

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="zcaron">
/* VTTTalk Unicode 0x17e */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 636, 0, 0
OFFSET[R], 1821, -55, 0



SVTCA[Y]
MDAP[R], 5
MDRP[m&gt;RWh], 12

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="zcaron.sc">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 982, 0, 0
OFFSET[R], 1821, -29, 42



SVTCA[Y]
MDAP[R], 5
MDRP[m&gt;RWh], 12

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="zcaron.sc.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1130, 0, 0
OFFSET[R], 1821, -32, 42



SVTCA[Y]
MDAP[R], 5
MDRP[m&gt;RWh], 20

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="zcaron.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 730, 0, 0
OFFSET[R], 1821, -50, 0


SVTCA[Y]
MDAP[R], 5
MDRP[m&gt;RWh], 20

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="zdotaccent">
/* VTTTalk Unicode 0x17c */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 636, 0, 0
OFFSET[R], 1811, -55, 0



SVTCA[Y]
MDAP[R], 5
MDRP[m&gt;RWh], 12

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="zdotaccent.sc">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 982, 0, 0
OFFSET[R], 1811, -29, 42



SVTCA[Y]
MDAP[R], 5
MDRP[m&gt;RWh], 12

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="zdotaccent.sc.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1130, 0, 0
OFFSET[R], 1811, -32, 42



SVTCA[Y]
MDAP[R], 5
MDRP[m&gt;RWh], 20

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="zdotaccent.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 730, 0, 0
OFFSET[R], 1811, -50, 0


SVTCA[Y]
MDAP[R], 5
MDRP[m&gt;RWh], 20

IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="zero">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 0, 13, 114
SHP[2], 16
CALL[], 8, 5, 114
SHP[2], 24
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="zero.dnom">
/* VTT 6.32 compiler */
SVTCA[Y]
MIAP[R], 0, 13
MIRP[m&lt;RGr], 6, 61
SHP[1], 12
SHP[2], 18
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="zero.numr">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1552, 0, 285

    </glyphProgram>

    <glyphProgram name="zero.osf">
/* VTT 6.32 compiler */
SVTCA[Y]
MIAP[R], 0, 13
SHP[2], 16
MIAP[R], 8, 60
SHP[1], 24
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="zero.sinf">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1552, 0, -194

    </glyphProgram>

    <glyphProgram name="zero.subs">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1552, 0, -194

    </glyphProgram>

    <glyphProgram name="zero.sups">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

USEMYMETRICS[]
OFFSET[R], 1552, 0, 327

    </glyphProgram>

    <glyphProgram name="zero.tf">
/* VTT 6.32 compiler */
SVTCA[Y]
CALL[], 0, 13, 114
SHP[2], 16
CALL[], 8, 5, 114
SHP[2], 24
IUP[Y]
IUP[X]

    </glyphProgram>

    <glyphProgram name="zero.tosf">
/* VTT 6.32 compiler */
SVTCA[Y]
MIAP[R], 0, 13
SHP[2], 16
MIAP[R], 8, 60
SHP[1], 24
IUP[Y]
IUP[X]

    </glyphProgram>

    <extraProgram name="cvt">
/* Control Program */
/* ACT generated Wed May  6 15:33:15 2020 */

CATEGORY Stroke
CATEGORY StrokeInheritance

InstructionsOn @9..55

DropOutCtrlOff @144

CvtCutIn = 1, 0@144 /* 1 pixel cut-in for over- and undershoots */

ClearTypeCtrl = 1

ASM("WS[], 16, 0") /* &lt;== S[16] = threshold ppem that less than or equal is no RES */

LinearAdvanceWidths = 0

/***** Height CVTs *****/
UpperCase
  Grey
  Y
  SquareHeight
      2:   700 /* cap height */

Delta(1@9;10;12;14;16;20;22)

ASM("SVTCA[Y]")
ASM("CALL[], 2, 89")
      8:     0 /* base line */
ASM("SVTCA[Y]")
ASM("CALL[], 8, 89")
  RoundHeight
      3:     3 ~   2 @45 /* cap height overshoot */
      9:    -3 ~   8 @45 /* base line undershoot */

LowerCase
  SquareHeight
      0:   742 /* lc ascender */

Delta(1@10;12;14;16;18, -1@21, 1@22;25;31;33;37;38)

ASM("SVTCA[Y]")
ASM("CALL[], 0, 89")


      6:   546 /* x height */
Delta(-1@23;27)


ASM("SVTCA[Y]")
ASM("CALL[], 6, 89")
     10:     0 /* base line */
ASM("SVTCA[Y]")
ASM("CALL[], 10, 89")
     14:  -194 /* lc descender */

Delta(-1@12;18)


ASM("SVTCA[Y]")
ASM("CALL[], 14, 89")
  RoundHeight
      1:     3 ~   0 @167 /* lc ascender overshoot */
      7:     3 ~   6 @30 /* x height overshoot */
     11:    -3 ~  10 @30 /* base line undershoot */
     15:    -3 ~  14 @167 /* lc descender undershoot */

Figure
  SquareHeight
      4:   700 /* figure height */

Delta(1@9;10;12;14;16;20;22)

ASM("SVTCA[Y]")
ASM("CALL[], 4, 89")
     12:     0 /* base line */
ASM("SVTCA[Y]")
ASM("CALL[], 12, 89")
  RoundHeight
      5:     3 ~   4 @167 /* figure height overshoot */
     13:    -3 ~  12 @167 /* base line undershoot */

Other
  SquareHeight
     16:   700 /* other height */
ASM("SVTCA[Y]")
ASM("CALL[], 16, 89")
     18:     0 /* base line */
ASM("SVTCA[Y]")
ASM("CALL[], 18, 89")
  RoundHeight
     17:     3 ~  16 @167 /* other height overshoot */
     19:    -3 ~  18 @167 /* base line undershoot */

/***** Reserved CVTs *****/
AnyGroup
  AnyColor
  AnyDirection
  AnyCategory
     20:     0 /* DO NOT USE!!! */

/***** Grand-Parent CVT *****/
AnyGroup
  Black
  X
  StrokeInheritance
     21:    20 /* 38x */

/***** Parent CVTs *****/
UpperCase
  Black
  X
  StrokeInheritance
     22:    20 /* 21x */
LowerCase
  Black
  X
  StrokeInheritance
     25:    20 /* 17x */
ASM("SVTCA[X]")
ASM("CALL[], 21, 25, 64, 22, 255, 90")

UpperCase
  Black
  Y
  StrokeInheritance
     23:    19 /* 22x */
ASM("SVTCA[X]")
ASM("CALL[], 23, 60, 22, 255, 91")
LowerCase
  Black
  Y
  StrokeInheritance
     26:    19 /* 7x */
ASM("SVTCA[X]")
ASM("CALL[], 26, 60, 25, 255, 91")

UpperCase
  Black
  Diag
  StrokeInheritance
     24:    19 /* 22x */
ASM("SVTCA[X]")
ASM("CALL[], 24, 60, 22, 255, 91")
LowerCase
  Black
  Diag
  StrokeInheritance
     27:    19 /* 7x */
ASM("SVTCA[X]")
ASM("CALL[], 27, 60, 25, 255, 91")

/***** StrokeInheritance CVTs *****/
UpperCase
  Black
  X
  StrokeInheritance
     28:    20 =  22 @255 /* 34x */
  Y
  StrokeInheritance
     29:    19 =  23 @255 /* 35x */
  Diag
  StrokeInheritance
     30:    20 =  22 @255 /* 18x */

LowerCase
  Black
  X
  StrokeInheritance
     31:    20 =  25 @255 /* 28x */
  Y
  StrokeInheritance
     32:    19 =  26 @255 /* 37x */
  Diag
  StrokeInheritance
     33:    20 =  25 @255 /* 14x */

Figure
  Black
  X
  StrokeInheritance
     34:    20 /* 21x */
  Y
  StrokeInheritance
     35:    19 /* 22x */
  Diag
  StrokeInheritance
     36:    19 /* 8x */

Other
  Black
  X
  StrokeInheritance
     37:    20 /* 26x */
  Y
  StrokeInheritance
     38:    19 /* 31x */
  Diag
  StrokeInheritance
     39:    19 /* 26x */

/***** Stroke CVTs *****/
UpperCase
  Black
  X
  Stroke
     40:    20 =  28 @255 /* 34x */
  Y
  Stroke
     41:    13 =  29 @ 84 /* 1x */
     42:    19 =  29 @255 /* 34x */
  Diag
  Stroke
     43:    15 =  30 @100 /* 1x */
     44:    20 =  30 @255 /* 17x */

LowerCase
  Black
  X
  Stroke
     45:    20 =  31 @255 /* 28x */
  Y
  Stroke
     46:    19 =  32 @255 /* 37x */
  Diag
  Stroke
     47:    17 =  33 @167 /* 2x */
     48:    20 =  33 @255 /* 12x */

Figure
  Black
  X
  Stroke
     49:    20 =  34 @255 /* 21x */
  Y
  Stroke
     50:    19 =  35 @255 /* 22x */
  Diag
  Stroke
     51:    19 =  36 @255 /* 8x */

Other
  Black
  X
  Stroke
     52:    14 =  37 @ 84 /* 1x */
     53:    18 =  37 @250 /* 4x */
     54:    20 =  37 @255 /* 21x */
  Y
  Stroke
     55:    19 =  38 @255 /* 31x */
  Diag
  Stroke
     56:    19 =  39 @255 /* 22x */
     57:    24 =  39 @100 /* 4x */



58: 560  /*small cap square height*/



/*text/old style figures, heights*/
59: 600 /*small cap square height*/
60: 5 ~   59 @ 52 /*small cap round height overshoot*/

61: 425

    </extraProgram>

    <extraProgram name="fpgm">
/* Font-program */
/* ACT generated Wed May  6 15:33:15 2020 */

FDEF[], 9

/* Set fv to X
       pv perpendicular to italic angle

   CALL[], 9 */

#BEGIN
#PUSHOFF
SVTCA[X]
#PUSH, 11, 10
RS[]
SWAP[]
RS[]
NEG[]
SPVFS[]
#PUSHON
#END
ENDF[]

FDEF[], 10

/* Set fv to italic angle
       pv to Y

   CALL[], 10 */

#BEGIN
#PUSHOFF
SVTCA[Y]
#PUSH, 10, 11
RS[]
SWAP[]
RS[]
SFVFS[]
#PUSHON
#END
ENDF[]

FDEF[], 16

/* Set fv to X
       pv perpendicular to adjusted italic angle

   CALL[], 16 */

#BEGIN
#PUSHOFF
SVTCA[X]
#PUSH, 6
RS[]
#PUSH, 7
RS[]
NEG[]
SPVFS[]
#PUSHON
#END
ENDF[]

FDEF[], 31

/* fn 31 equalizes two cvts below a given ppem size

   CALL[], &lt;child cvt&gt;, &lt;parent cvt&gt;, &lt;ppem size&gt;, 31 */

#BEGIN
#PUSHOFF

/* STACK: &lt;child cvt&gt;, &lt;parent cvt&gt;, &lt;ppem size&gt; */

#PUSH, 79 /* #samples/pixel */
CALL[]
DUP[]
#PUSH, 64
LTEQ[]
IF[] /* #samples/pixel &lt;= 1 */

    /* STACK: &lt;child cvt&gt;, &lt;parent cvt&gt;, &lt;ppem size&gt;, &lt;#samples/pixel&gt; */

    POP[] /* #samples/pixel not involved */
    MPPEM[]

    /* STACK: &lt;child cvt&gt;, &lt;parent cvt&gt;, &lt;ppem size&gt;, &lt;act ppem size&gt; */

    GT[]
    IF[]
        RCVT[]
        WCVTP[]
    ELSE[]
        POP[]
        POP[]
    EIF[]

ELSE[] /* #samples/pixel &gt; 1 */

    /* STACK: &lt;child cvt&gt;, &lt;parent cvt&gt;, &lt;ppem size&gt;, &lt;#samples/pixel&gt; */

    SWAP[]
    POP[] /* ppem Size not involved */
    #PUSH, 64

    /* STACK: &lt;child cvt&gt;, &lt;parent cvt&gt;, &lt;#samples/pixel&gt;, &lt;1&gt; */

    #PUSH, 4 /* child cvt */
    CINDEX[]
    RCVT[]
    #PUSH, 4 /* parent cvt */
    CINDEX[]
    RCVT[]
    SUB[]
    ABS[]

    /* STACK: &lt;child cvt&gt;, &lt;parent cvt&gt;, &lt;#samples/pixel&gt;, &lt;1&gt;, &lt;|[child cvt] - [parent cvt]|&gt; */

    ROLL[]
    MUL[]
    GT[]
    IF[] /* 1 &gt; #samples/pixel * delta cvt */
        RCVT[]
        WCVTP[]
    ELSE[]
        POP[]
        POP[]
    EIF[]

EIF[]
#PUSHON
#END
ENDF[]

FDEF[], 40

/* Set fv to adjusted italic angle
       pv to Y

   CALL[], 40 */

#BEGIN
#PUSHOFF
SVTCA[Y]
#PUSH, 7
RS[]
#PUSH, 6
RS[]
SFVFS[]
#PUSHON
#END
ENDF[]

FDEF[], 70

/* fn changes &lt;cvt&gt; by &lt;amount&gt; (in ±1/64 pixel) at
   ppem sizes &lt;low ppem&gt; to &lt;high ppem&gt; (inclusive)

   CALL[], &lt;amount&gt;, &lt;cvt&gt;, &lt;low ppem&gt;, &lt;high ppem&gt;, 70 */

#BEGIN
#PUSHOFF
MPPEM[]
GTEQ[]
SWAP[]
MPPEM[]
LTEQ[]
AND[]
IF[]
    DUP[]
    RCVT[]
    ROLL[]
    ADD[]
    WCVTP[]
ELSE[]
    POP[]
    POP[]
EIF[]
#PUSHON
#END
ENDF[]

FDEF[], 71

/* fn changes &lt;cvt&gt; by &lt;amount&gt; (in ±1/64 pixel) at
   ppem size &lt;ppem&gt;

   CALL[], &lt;amount&gt;, &lt;cvt&gt;, &lt;ppem&gt;, 71 */

#BEGIN
#PUSHOFF
MPPEM[]
EQ[]
IF[]
    DUP[]
    RCVT[]
    ROLL[]
    ADD[]
    WCVTP[]
ELSE[]
    POP[]
    POP[]
EIF[]
#PUSHON
#END
ENDF[]

FDEF[], 72

/* fn moves &lt;point&gt; by &lt;amount&gt; (in ±1/64 pixel) at
   ppem sizes &lt;low ppem&gt; to &lt;high ppem&gt; (inclusive)

   CALL[], &lt;point&gt;, &lt;amount&gt;, &lt;low ppem&gt;, &lt;high ppem&gt;, 72 */

#BEGIN
#PUSHOFF
MPPEM[]
GTEQ[]
SWAP[]
MPPEM[]
LTEQ[]
AND[]
IF[]
    SHPIX[]
ELSE[]
    POP[]
    POP[]
EIF[]
#PUSHON
#END
ENDF[]

FDEF[], 73

/* fn moves &lt;point&gt; by &lt;amount&gt; (in ±1/64 pixel) at
   ppem size &lt;ppem&gt;

   CALL[], &lt;point&gt;, &lt;amount&gt;, &lt;ppem&gt;, 73 */

#BEGIN
#PUSHOFF
MPPEM[]
EQ[]
IF[]
    SHPIX[]
ELSE[]
    POP[]
    POP[]
EIF[]
#PUSHON
#END
ENDF[]

FDEF[], 74

/* if &lt;flag&gt; = anti-aliasing in s[2] (set by fn 84)
   fn changes &lt;cvt&gt; by &lt;amount&gt; (in ±1/64 pixel) at
   ppem sizes &lt;low ppem&gt; to &lt;high ppem&gt; (inclusive)

   CALL[], &lt;amount&gt;, &lt;cvt&gt;, &lt;low ppem&gt;, &lt;high ppem&gt;, &lt;flag&gt;, 74 */

#BEGIN
#PUSHOFF
#PUSH, 2
RS[]
EQ[]
IF[]           /* if &lt;flag&gt; = s[2] then fwd to fn 70 */
    #PUSH, 70
    CALL[]
ELSE[]         /* else cleanup stack and bail out */
    POP[]
    POP[]
    POP[]
    POP[]
EIF[]
#PUSHON
#END
ENDF[]

FDEF[], 75

/* if &lt;flag&gt; = anti-aliasing in s[2] (set by fn 84)
   fn changes &lt;cvt&gt; by &lt;amount&gt; (in ±1/64 pixel) at
   ppem size &lt;ppem&gt;

   CALL[], &lt;amount&gt;, &lt;cvt&gt;, &lt;ppem&gt;, &lt;flag&gt;, 75 */

#BEGIN
#PUSHOFF
#PUSH, 2
RS[]
EQ[]
IF[]           /* if &lt;flag&gt; = s[2] then fwd to fn 71 */
    #PUSH, 71
    CALL[]
ELSE[]         /* else cleanup stack and bail out */
    POP[]
    POP[]
    POP[]
EIF[]
#PUSHON
#END
ENDF[]

FDEF[], 76

/* if &lt;flag&gt; = anti-aliasing in s[2] (set by fn 84)
   fn moves &lt;point&gt; by &lt;amount&gt; (in ±1/64 pixel) at
   ppem sizes &lt;low ppem&gt; to &lt;high ppem&gt; (inclusive)

   CALL[], &lt;point&gt;, &lt;amount&gt;, &lt;low ppem&gt;, &lt;high ppem&gt;, &lt;flag&gt;, 76 */

#BEGIN
#PUSHOFF
#PUSH, 2
RS[]
EQ[]
IF[]           /* if &lt;flag&gt; = s[2] then fwd to fn 72 */
    #PUSH, 72
    CALL[]
ELSE[]         /* else cleanup stack and bail out */
    POP[]
    POP[]
    POP[]
    POP[]
EIF[]
#PUSHON
#END
ENDF[]

FDEF[], 77

/* if &lt;flag&gt; = anti-aliasing in s[2] (set by fn 84)
   fn moves &lt;point&gt; by &lt;amount&gt; (in ±1/64 pixel) at
   ppem size &lt;ppem&gt;

   CALL[], &lt;point&gt;, &lt;amount&gt;, &lt;ppem&gt;, &lt;flag&gt;, 77 */

#BEGIN
#PUSHOFF
#PUSH, 2
RS[]
EQ[]
IF[]           /* if &lt;flag&gt; = s[2] then fwd to fn 73 */
    #PUSH, 73
    CALL[]
ELSE[]         /* else cleanup stack and bail out */
    POP[]
    POP[]
    POP[]
EIF[]
#PUSHON
#END
ENDF[]

FDEF[], 78

/* apply minimum distance and round &lt;dist&gt; depending on s[2], &lt;code&gt;, and pv
   code = 0: position
   code = 1: distance
   code = 2: delta distance (for fractional inheritance)

   CALL[], &lt;dist&gt;, &lt;code&gt;, 78

   returns with rounded distance on stack */

#BEGIN
#PUSHOFF

/* STACK: &lt;dist&gt;, &lt;code&gt; */

SWAP[]
DUP[]
#PUSH, 0
LT[]
ROLL[]
ROLL[]
ABS[]

/* STACK: &lt;negDist&gt;, &lt;code&gt;, &lt;|dist|&gt; */

#PUSH, 0, 3 /* code */
CINDEX[]
EQ[]
IF[] /* position */

    /* STACK: &lt;negDist&gt;, &lt;code&gt;, &lt;|dist|&gt; */

    #PUSH, 64

    /* STACK: &lt;negDist&gt;, &lt;code&gt;, &lt;|dist|&gt;, &lt;#samples/pixel&gt; */

ELSE[]

    /* STACK: &lt;negDist&gt;, &lt;code&gt;, &lt;|dist|&gt; */

    #PUSH, 1, 3 /* code */
    CINDEX[]
    EQ[]
    IF[] /* distance */
        #PUSH, 5 /* minimum distance */
        RS[]
        MAX[]
    EIF[]

    #PUSH, 79 /* #samples/pixel */
    CALL[]

    /* STACK: &lt;negDist&gt;, &lt;code&gt;, &lt;|dist|&gt;, &lt;#samples/pixel&gt; */

EIF[]

SWAP[]
#PUSH, 98 /* round to virtual grid */
CALL[]

/* STACK: &lt;negDist&gt;, &lt;code&gt;, &lt;[|dist|]&gt; */

SWAP[]
POP[]

/* STACK: &lt;negDist&gt;, &lt;[|dist|]&gt; */

SWAP[]
IF[]
    NEG[]
EIF[]

/* STACK: &lt;[dist]&gt; */

#PUSHON
#END
ENDF[]

FDEF[], 79

/* depending on rendering environment and pv determine #samples/pixel for rounding etc.

   notice that for PVs other than X or Y, this method will default to X, reflecting the
   bias inherent in the asymmetrical nature of ClearType

   CALL[], 79

   returns the #samples/pixel in 26.6 */

#BEGIN
#PUSHOFF

#PUSH, 8, 0
GPV[]
POP[]
EQ[]
ADD[]
RS[]

#PUSHON
#END
ENDF[]

FDEF[], 80

/* depending on rendering environment and pv determine actual stroke optimization method

   CALL[], 80

   returns with method on stack (see fn 112 for definition of method) */

#BEGIN
#PUSHOFF

#PUSH, 12, 0
GPV[]
POP[]
EQ[]
ADD[]
RS[]

#PUSHON
#END
ENDF[]

FDEF[], 81

   /* adjust advance width to compensate for rasterizer's rounding errors 

   CALL[], &lt;rsb&gt;, 81 */

#BEGIN
#PUSHOFF

/* STACK: &lt;rsb&gt; */

SVTCA[X]
DUP[]
GC[O]

/* STACK: &lt;rsb&gt;, &lt;rsb.x&gt; */
#PUSH, 2
RS[]
DUP[]
#PUSH, 4096 /* fract AW value in 26.6 */
DIV[]
#PUSH, 4096 /* 64 in 26.6 */
MUL[]
EVEN[] /* fract AW bit not set */
SWAP[]
#PUSH, 256 /* comp AW value in 26.6 */
DIV[]
#PUSH, 4096 /* 64 in 26.6 */
MUL[]
EVEN[] /* comp AW bit not set */
AND[]
IF[]
    #PUSH, 32
    ADD[]
    FLOOR[]
EIF[]

SCFS[]

#PUSHON
#END
ENDF[]

FDEF[], 83

/* CALL[], &lt;radicand&gt;, 83

   returns with square root of radicand on stack */

#BEGIN
#PUSHOFF

/* STACK: &lt;radicand&gt; */

#PUSH, 0, 2
CINDEX[]

/* STACK: &lt;radicand&gt;, &lt;low&gt;, &lt;high&gt; */

#WBeginLoop83:

    #PUSH, 2 /* low */
    CINDEX[]
    #PUSH, 2 /* high */
    CINDEX[]
    GTEQ[]
    #PUSH, WOffset83a
    SWAP[]
    JROT[], (WOffset83a=#WEndLoop83) /* while low &lt;= high */

    /* STACK: &lt;radicand&gt;, &lt;low&gt;, &lt;high&gt; */

    #PUSH, 2 /* low */
    CINDEX[]
    #PUSH, 2 /* high */
    CINDEX[]
    ADD[]
    #PUSH, 32
    MUL[]

    /* STACK: &lt;radicand&gt;, &lt;low&gt;, &lt;high&gt;, &lt;mid&gt; */

    DUP[]
    DUP[]
    #PUSH, 6 /* radicand */
    CINDEX[]
    SWAP[]
    DIV[]

    /* STACK: &lt;radicand&gt;, &lt;low&gt;, &lt;high&gt;, &lt;mid&gt;, &lt;mid&gt;, &lt;radicand/mid&gt; */

    LT[]
    IF[]

        /* STACK: &lt;radicand&gt;, &lt;low&gt;, &lt;high&gt;, &lt;mid&gt; */

        ROLL[]
        POP[]
        #PUSH, 1
        ADD[]
        SWAP[]

        /* STACK: &lt;radicand&gt;, &lt;mid+1&gt;, &lt;high&gt; */

    ELSE[]

        DUP[]
        DUP[]
        #PUSH, 6 /* radicand */
        CINDEX[]
        SWAP[]
        DIV[]

        GT[]
        IF[]

            /* STACK: &lt;radicand&gt;, &lt;low&gt;, &lt;high&gt;, &lt;mid&gt; */

            SWAP[]
            POP[]
            #PUSH, 1
            SUB[]

            /* STACK: &lt;radicand&gt;, &lt;low&gt;, &lt;mid-1&gt; */

        ELSE[]

            /* STACK: &lt;radicand&gt;, &lt;low&gt;, &lt;high&gt;, &lt;mid&gt; */

            ROLL[]
            POP[]
            SWAP[]
            POP[]
            DUP[]

            /* STACK: &lt;radicand&gt;, &lt;mid&gt;, &lt;mid&gt; */

        EIF[]

    EIF[]


    #PUSH, WOffset83b
    JMPR[], (WOffset83b=#WBeginLoop83)

#WEndLoop83:

/* STACK: &lt;radicand&gt;, &lt;low&gt;, &lt;high&gt; */

ADD[]
#PUSH, 32
MUL[]
SWAP[]
POP[]

/* STACK: &lt;mid&gt; */

#PUSHON
#END
ENDF[]

FDEF[], 84

/* fn determines current rasterizing environment and stores it in s[2] as follows:
     bit 0 (value   1) = Grey-Scaling
     bit 1 (value   2) = ClearType(tm)
     bit 2 (value   4) = Compatible Width ClearType
     bit 3 (value   8) = Vertical Direction (horizontally striped) ClearType
     bit 4 (value  16) = BGR as opposed to RGB Devices
     bit 5 (value  32) = ClearType on Rapier CE Devices
     bit 6 (value  64) = ClearType with fractional advance widths
     bit 7 (value 128) = ClearType with non-ClearType direction anti-aliasing
     bit 8 (value 256) = ClearType with gray full-pixel

   s[2] is used e.g. in fns 74 through 77

   To test against any combination of these flags, add up the respective values.

   specific to the current rasterizing environment fn stores the following parameters
     s[5] = minimum distance
     s[8] = #samples/pixel in x-direction
     s[9] = #samples/pixel in y-direction
     s[12] = stroke optimization method in x-direction
     s[13] = stroke optimization method in y-direction

   CALL[], 84 */
   /* Version 2.1 20120101 */

#BEGIN
#PUSHOFF
#PUSH,2,0
WS[]            /* s[2] = grey scaling: off (by default) */
#PUSH,35,1      /* 35 = MS Rasterizer version 1.7 */
GETINFO[]       /* 1 = tell GETINFO to give us the rasterizer version */
LTEQ[]          /* 35 &lt;= version ? */
#PUSH,64,1      /* 64 = highest rasterizer version assigned to MS */
GETINFO[]       /* 1 = tell GETINFO to give us the rasterizer version */
GTEQ[]          /* 64 &gt;= version ? */
AND[]           /* 35 &lt;= version &amp;&amp; version &lt;= 64 ? */
IF[]            /* if so, we're running MS rasterizer version 1.7 or higher */
  #PUSH,4096,32 /* 4096 = flag returned by GETINFO if grey scaling bit is on */
  GETINFO[]     /* 32 = tell GETINFO to give us the grey scaling bit */
  EQ[]          /* 4096 == flag ? */
  IF[]          /* if so, we're running under grey scaling */
    #PUSH,2,1,2
    RS[]
    ADD[]
    WS[]        /* s[2] += grey scaling: on (by now) */
  EIF[]
  #PUSH,36,1      /* 36 = MS Rasterizer version 1.6+ (WinCE) or 1.8 (WinXP) */
  GETINFO[]       /* 1 = tell GETINFO to give us the rasterizer version */
  LTEQ[]          /* 36 &lt;= version ? (already tested version &lt;= 64) */
  IF[]            /* if so, we're running MS rasterizer version 1.6+ (WinCE) or 1.8 (WinXP) or higher */
    #PUSH,8192,64 /* 8192 = flag returned by GETINFO if ClearTypeTM bit is on */
    GETINFO[]     /* 64 = tell GETINFO to give us the ClearTypeTM bit */
    EQ[]          /* 8192 == flag ? */
    IF[]          /* if so, we're running under ClearTypeTM */
      #PUSH,2,2,2
      RS[]
      ADD[]
      WS[]        /* s[2] += ClearTypeTM: on (by now) */

      #PUSH,36,1    /* 36 = MS Rasterizer version 1.6+ (WinCE) */
      GETINFO[]
      EQ[]
      IF[] /***** we're running Rasterizer v1.6+ for WinCE with ClearType *****/

        #PUSH,2,32,2
        RS[]
        ADD[]
        WS[]        /* s[2] += Rapier CE: on (by now) */
        SVTCA[Y]
        MPPEM[]
        SVTCA[X]
        MPPEM[]
        GT[]
        IF[]
          #PUSH,2,8,2
          RS[]
          ADD[]
          WS[]
        EIF[]

      ELSE[] /***** we're running Rasterizer v1.8 (or higher) for WinXP with ClearType (or Win2k 2000 with ClearType patch) *****/

        #PUSH,16384,128 /* 16384 = flag returned by GETINFO if ClearTypeTM silly aw bit is on */
        GETINFO[]       /* 128 = tell GETINFO to give us the ClearTypeTM silly aw bit */
        EQ[]            /* 16384 == flag ? */
        IF[]            /* if so, we're running under ClearTypeTM silly aw */
          #PUSH,2,4,2
          RS[]
          ADD[]
          WS[]          /* s[2] += ClearTypeTM silly aw: on (by now) */
        EIF[]

        #PUSH,16384,128 /* 32768 = flag returned by GETINFO if ClearTypeTM in vertical direction bit is on */
        MUL[]           /* Assembler restriction: produce 32768 by multiplying 16384 by 2 (2 in F26.6 is 128) */
        #PUSH,256       /* 256 = tell GETINFO to give us the ClearTypeTM in vertical direction bit */
        GETINFO[]
        EQ[]            /* 32768 == flag ? */
        IF[]            /* if so, we're running ClearTypeTM in vertical direction */
        #PUSH,2,8,2
          RS[]
          ADD[]
          WS[]          /* s[2] += ClearTypeTM in vertical direction: on (by now) */
        EIF[]

        #PUSH,16384,256 /* 65536 = flag returned by GETINFO if ClearTypeTM in BGR order bit is on */
        MUL[]           /* Assembler restriction: produce 65536 by multiplying 16384 by 4 (4 in F26.6 is 256) */
        #PUSH,512       /* 512 = tell GETINFO to give us the ClearTypeTM in BGR order bit */
        GETINFO[]
        EQ[]            /* 65536 == flag ? */
        IF[]            /* if so, we're running under ClearTypeTM in BGR order */
          #PUSH,2,16,2
          RS[]
          ADD[]
          WS[]          /* s[2] += ClearTypeTM in BGR order: on (by now) */
        EIF[]

        #PUSH,38,1      /* 38 = MS Rasterizer version 1.9 */
        GETINFO[]       /* 1 = tell GETINFO to give us the rasterizer version */
        LTEQ[]          /* 38 &lt;= version ? (already tested version &lt;= 64) */
        IF[]            /* if so, we're running MS rasterizer version 1.9 (Windows Longhorn) or higher */

          #PUSH,16384,512  /* 131072 = flag returned by GETINFO if ClearTypeTM fractional advance widths bit is on */
          MUL[]            /* Assembler restriction: produce 131072 by multiplying 16384 by 8 (8 in F26.6 is 512) */
          #PUSH,1024       /* 1024 = tell GETINFO to give us the ClearTypeTM fractional advance widths bit */
          GETINFO[]
          EQ[]             /* 131072 == flag ? */
          IF[]             /* if so, we're running under ClearTypeTM fractional advance widths */
            #PUSH,2,64,2
            RS[]
            ADD[]
            WS[]           /* s[2] += ClearTypeTM fractional advance widths: on (by now) */
          EIF[]

          #PUSH,16384,1024 /* 262144 = flag returned by GETINFO if ClearTypeTM non-ClearType direction anti-aliasing bit is on */
          MUL[]            /* Assembler restriction: produce 262144 by multiplying 16384 by 16 (16 in F26.6 is 1024) */
          #PUSH,2048       /* 2048 = tell GETINFO to give us the ClearTypeTM non-ClearType direction anti-aliasing bit */
          GETINFO[]
          EQ[]             /* 262144 == flag ? */
          IF[]             /* if so, we're running under ClearTypeTM non-ClearType direction anti-aliasing */
            #PUSH,2,128,2
            RS[]
            ADD[]
            WS[]           /* s[2] += ClearTypeTM non-ClearType direction anti-aliasing: on (by now) */
          EIF[]

          #PUSH,40,1      /* 40 = Rasterizer v2.1 Windows 8, SubPixel */
          GETINFO[]       /* 1 = tell GETINFO to give us the rasterizer version */
          LTEQ[]          /* 40 &lt;= version ? (already tested version &lt;= 64) */
          IF[]            /* if so, we're running MS rasterizer version 2.1 (Windows 8) or higher */
            #PUSH,16384,2048 /* 524288 = flag returned by GETINFO if ClearTypeTM non-ClearType direction anti-aliasing bit is on */
            MUL[]            /* Assembler restriction: produce 524288 by multiplying 16384 by 32 (32 in F26.6 is 2048) */
            #PUSH,4096       /* 4096 = tell GETINFO to give us the ClearTypeTM gray full-pixel rendering bit */
            GETINFO[]
            EQ[]             /* 524288 == flag ? */
            IF[]             /* if so, we're running under ClearTypeTM gray full-pixel rendering */
            #PUSH,2,256,2
              RS[]
              ADD[]
              WS[]           /* s[2] += ClearTypeTM gray full-pixel rendering: on (by now) */
            EIF[]
          EIF[]

        EIF[] /* Vista or greater rasterizer */

      EIF[] /* Windows ClearType (Platt) */

    EIF[] /* ClearType Enabled */
  EIF[] /* ClearType enabled rasterizer */
EIF[] /* Microsoft Rasterizer */

/* store rasterizing environment specific parameters */

#PUSH, 0, 2
RS[]
EQ[]
IF[] /* for b&amp;w */
  #PUSH, 5, 64, 8, 64, 9, 64, 12, 2, 13, 2
ELSE[]
  #PUSH, 1, 2
  RS[]
  EQ[]
  IF[] /* for grey-scaling */
    #PUSH, 5, 64, 8, 256, 9, 256, 12, 1, 13, 1
  ELSE[]
    #PUSH, 128, 2
    RS[]
    GT[]
    IF[] /* for ClearType */
      #PUSH, 5, 64, 8, 384, 9, 64
    ELSE[] /* for y-anti-aliased ClearType */
      #PUSH, 256, 2
      RS[]
      GT[]
      IF[] /* Gray ClearType */
        #PUSH, 5, 64, 8, 384, 9, 320
      ELSE[] /* Gray ClearType */
        #PUSH, 384, 2
        RS[]
        GT[]
        IF[] /* Gray ClearType */
          #PUSH, 5, 64, 8, 512, 9, 64
        ELSE[] /* Gray ClearType y-anti-aliased */
          #PUSH, 5, 64, 8, 256, 9, 256
        EIF[]
      EIF[]
    EIF[]

    #PUSH,16384,128 /* b&amp;w aw? */
    GETINFO[]
    NEQ[]
    #PUSH,16384,512 /* fract aw? */
    MUL[]
    #PUSH,1024
    GETINFO[]
    NEQ[]
    AND[]
    IF[] /* natural widths */
      #PUSH, 12, 0, 13, 1
    ELSE[] /* compatible or fractional widths */
      #PUSH, 12, 0, 13, 1
    EIF[]

  EIF[]
EIF[]

WS[]
WS[]
WS[]
WS[]
WS[]

#PUSHON
#END
ENDF[]

FDEF[], 85

/* fn 85 equalizes double specified heights below a given ppem size

   CALL[], &lt;rel cvt&gt;, &lt;ppem size&gt;, &lt;abs cvt&gt;, 85 */
   /* Version 2.0 20141201 */

#BEGIN
#PUSHOFF

/* STACK: &lt;rel cvt&gt;, &lt;ppem size&gt;, &lt;abs cvt&gt; */

RCVT[] /* pick absolute (square) height */
#PUSH, 2, 78 /* 2 appears to work for heights and weights */
CALL[]
SWAP[]

/* STACK: &lt;rel cvt&gt;, &lt;[abs cvt]&gt;, &lt;ppem size&gt; */

#PUSH, 79 /* #samples/pixel */
CALL[]
DUP[]
#PUSH, 64
LTEQ[]
IF[] /* #samples/pixel = 1 (or less...) */

    /* STACK: &lt;rel cvt&gt;, &lt;[abs cvt]&gt;, &lt;ppem size&gt;, &lt;#samples/pixel&gt; */

    POP[]
    MPPEM[]
    LTEQ[] /* specified ppem size &lt;= actual ppem size ? */
    IF[]

        /* STACK: &lt;rel cvt&gt;, &lt;[abs cvt]&gt; */

        #PUSH, 2
        CINDEX[]
        RCVT[] /* pick relative height (overshoot) */
        #PUSH, 1, 78
        CALL[]
        ADD[] /* add overshoot to square height */

        /* STACK: &lt;rel cvt&gt;, &lt;[rel cvt] + [abs cvt]&gt; */

    EIF[]

ELSE[] /* #samples/pixel &gt; 1 */

    /* STACK: &lt;rel cvt&gt;, &lt;[abs cvt]&gt;, &lt;ppem size&gt;, &lt;#samples/pixel&gt; */

    SWAP[]
    MPPEM[]
    LTEQ[] /* specified ppem size &lt;= actual ppem size */
    IF[]

      /* STACK: &lt;rel cvt&gt;, &lt;[abs cvt]&gt;, &lt;#samples/pixel&gt; */

      #PUSH, 3 /* rel cvt */
      CINDEX[]
      RCVT[]
      DUP[]
      ABS[]
      ROLL[]
      MUL[]
      #PUSH, 64

      /* STACK: &lt;rel cvt&gt;, &lt;[abs cvt]&gt;, &lt;[rel cvt]&gt;, &lt;|[rel cvt]| * #samples/pixel&gt;, &lt;1&gt; */

      GTEQ[] /* #samples/pixel greater than or equal to 1 pixel */
      IF[]

          /* STACK: &lt;rel cvt&gt;, &lt;[abs cvt]&gt;, &lt;[rel cvt]&gt; */

          #PUSH, 2, 78
          CALL[]
          ADD[] /* add overshoot to square height */

          /* STACK: &lt;rel cvt&gt;, &lt;[rel cvt] + [abs cvt]&gt; */

      ELSE[]

          /* STACK: &lt;rel cvt&gt;, &lt;[abs cvt]&gt;, &lt;[rel cvt]&gt; */

          POP[]

          /* STACK: &lt;rel cvt&gt;, &lt;[abs cvt]&gt; */

      EIF[]
    ELSE[]
          /* STACK: &lt;rel cvt&gt;,&lt;abs cvt&gt;,&lt;#samples/pixel&gt;*/
          POP[]
          /* STACK: &lt;rel cvt&gt;,&lt;abs cvt&gt;*/
    EIF[]

EIF[]

/* STACK: &lt;rel cvt&gt;, &lt;[act cvt]&gt; */

WCVTP[] /* make this the round height */
#PUSHON
#END
ENDF[]

FDEF[], 86

/* function to naturally space an accent above or below a base character

   CALL[], &lt;child&gt;, &lt;parent&gt;, &lt;roundMethod&gt;, &lt;minDist?&gt;, &lt;distance&gt;, 86

   convert distance (fUnits) to pixels, round, and space child from parent by result
   this essentially implements the functionality of an MDRP[m&gt;RWh] instrunction for
   composites which lack a suitable implementation of "original" coordinates.
   roundMethod 0, 1, 2, and 3 round down to, to, up to, and to half virtual grid
   function assumes cvt #20 is reserved and can be used temporarily in here... 
   storage 16 contains a threshold ppem size. if zero, ignore the threshold, otherwise
   if less than or equal to threshold, use 64 (26.6) #samples/pixel. */

#BEGIN
#PUSHOFF

/* extract the sign from distance */
/* STACK: &lt;child&gt;, &lt;parent&gt;, &lt;roundMethod&gt;, &lt;minDist?&gt;, &lt;distance&gt; */

DUP[]
#PUSH, 0
LT[]
DUP[]
IF[]
    SWAP[]
    NEG[]
ELSE[]
    SWAP[]
EIF[]

/* scale distance using reserved cvt */
/* STACK: &lt;child&gt;, &lt;parent&gt;, &lt;roundMethod&gt;, &lt;minDist?&gt;, &lt;negDist?&gt;, &lt;|distance|&gt; */

#PUSH, 20, 20 /* reserved cvt */
ROLL[]
WCVTF[]
RCVT[]

/* determine if we are using a size threshold */
/* STACK: &lt;child&gt;, &lt;parent&gt;, &lt;roundMethod&gt;, &lt;minDist?&gt;, &lt;negDist?&gt;, &lt;|distance|'&gt; */

#PUSH, 16, 16 /* reserved storage for threshold */
RS[]
MPPEM[]
ROLL[]
RS[]
LTEQ[]
AND[] /* threshold must not be zero and &lt;= ppem */
IF[]
    #PUSH, 64 /* #samples/pixel = 1 */
ELSE[]
/* round per round method and #samples/pixel in current pv */
/* STACK: &lt;child&gt;, &lt;parent&gt;, &lt;roundMethod&gt;, &lt;minDist?&gt;, &lt;negDist?&gt;, &lt;|distance|'&gt; */

#PUSH, 79 /* #samples/pixel */
CALL[]
EIF[]

SWAP[]
#PUSH, 97, 6 /* round to virtual grid, roundMethod */
MINDEX[]
ADD[]
CALL[] /* round to virtual grid */

/* STACK: &lt;child&gt;, &lt;parent&gt;, &lt;minDist?&gt;, &lt;negDist?&gt;, &lt;[|distance|']&gt; */

/* apply minimum distance, if applicable */
ROLL[]
IF[]
    #PUSH, 5 /* minimum distance */
    RS[]
    MAX[]
EIF[]

/* fold the sign back into distance */
/* STACK: &lt;child&gt;, &lt;parent&gt;, &lt;negDist?&gt; &lt;[|distance|']&gt; */

SWAP[]
IF[]
    NEG[]
EIF[]

/* move child by [distance'] */
/* STACK: &lt;child&gt;, &lt;parent&gt;, &lt;[distance']&gt; */

SWAP[]
SRP0[]
MSIRP[m]

/* STACK: */

#PUSHON
#END
ENDF[]

FDEF[], 87

/* fn places an accent &lt;c0&gt; &lt;c1&gt; on top of a base character &lt;p0&gt; &lt;p1&gt;
   fn uses the same constraint model as fn 111 (interpolate median),
   except that for composites there is no concept of original coordinates,
   hence the respective values are provided by the caller as &lt;partialFactor&gt;

   CALL[], &lt;p0&gt;, &lt;c0&gt;, &lt;c1&gt;, &lt;p1&gt;, &lt;partialFactor&gt;, 87 */

#BEGIN
#PUSHOFF

/* partialFactor: ((c0 + c1)/2 - p0)/(p1 - p0)
   target median: ((c0 + c1)/2 - p0)*(p1' - p0')/(p1 - p0)&gt; + p0' = partialFactor*(p1' - p0')
   source median: (c0' + c1')/2
   primed coordinates are [N]ew, other coordinates are [O]riginal */

/* STACK: &lt;c0&gt;, &lt;c1&gt;, &lt;p0&gt;, &lt;partialFactor&gt;, &lt;p1&gt; */

#PUSH, 3 /* p0 */
CINDEX[]
MD[N]
MUL[]

/* STACK: &lt;c0&gt;, &lt;c1&gt;, &lt;p0&gt;, &lt;((c0 + c1)/2 - p0)*(p1' - p0')/(p1 - p0)&gt; */

SWAP[] /* p0 */
GC[N]
ADD[]

/* STACK: &lt;c0&gt;, &lt;c1&gt;, &lt;targetMedian&gt; */

#PUSH, 79 /* #samples/pixel */
CALL[]
SWAP[]

/* STACK: &lt;c0&gt;, &lt;c1&gt;, &lt;#samples/pixel&gt;, &lt;targetMedian&gt; */

#PUSH, 4 /* c0 */
CINDEX[]
#PUSH, 4 /* c1 */
CINDEX[]
MD[N]
#PUSH, 3 /* #samples/pixel */
CINDEX[]
MUL[]

/* STACK: &lt;c0&gt;, &lt;c1&gt;, &lt;#samples/pixel&gt;, &lt;targetMedian&gt;, &lt;numVirtualPixels&gt; */

ODD[]
DUP[]
ADD[]
#PUSH, 98
ADD[]
CALL[] /* round to (half) virtual grid */

/* STACK: &lt;c0&gt;, &lt;c1&gt;, &lt;[targetMedian]&gt; */

#PUSH, 3 /* c0 */
CINDEX[]
DUP[]
SRP0[]
GC[N]
ROLL[] /* c1 */
GC[N]
ADD[]
#PUSH, 32
MUL[]

/* STACK: &lt;c0&gt;, &lt;targetMedian&gt;, &lt;sourceMedian&gt; */

SUB[]

/* STACK: &lt;c0&gt;, &lt;offset&gt; */

MSIRP[m]

#PUSHON
#END
ENDF[]

FDEF[], 88

/* set up storage locations with the x and y components
   of the italic and adjusted italic angles as follows:

     s[ 6] = adjusted italic angle y
     s[ 7] = adjusted italic angle x
     s[10] = italic angle y
     s[11] = italic angle x

   while rendering in b&amp;w, determines the optimal phase
   for positioning italic strokes

     s[ 4] = optimal phase

   CALL[], &lt;riseCvt&gt;, &lt;runCvt&gt;, 88 */

#BEGIN
#PUSHOFF

/* STACK: &lt;riseCvt&gt;, &lt;runCvt&gt; */

#PUSH, 0 /* Use twilight points to calculate stroke angles */
SZPS[]

#PUSH, 2, 3 /* riseCvt */
CINDEX[]
#PUSH, 1, 4 /* runCvt */
CINDEX[]

/* STACK: &lt;riseCvt&gt;, &lt;runCvt&gt;, &lt;2&gt;, &lt;riseCvt&gt;, &lt;1&gt;, &lt;runCvt&gt; */

SVTCA[X] /* Set twilight point 1 with italic run cvt in x */
MIAP[r]

SVTCA[Y] /* Set twilight point 2 with italic rise cvt in y */
MIAP[r]

#PUSH, 1, 2 /* and let the rasterizer do the math */
SPVTL[r]
GPV[]

#PUSH, 10 /* store the x and y components of the italic angle */
SWAP[]
NEG[]     /* notice that since we're essentially setting the pv to a line  */
WS[]      /* from (runCvt,0) to (0,riseCvt), the calculcated pv will be    */
#PUSH, 11 /* proportional to (runCvt,0) - (0,riseCvt) = (runCvt,-riseCvt). */
SWAP[]    /* Hence we have to mirror the result at the base line, which is */
WS[]      /* done by flipping (negating) the sign of the y component here. */

/* STACK: &lt;riseCvt&gt;, &lt;runCvt&gt; */

#PUSH, 2, 3 /* riseCvt */
CINDEX[]
#PUSH, 1, 4 /* runCvt */
CINDEX[]

SVTCA[X] /* same for the adjusted italic angle */
MIAP[R]  /* except to round the twilight point in x... */

SVTCA[Y]
MIAP[R]  /* ...and in y */

#PUSH, 1, 2
SPVTL[r]
GPV[]

#PUSH, 6
SWAP[]
NEG[]    /* same neg as above */
WS[]
#PUSH, 7
SWAP[]
WS[]

#PUSH, 1 /* restore graphics state */
SZPS[]

/* STACK: &lt;riseCvt&gt;, &lt;runCvt&gt; */

#PUSH, 0, 2
RS[]
EQ[]
IF[] /* running b&amp;w? */

    /* STACK: &lt;riseCvt&gt;, &lt;runCvt&gt; */
    /* determine adjusted run' = run*[rise]/rise */

    RCVT[]
    SWAP[]
    RCVT[]
    DUP[]
    RTG[]
    ROUND[Bl]
    ROLL[]
    MUL[]
    SWAP[]
    DIV[]

    /* STACK: &lt;run'&gt; */
    /* determine phase = (run' - [run'])/2 = half the rounding error */

    DUP[]
    DUP[]
    #PUSH, 64
    LT[]
    IF[]
        CEILING[] /* optimize for "minimum italic angle" */
    ELSE[]
        FLOOR[] /* optimize for minimal number of jaggies */
    EIF[]
    SUB[]
    #PUSH, 32
    MUL[]

    /* STACK: &lt;phase&gt; */
    /* for its use on bottom italic edge, determine complement to full pixel */

    #PUSH, 64
    SWAP[]
    SUB[]

    /* and store in s[4] */

    #PUSH, 4
    SWAP[]
    WS[]

    /* STACK: */

ELSE[]

    /* STACK: &lt;riseCvt&gt;, &lt;runCvt&gt; */

    #PUSH, 4, 0
    WS[]
    POP[]
    POP[]

    /* STACK: */

EIF[]

RTG[]
SVTCA[X]

#PUSHON
#END
ENDF[]

FDEF[], 89

/* function rounds &lt;cvt&gt; depending on rendering environment and pv

   CALL[], &lt;cvt&gt;, 89 */

#BEGIN
#PUSHOFF

DUP[]
RCVT[]
#PUSH, 0, 78 /* roundDist */
CALL[]
WCVTP[]

#PUSHON
#END
ENDF[]

FDEF[], 90

/* below &lt;ppem&gt;: make both children the same as the (averaged) parent cvt
   at and above: calculate child cvt &lt;ch0&gt; as &lt;fraction&gt; of child cvt &lt;ch1&gt;

   CALL[], &lt;p&gt;, &lt;ch0&gt;, &lt;fraction&gt;, &lt;ch1&gt;, &lt;ppem&gt;, 90 */

#BEGIN
#PUSHOFF

/* STACK: &lt;p&gt;, &lt;ch0&gt;, &lt;fraction&gt;, &lt;ch1&gt;, &lt;ppem&gt; */

MPPEM[]
LTEQ[]
#PUSH, 64, 79 /* #samples/pixel */
CALL[]
LT[]
OR[]
IF[] /* at or above ppem limit or rounding to less than a pixel */ 

    /* STACK: &lt;p&gt;, &lt;ch0&gt;, &lt;fraction&gt;, &lt;ch1&gt; */

    DUP[]
    RCVT[]
    #PUSH, 1, 78 /* roundDist */
    CALL[]
    DUP[]
    ROLL[]
    ROLL[]

    /* STACK: &lt;p&gt;, &lt;ch0&gt;, &lt;fraction&gt;, &lt;[ch1]&gt;, &lt;ch1&gt;, &lt;[ch1]&gt; */

    WCVTP[]

    /* STACK: &lt;p&gt;, &lt;ch0&gt;, &lt;fraction&gt;, &lt;[ch1]&gt; */

    DUP[]
    #PUSH, 64, 4
    MINDEX[]
    SUB[]
    MUL[]
    SUB[]
    #PUSH, 1, 78 /* roundDist */
    CALL[]

    /* STACK: &lt;p&gt;, &lt;ch0&gt;, &lt;[ch1] - [ch1]*(1-fraction)&gt; */

    WCVTP[]
    POP[] /* parent not involved */

    /* STACK: */

ELSE[]

    /* STACK: &lt;p&gt;, &lt;ch0&gt;, &lt;fraction&gt;, &lt;ch1&gt; */

    SWAP[]
    POP[] /* fraction not involved */

    /* STACK: &lt;p&gt;, &lt;ch0&gt;, &lt;ch1&gt; */

    ROLL[]
    RCVT[]
    #PUSH, 1, 78 /* roundDist */
    CALL[]

    /* STACK: &lt;ch0&gt;, &lt;ch1&gt;, &lt;[p]&gt; */

    DUP[]
    ROLL[]
    SWAP[]

    /* STACK: &lt;ch0&gt;, &lt;[p]&gt;, &lt;ch1&gt;, &lt;[p]&gt; */

    WCVTP[]
    WCVTP[]

    /* STACK: */

EIF[]

#PUSHON
#END
ENDF[]

FDEF[], 91

/* below &lt;ppem&gt;: make child cvt &lt;ch&gt; the same as parent cvt &lt;p&gt;
   at and above: calculate child cvt &lt;ch&gt; as &lt;fraction&gt; of parent cvt &lt;p&gt;

   CALL[], &lt;ch&gt;, &lt;fraction&gt;, &lt;p&gt;, &lt;ppem&gt;, 91 */

#BEGIN
#PUSHOFF

/* STACK: &lt;ch&gt;, &lt;fraction&gt;, &lt;p&gt;, &lt;ppem&gt; */

MPPEM[]
LTEQ[]
#PUSH, 64, 79 /* #samples/pixel */
CALL[]
LT[]
OR[]
IF[] /* at or above ppem limit or rounding to less than a pixel */ 

    /* STACK: &lt;ch&gt;, &lt;fraction&gt;, &lt;p&gt; */

    RCVT[]
    DUP[]
    ROLL[]

    /* STACK: &lt;ch&gt;, &lt;[p]&gt;, &lt;[p]&gt;, &lt;fraction&gt; */

    #PUSH, 64
    SUB[]
    MUL[]
    ADD[]

    /* STACK: &lt;ch&gt;, &lt;[p] + [p]*(fraction - 1)&gt; */

ELSE[]

    /* STACK: &lt;ch&gt;, &lt;fraction&gt;, &lt;p&gt; */

    SWAP[]
    POP[] /* fraction not involved */

    RCVT[]

    /* STACK: &lt;ch&gt;, [p] */

EIF[]

#PUSH, 1, 78 /* roundDist */
CALL[]
WCVTP[]

/* STACK: */

#PUSHON
#END
ENDF[]

FDEF[], 92

/* function to calculate a child cvt &lt;ch&gt;
   as a &lt;blend&gt; of two parent cvts &lt;p0&gt;, &lt;p1&gt;

   CALL[], &lt;ch&gt;, &lt;blend&gt;, &lt;p0&gt;, &lt;p1&gt;, 92 */

#BEGIN
#PUSHOFF

/* STACK: &lt;ch&gt;, &lt;blend&gt;, &lt;p0&gt;, &lt;p1&gt; */

SWAP[]
RCVT[]
DUP[]

/* STACK: &lt;ch&gt;, &lt;blend&gt;, &lt;p1&gt;, &lt;[p0]&gt;, &lt;[p0]&gt; */

ROLL[]
RCVT[]

SWAP[]
SUB[]

/* STACK: &lt;ch&gt;, &lt;blend&gt;, &lt;[p0]&gt;, &lt;[p1] - [p0]&gt; */

DUP[]
ABS[]
#PUSH, 64
LTEQ[]

/* STACK: &lt;ch&gt;, &lt;blend&gt;, &lt;[p0]&gt;, &lt;[p1] - [p0]&gt;, &lt;contrast &lt;= 1 pixel(s)?&gt; */

#PUSH, 4
CINDEX[]
DUP[]
#PUSH, 0
GTEQ[]
SWAP[]
#PUSH, 64
LTEQ[]
AND[]

AND[]

/* STACK: &lt;ch&gt;, &lt;blend&gt;, &lt;[p0]&gt;, &lt;[p1] - [p0]&gt;, &lt;contrast &lt;= 1 pixel(s) &amp;&amp; blend &gt;= 0 &amp;&amp; blend &lt;= 64?&gt; */

#PUSH, 64, 79 /* #samples/pixel */
CALL[]
EQ[]

AND[]

/* STACK: &lt;ch&gt;, &lt;blend&gt;, &lt;[p0]&gt;, &lt;[p1] - [p0]&gt;, &lt;contrast &lt;= 1 pixel(s) &amp;&amp; blend &gt;= 0 &amp;&amp; blend &lt;= 64 &amp;&amp; rounding to full pixel?&gt; */

IF[]

    /* STACK: &lt;ch&gt;, &lt;blend&gt;, &lt;[p0]&gt;, &lt;[p1] - [p0]&gt; */

    ROLL[]
    GPV[]
    ABS[]
    SWAP[]
    ABS[]
    SWAP[]

    /* STACK: &lt;ch&gt;, &lt;[p0]&gt;, &lt;[p1] - [p0]&gt;, &lt;blend&gt;, &lt;|pv.x|&gt;, &lt;|pv.y|&gt; */

    GTEQ[] /* pv closer to x? */
    IF[]

        /* STACK: &lt;ch&gt;, &lt;[p0]&gt;, &lt;[p1] - [p0]&gt;, &lt;blend&gt; */
        /* bias towards p1: blend' := 1 - (1 - blend)² */

        #PUSH, 64, 64
        ROLL[]
        SUB[]
        DUP[]
        MUL[]
        SUB[]

        /* &lt;ch&gt;, &lt;[p0]&gt;, &lt;[p1] - [p0]&gt;, &lt;1 - (1 - blend)²&gt; */

    ELSE[]

        /* STACK: &lt;ch&gt;, &lt;[p0]&gt;, &lt;[p1] - [p0]&gt;, &lt;blend&gt; */
        /* bias towards p0: blend' := blend² */

        DUP[]
        MUL[]

    /* STACK: &lt;ch&gt;, &lt;[p0]&gt;, &lt;[p1] - [p0]&gt;, &lt;blend²&gt; */

    EIF[]

ELSE[]

    /* STACK: &lt;ch&gt;, &lt;blend&gt;, &lt;[p0]&gt;, &lt;[p1] - [p0]&gt; */
    /* use unbiased blend */

    ROLL[]

    /* STACK: &lt;ch&gt;, &lt;[p0]&gt;, &lt;[p1] - [p0]&gt;, &lt;blend&gt; */

EIF[]

/* STACK: &lt;ch&gt;, &lt;[p0]&gt;, &lt;[p1] - [p0]&gt;, &lt;blend&gt; */

MUL[]
#PUSH, 2, 78 /* roundDist */
CALL[]
ADD[]

/* STACK: &lt;ch&gt;, &lt;[ch]&gt; */

WCVTP[]

#PUSHON
#END
ENDF[]

FDEF[], 93

/* fn sets vectors to X (used in calculated calls)

   CALL[], 93 */

#BEGIN
#PUSHOFF
SVTCA[X]
#PUSHON
#END
ENDF[]

FDEF[], 94

/* fn sets vectors to Y (used in calculated calls)

   CALL[], 94 */

#BEGIN
#PUSHOFF
SVTCA[Y]
#PUSHON
#END
ENDF[]

FDEF[], 95

/* Set fv to X, pv perpendicular to italic angle (used in calculated calls)

   CALL[], 95 */

#BEGIN
#PUSHOFF
SFVTCA[X]
#PUSH, 11, 10
RS[]
SWAP[]
RS[]
NEG[]
SPVFS[]
#PUSHON
#END
ENDF[]

FDEF[], 96

/* Set fv to italic angle, pv to Y (used in calculated calls)

   CALL[], 96 */

#BEGIN
#PUSHOFF
#PUSH, 10, 11
RS[]
SWAP[]
RS[]
SFVFS[]
SPVTCA[Y]
#PUSHON
#END
ENDF[]

FDEF[], 97

/* round down to virtual grid

   CALL[], &lt;#samples/pixel&gt;, &lt;argument&gt;, 97

   returns with rounded argument on stack */

#BEGIN
#PUSHOFF

/* STACK: &lt;#samples/pixel&gt;, &lt;argument&gt; */
/* upscale argument by #samples/pixel */

#PUSH, 2 /* #samples/pixel */
CINDEX[]
MUL[]

/* do the rounding in upscaled domain */

FLOOR[] /* round down to super grid */

/* Downscaling uses a DIV[] operation, which is implemented as floor(numerator/denominator).
   For round(numerator/denominator) instead, add ½ denominator to numerator before dividing.
   But since the division in 26.6 has to multiply the numerator by 2^6 (64) before dividing,
   we have to divide said ½ denominator by 64 before adding, hence the 8192 (= 128 in 26.6). */

#PUSH, 2 /* #samples/pixel */
CINDEX[]
#PUSH, 8192
DIV[]
ADD[]

/* downscale rounded and adjusted argument */

SWAP[] /* #samples/pixel */
DIV[]

/* STACK: &lt;[argument]&gt; */

#PUSHON
#END
ENDF[]

FDEF[], 98

/* round to virtual grid

   CALL[], &lt;#samples/pixel&gt;, &lt;argument&gt;, 98

   returns with rounded argument on stack */

#BEGIN
#PUSHOFF

/* STACK: &lt;#samples/pixel&gt;, &lt;argument&gt; */

#PUSH, 2 /* #samples/pixel */
CINDEX[]
MUL[]

/* do the rounding in upscaled domain */

#PUSH, 32 /* round to super grid */
ADD[]
FLOOR[]

/* see above for adjustments below */

#PUSH, 2 /* #samples/pixel */
CINDEX[]
#PUSH, 8192
DIV[]
ADD[]

/* downscale rounded and adjusted argument */

SWAP[] /* #samples/pixel */
DIV[]

/* STACK: &lt;[argument]&gt; */

#PUSHON
#END
ENDF[]

FDEF[], 99

/* round up to virtual grid

   CALL[], &lt;#samples/pixel&gt;, &lt;argument&gt;, 99

   returns with rounded argument on stack */

#BEGIN
#PUSHOFF

/* STACK: &lt;#samples/pixel&gt;, &lt;argument&gt; */

#PUSH, 2 /* #samples/pixel */
CINDEX[]
MUL[]

/* do the rounding in upscaled domain */

CEILING[] /* round up to super grid */

/* see above for adjustments below */

#PUSH, 2 /* #samples/pixel */
CINDEX[]
#PUSH, 8192
DIV[]
ADD[]

/* downscale rounded and adjusted argument */

SWAP[] /* #samples/pixel */
DIV[]

/* STACK: &lt;[argument]&gt; */

#PUSHON
#END
ENDF[]

FDEF[], 100

/* round to half virtual grid

   CALL[], &lt;#samples/pixel&gt;, &lt;argument&gt;, 100

   returns with rounded argument on stack */

#BEGIN
#PUSHOFF

/* STACK: &lt;#samples/pixel&gt;, &lt;argument&gt; */

#PUSH, 2 /* #samples/pixel */
CINDEX[]
MUL[]

/* do the rounding in upscaled domain */

FLOOR[]
#PUSH, 32 /* round to half super grid */
ADD[]

/* see above for adjustments below */

#PUSH, 2 /* #samples/pixel */
CINDEX[]
#PUSH, 8192
DIV[]
ADD[]

/* downscale rounded and adjusted argument */

SWAP[] /* #samples/pixel */
DIV[]

/* STACK: &lt;[argument]&gt; */

#PUSHON
#END
ENDF[]

FDEF[], 101

/* determine actual distance to be used for emulating MDRP[&lt;]
   instruction with rendering environment specific rounding

   CALL[], &lt;p&gt;, &lt;c&gt;, 101

   returns with rounded distance on stack */

#BEGIN
#PUSHOFF

/* STACK: &lt;p&gt;, &lt;c&gt; */

SWAP[]
MD[O]

/* round without minDist */

#PUSH, 2, 78 /* roundDist */
CALL[]

/* STACK: &lt;[w]&gt; */

#PUSHON
#END
ENDF[]

FDEF[], 102

/* determine actual distance to be used for emulating MDRP[&gt;]
   instruction with rendering environment specific rounding

   CALL[], &lt;p&gt;, &lt;c&gt;, 102

   returns with rounded distance on stack */

#BEGIN
#PUSHOFF

/* STACK: &lt;p&gt;, &lt;c&gt; */

SWAP[]
MD[O]

/* round with minDist */

#PUSH, 1, 78 /* roundDist */
CALL[]

/* STACK: &lt;[w]&gt; */

#PUSHON
#END
ENDF[]

FDEF[], 103

/* determine actual distance to be used for emulating MIRP[&lt;]
   instruction with rendering environment specific rounding

   CALL[], &lt;p&gt;, &lt;c&gt;, &lt;cvt&gt;, 103

   returns with rounded distance on stack */

#BEGIN
#PUSHOFF

/* STACK: &lt;p&gt;, &lt;c&gt;, &lt;cvt&gt; */

SWAP[] /* c */
ROLL[] /* p */
MD[O]
SWAP[] /* cvt */

/* STACK: &lt;wNat&gt;, &lt;cvt&gt; */
/* do cvt cut-in test */

RCVT[]
ABS[]
#PUSH, 2
CINDEX[]
ABS[]
#PUSH, 2
CINDEX[]
SUB[]
ABS[]
#PUSH, 3 /* cvt cut-in */
RS[]

/* STACK: &lt;wNat&gt;, &lt;|wCvt|&gt;, &lt;||wNat| - |wCvt||&gt;, &lt;cvt cut-in&gt; */

GT[]
IF[]

    /* STACK: &lt;wNat&gt;, &lt;|wCvt|&gt; */
    /* cvt cut-in test failed */

    POP[]
    DUP[]
    ABS[]

    /* else cvt cut-in test succeeded */

EIF[]

/* STACK: &lt;wNat&gt;, &lt;|w|&gt; */
/* round without minDist */

#PUSH, 2, 78 /* roundDist */
CALL[]

/* STACK: &lt;wNat&gt;, &lt;[w]&gt; */
/* inherit sign from wNat */

SWAP[]
#PUSH, 0
LT[]
IF[]
    NEG[]
EIF[]

/* STACK: &lt;[w]&gt; */

#PUSHON
#END
ENDF[]

FDEF[], 104

/* determine actual distance to be used for emulating MIRP[&gt;]
   instruction with rendering environment specific rounding

   CALL[], &lt;p&gt;, &lt;c&gt;, &lt;cvt&gt;, 104

   returns with rounded distance on stack */

#BEGIN
#PUSHOFF

/* STACK: &lt;p&gt;, &lt;c&gt;, &lt;cvt&gt; */

SWAP[] /* c */
ROLL[] /* p */
MD[O]
SWAP[] /* cvt */

/* STACK: &lt;wNat&gt;, &lt;cvt&gt; */
/* do cvt cut-in test */

RCVT[]
ABS[]
#PUSH, 2
CINDEX[]
ABS[]
#PUSH, 2
CINDEX[]
SUB[]
ABS[]
#PUSH, 3 /* cvt cut-in */
RS[]

/* STACK: &lt;wNat&gt;, &lt;|wCvt|&gt;, &lt;||wNat| - |wCvt||&gt;, &lt;cvt cut-in&gt; */

GT[]
IF[]

    /* STACK: &lt;wNat&gt;, &lt;|wCvt|&gt; */
    /* cvt cut-in test failed */

    POP[]
    DUP[]
    ABS[]

    /* else cvt cut-in test succeeded */

EIF[]

/* STACK: &lt;wNat&gt;, &lt;|w|&gt; */
/* round with minDist */

#PUSH, 1, 78 /* roundDist */
CALL[]

/* STACK: &lt;wNat&gt;, &lt;[w]&gt; */
/* inherit sign from wNat */

SWAP[]
#PUSH, 0
LT[]
IF[]
    NEG[]
EIF[]

/* STACK: &lt;[w]&gt; */

#PUSHON
#END
ENDF[]

FDEF[], 105

/* emulate MDRP[&lt;] instruction with rendering environment specific rounding

   CALL[], &lt;p&gt;, &lt;c&gt;, 105 */

#BEGIN
#PUSHOFF

/* STACK: &lt;p&gt;, &lt;c&gt; */

DUP[] /* c */
#PUSH, 3 /* p */
CINDEX[]
MD[O]
#PUSH, 2, 78 /* roundDist */
CALL[]

/* STACK: &lt;p&gt;, &lt;c&gt;, &lt;[dist]&gt; */

ROLL[]
SRP0[]
MSIRP[M]

#PUSHON
#END
ENDF[]

FDEF[], 106

/* emulate MDRP[&gt;] instruction with rendering environment specific rounding

   CALL[], &lt;p&gt;, &lt;c&gt;, 106 */

#BEGIN
#PUSHOFF

/* STACK: &lt;p&gt;, &lt;c&gt; */

DUP[] /* c */
#PUSH, 3 /* p */
CINDEX[]
MD[O]
#PUSH, 1, 78 /* roundDist */
CALL[]

/* STACK: &lt;p&gt;, &lt;c&gt;, &lt;[dist]&gt; */

ROLL[]
SRP0[]
MSIRP[M]

#PUSHON
#END
ENDF[]

FDEF[], 107

/* emulate MIRP[&lt;] instruction with rendering environment specific rounding

   CALL[], &lt;p&gt;, &lt;c&gt;, &lt;cvt&gt;, 107 */

#BEGIN
#PUSHOFF

/* STACK: &lt;p&gt;, &lt;c&gt;, &lt;cvt&gt; */

#PUSH, 3 /* p */
CINDEX[]
#PUSH, 3 /* c */
CINDEX[]
ROLL[] /* cvt */
#PUSH, 103 /* resActDist, cvt, noMinDist */
CALL[]

/* STACK: &lt;p&gt;, &lt;c&gt;, &lt;[dist]&gt; */

ROLL[]
SRP0[]
MSIRP[M]

#PUSHON
#END
ENDF[]

FDEF[], 108

/* emulate MIRP[&gt;] instruction with rendering environment specific rounding

   CALL[], &lt;p&gt;, &lt;c&gt;, &lt;cvt&gt;, 108 */

#BEGIN
#PUSHOFF

/* STACK: &lt;p&gt;, &lt;c&gt;, &lt;cvt&gt; */

#PUSH, 3 /* p */
CINDEX[]
#PUSH, 3 /* c */
CINDEX[]
ROLL[] /* cvt */
#PUSH, 104 /* resActDist, cvt, minDist */
CALL[]

/* STACK: &lt;p&gt;, &lt;c&gt;, &lt;[dist]&gt; */

ROLL[]
SRP0[]
MSIRP[M]

#PUSHON
#END
ENDF[]

FDEF[], 109

/* fn symmetrically constrains a stroke &lt;p&gt;, &lt;c&gt; with &lt;cvt&gt;

   CALL[], &lt;p&gt;, &lt;c&gt;, &lt;cvt&gt;, 109 */

#BEGIN
#PUSHOFF

/* STACK: &lt;p&gt;, &lt;c&gt;, &lt;cvt&gt; */
/* determine old median */

#PUSH, 3 /* &lt;p&gt; */
CINDEX[]
GC[N]
#PUSH, 3 /* &lt;c&gt; */
CINDEX[]
GC[N]
ADD[]

/* STACK: &lt;p&gt;, &lt;c&gt;, &lt;cvt&gt;, &lt;2*median&gt; */
/* lock parent */

#PUSH, 4 /* p */
CINDEX[]
MDAP[r]

/* STACK: &lt;p&gt;, &lt;c&gt;, &lt;cvt&gt;, &lt;2*median&gt; */
/* link child */

#PUSH, 4 /* p */
CINDEX[]
#PUSH, 4 /* c */
CINDEX[]
#PUSH, 4 /* cvt */
MINDEX[]
DUP[]
#PUSH, 0
LT[]
IF[]
    POP[]
    #PUSH, 106 /* resMIRP, noCvt, minDist */
ELSE[]
    #PUSH, 108 /* resMIRP, cvt, minDist */
EIF[]
CALL[]

/* STACK: &lt;p&gt;, &lt;c&gt;, &lt;2*median&gt; */
/* determine new median */

#PUSH, 3 /* &lt;p&gt; */
CINDEX[]
GC[N]
#PUSH, 3 /* &lt;c&gt; */
CINDEX[]
GC[N]
ADD[]

/* STACK: &lt;p&gt;, &lt;c&gt;, &lt;2*median&gt;, &lt;2*median'&gt; */

SUB[]
#PUSH, 128
DIV[] /* floor to 1/64 for now */

/* STACK: &lt;p&gt;, &lt;c&gt;, &lt;deltaMedian&gt; */

DUP[]
ROLL[]
DUP[]
SRP0[]
SWAP[]
MSIRP[m]
SWAP[]
DUP[]
SRP0[]
SWAP[]
MSIRP[m]

/* STACK: */

#PUSHON
#END
ENDF[]

FDEF[], 110

/* calculate offset for emulation of interpolation of median of
   &lt;c0&gt; and &lt;c1&gt; between parents &lt;p0&gt; and &lt;p1&gt; using current pv and fv

   CALL[], &lt;p0&gt;, &lt;c0&gt;, &lt;c1&gt;, &lt;p1&gt;, 110

   returns with offset on stack */

#BEGIN
#PUSHOFF

/* STACK: &lt;p0&gt;, &lt;c0&gt;, &lt;c1&gt;, &lt;p1&gt; */

#PUSH, 3 /* c0 */
CINDEX[]
GC[O]
#PUSH, 3 /* c1 */
CINDEX[]
GC[O]
ADD[]

/* STACK: &lt;p0&gt;, &lt;c0&gt;, &lt;c1&gt;, &lt;p1&gt;, &lt;c0 + c1&gt; */

#PUSH, 5 /* p0 */
CINDEX[]
GC[O]
#PUSH, 128
MUL[]
SUB[]

/* STACK: &lt;p0&gt;, &lt;c0&gt;, &lt;c1&gt;, &lt;p1&gt;, &lt;c0 + c1 - 2*p0&gt; */

#PUSH, 2 /* p1 */
CINDEX[]
#PUSH, 6 /* p0 */
CINDEX[]
MD[N]
MUL[]

/* STACK: &lt;p0&gt;, &lt;c0&gt;, &lt;c1&gt;, &lt;p1&gt;, &lt;(c0 + c1 - 2*p0)*(p1' - p0')&gt; */

SWAP[] /* p1 */
#PUSH, 5 /* p0 */
CINDEX[]
MD[O]
#PUSH, 128
MUL[]

/* prevent inadvertent divide-by-zero e.g. on non-spacing glyphs */
DUP[]
IF[]
    DIV[]
ELSE[]
    POP[]
EIF[]

/* STACK: &lt;p0&gt;, &lt;c0&gt;, &lt;c1&gt;, &lt;(c0 + c1 - 2*p0)*(p1' - p0')/(2*(p1 - p0))&gt; */

#PUSH, 4 /* p0 */
MINDEX[]
GC[N]
ADD[]

/* STACK: &lt;c0&gt;, &lt;c1&gt;, &lt;(c0'' + c1'')/2&gt; */

ROLL[] /* c0 */
GC[N]
ROLL[] /* c1 */
GC[N]
ADD[]
#PUSH, 32
MUL[]

/* STACK: &lt;(c0'' + c1'')/2&gt;, &lt;(c0' + c1')/2&gt; */

SUB[]

/* STACK: &lt;offset&gt; */

#PUSHON
#END
ENDF[]

FDEF[], 111

/* emulate interpolation of median of &lt;c0&gt; and &lt;c1&gt;
   between parents &lt;p0&gt; and &lt;p1&gt; using current pv and fv

   CALL[], &lt;p0&gt;, &lt;c0&gt;, &lt;c1&gt;, &lt;p1&gt;, 111 */

#BEGIN
#PUSHOFF

/* STACK: &lt;p0&gt;, &lt;c0&gt;, &lt;c1&gt;, &lt;p1&gt; */

#PUSH, 4 /* p0 */
MINDEX[]
#PUSH, 4 /* c0 */
CINDEX[]
#PUSH, 4 /* c1 */
CINDEX[]
#PUSH, 4 /* p1 */
MINDEX[]
#PUSH, 110 /* calc offset for interpolation of median */
CALL[]

/* STACK: &lt;c0&gt;, &lt;c1&gt;, &lt;offset&gt; */

DUP[]

/* STACK: &lt;c0&gt;, &lt;c1&gt;, &lt;offset&gt;, &lt;offset&gt; */

ROLL[]
DUP[]
SRP0[]
SWAP[]

/* STACK: &lt;c0&gt;, &lt;offset&gt;, &lt;c1&gt;, &lt;offset&gt; */

MSIRP[m]

SWAP[]
DUP[]
SRP0[]
SWAP[]

/* STACK: &lt;c0&gt;, &lt;offset&gt; */

MSIRP[m]

#PUSHON
#END
ENDF[]

FDEF[], 112


/* adjust (unrounded) stroke phase to target phase according to &lt;method&gt;

   method 0: round to nearest virtual pixel
   method 1: apply method 2 below 2 pixel wide strokes else method 0
   method 2: optimize for max #black pixels
   method 3: optimize for one edge aligned

   right?: boolean indicating a left (false) or right (true) stroke)

   CALL[], &lt;phase&gt;, &lt;weight&gt;, &lt;method&gt;, &lt;right?&gt;, 112

   returns with (rounded) adjusted phase on stack */

#BEGIN
#PUSHOFF

/* STACK: &lt;phase&gt;, &lt;weight&gt;, &lt;method&gt;, &lt;right?&gt; */

SWAP[]

DUP[]
#PUSH, 1
EQ[]
IF[]

    /* STACK: &lt;phase&gt;, &lt;weight&gt;, &lt;right?&gt;, &lt;method&gt; */
    /* replace method depending on stroke weight */

    POP[]
    #PUSH, 2 /* weight */
    CINDEX[]
    #PUSH, 2, 78 /* roundDist */
    CALL[]
    #PUSH, 128
    LT[]
    DUP[]
    ADD[]
EIF[]

DUP[]
ADD[]
ADD[]

/* STACK: &lt;phase&gt;, &lt;weight&gt;, &lt;method' = 2*method + right&gt; */

DUP[]
#PUSH, 1
LTEQ[]
IF[] /* just round to nearest virtual pixel */

    POP[]
    POP[]

    /* STACK: &lt;phase&gt; */

ELSE[]
    DUP[]
    #PUSH, 5
    LTEQ[]
    IF[] /* optimize for max #black pixels */

        POP[]

        /* STACK: &lt;phase&gt;, &lt;weight&gt; */

        DUP[]
        FLOOR[]
        SUB[]

        /* STACK: &lt;phase&gt;, &lt;fractWeight&gt; */

        #PUSH, 64
        SWAP[]
        SUB[]

        /* STACK: &lt;phase&gt;, &lt;1-fractWeight&gt; */

        #PUSH, 0, 3 /* phase */
        CINDEX[]
        LT[]
        #PUSH, 3 /* phase */
        CINDEX[]
        #PUSH, 3 /* 1-fractWeight */
        CINDEX[]
        LT[]
        AND[]
        IF[] /* if 0 &lt; phase &lt; 1-fractWeight then need to adjust phase */

            /* STACK: &lt;phase&gt;, &lt;1-fractWeight&gt; */

            DUP[]
            #PUSH, 3
            CINDEX[]
            SUB[]

            /* STACK: &lt;phase&gt;, &lt;1-fractWeight&gt;, &lt;1-fractWeight-phase&gt; */

            ROLL[]
            GTEQ[]
            IF[] /* error from phase to 1-fractWeight &gt;= error from 0 to phase */
                POP[]
                #PUSH, 0 /* target 0 as phase */
            EIF[]
            /* else target 1-fractWeight as phase, which is what's left on stack */

        ELSE[]

            /* STACK: &lt;phase&gt;, &lt;1-fractWeight&gt; */

            POP[]

        EIF[]

    ELSE[] /* optimize for one edge aligned */

        /* STACK: &lt;phase&gt;, &lt;weight&gt;, &lt;method'&gt; */

        #PUSH, 7
        EQ[]
        IF[] /* right flush */

            /* STACK: &lt;phase&gt;, &lt;weight&gt; */

            DUP[]
            FLOOR[]
            SUB[]

            /* STACK: &lt;phase&gt;, &lt;fractWeight&gt; */

            NEG[]
            SWAP[]
            POP[]

        ELSE[] /* left flush (and default) */

            /* STACK: &lt;phase&gt;, &lt;weight&gt; */

            POP[]
            POP[]
            #PUSH, 0

        EIF[]

    EIF[]

EIF[]

#PUSH, 2, 78 /* roundDist */
CALL[]

/* STACK: phase */

#PUSHON
#END
ENDF[]

FDEF[], 113

/* fn calculates delta phase for optimal position of
   stroke bordered by &lt;p&gt; and &lt;c&gt; according to &lt;method&gt;
   (see fn 112 for definition of method)

   CALL[], &lt;p&gt;, &lt;c&gt;, &lt;method&gt;, 113

   returns with delta phase in interval ]-½,+½] on stack */

#BEGIN
#PUSHOFF

/* STACK: &lt;p&gt;, &lt;c&gt;, &lt;method&gt; */

    /* use sequence of parameters &lt;p&gt; and &lt;c&gt; to determine if this is
       a "left" stroke (in which case we may add grey to the right), or
       a "right" stroke (in which case we may add grey to the left) */

#PUSH, 2 /* c */
CINDEX[]
#PUSH, 4 /* p */
CINDEX[]
MD[O]
#PUSH, 0
GTEQ[]
IF[]
    #PUSH, 0 /* "left" stroke */
ELSE[]
    ROLL[]
    ROLL[]
    SWAP[]
    ROLL[]
    #PUSH, 1 /* "right" stroke */
EIF[]

/* STACK: &lt;p&gt;, &lt;c&gt;, &lt;method&gt;, &lt;right?&gt; */

#PUSH, 4 /* p */
CINDEX[]
GC[N]
DUP[]
FLOOR[]
SUB[]
DUP[]

/* STACK: &lt;p&gt;, &lt;c&gt;, &lt;method&gt;, &lt;right?&gt;, &lt;source phase&gt;, &lt;source phase&gt; */

#PUSH, 5 /* c */
MINDEX[]
#PUSH, 6 /* p */
MINDEX[]
MD[N]

/* STACK: &lt;method&gt;, &lt;right?&gt;, &lt;source phase&gt;, &lt;source phase&gt;, &lt;weight&gt; */

#PUSH, 5 /* method */
MINDEX[]
#PUSH, 5 /* right? */
MINDEX[]
#PUSH, 112 /* adjust to target stroke phase */
CALL[]

/* STACK: &lt;source phase&gt;, &lt;target phase&gt; */

SWAP[]
SUB[]

/* STACK: &lt;delta phase&gt; */
/* minimze phase into interval ]-½,+½] */

NEG[]
#PUSH, 32
ADD[]
DUP[]
FLOOR[]
SUB[]
#PUSH, 32
SUB[]
NEG[]

#PUSHON
#END
ENDF[]

FDEF[], 114

/* emulate MIAP instruction with rendering environment specific rounding

   CALL[], &lt;c&gt;, &lt;cvt&gt;, 114 */

#BEGIN
#PUSHOFF

/* STACK: &lt;c&gt;, &lt;cvt&gt; */

#PUSH, 2 /* c */
CINDEX[]
GC[N]
DUP[]

/* STACK: &lt;c&gt;, &lt;cvt&gt;, &lt;wNat&gt;, &lt;wNat&gt; */

ROLL[]
DUP[]
#PUSH, 0
LT[]
IF[]

    /* STACK: &lt;c&gt;, &lt;wNat&gt;, &lt;wNat&gt;, &lt;cvt&gt; */

    POP[]

    /* cvt &lt; 0 (no cvt used) =&gt; w = wNat */
    /* STACK: &lt;c&gt;, &lt;wNat&gt;, &lt;w&gt; */

    #PUSH, 2, 78 /* roundDist */
    CALL[]

ELSE[]

    RCVT[]

    /* STACK: &lt;c&gt;, &lt;wNat&gt;, &lt;wNat&gt;, &lt;wCvt&gt; */
    /* no cvt cut-in test (for eventual support of automatic small caps, superiors, and inferiors), pop wNat to use wCvt */

    SWAP[]
    POP[]

    /* leave value as rounded by cpgm */
    /* STACK: &lt;c&gt;, &lt;wNat&gt;, &lt;w&gt; */

EIF[]

SUB[]
NEG[]

/* STACK: &lt;c&gt;, &lt;wDelta&gt; */

#PUSH, 2
CINDEX[]
SRP0[]

MSIRP[M]

#PUSHON
#END
ENDF[]

FDEF[], 115

/* interpolates a point &lt;p&gt; in &lt;dirFlag&gt; between points &lt;lsb&gt; and &lt;rsb&gt;
   dirFlag: postRoundFlag*8 + dir
   dir: X = 0, Y = 1, X/ = 2, Y/ = 3, ...

   depending on rendering environment and pv may optimise point position

   CALL[], &lt;dirFlag&gt;, &lt;p0&gt;, &lt;c&gt;, &lt;p1&gt;, 115 */

#BEGIN
#PUSHOFF

/* STACK: &lt;dirFlag&gt;, &lt;p0&gt;, &lt;p&gt;, &lt;p1&gt; */
/* separate postRoundFlag from dir */

#PUSH, 4 /* dirFlag */
MINDEX[]
DUP[]
#PUSH, 512
DIV[]
DUP[]
#PUSH, 512
MUL[]
ROLL[]
SWAP[]
SUB[]

/* STACK:, &lt;p0&gt;, &lt;p&gt;, &lt;p1&gt;, &lt;postRoundFlag&gt;, &lt;dir&gt; */

DUP[]
#PUSH, 93 /* setV */
ADD[]
CALL[]

/* STACK: &lt;p0&gt;, &lt;p&gt;, &lt;p1&gt;, &lt;postRoundFlag&gt;, &lt;dir&gt; */

#PUSH, 5 /* p0 */
CINDEX[]
SRP1[]
ROLL[] /* p1 */
SRP2[]
ROLL[] /* p */
DUP[]
IP[]

/* STACK: &lt;p0&gt;, &lt;postRoundFlag&gt;, &lt;dir&gt;, &lt;p&gt; */

ROLL[] /* postRoundFlag */
IF[]

    /* STACK: &lt;p0&gt;, &lt;dir&gt;, &lt;p&gt; */

    #PUSH, 93, 4096, 4 /* setV, 64, dir */
    MINDEX[]
    MUL[]
    ODD[]
    ADD[]
    CALL[]

    /* STACK: &lt;p0&gt;, &lt;p&gt; */

    SWAP[]
    POP[]
    DUP[] /* p */
    SRP0[]
    DUP[]
    GC[N]
    DUP[]
    #PUSH, 2, 78 /* roundDist */
    CALL[]
    SWAP[]
    SUB[]

    /* STACK: &lt;p&gt;, &lt;[p.c]-p.c&gt; */

ELSE[]

    /* STACK: &lt;p0&gt;, &lt;dir&gt;, &lt;p&gt; */

    SWAP[]
    POP[]

    /* STACK: &lt;p0&gt;, &lt;p&gt; */

    DUP[]
    ROLL[]
    DUP[] /* p0 */
    SRP0[]
    MD[N]

    #PUSH, 2, 78 /* roundDist */
    CALL[]

    /* STACK: &lt;p&gt;, &lt;[p.dist]&gt; */

EIF[]

MSIRP[M]

/* STACK: */

#PUSHON
#END
ENDF[]

FDEF[], 116

/* constrains a stroke in &lt;dir&gt;, defined by parent &lt;p&gt; and child &lt;c&gt;,
   and by cvt &lt;cvt&gt;, and interpolates it between points &lt;gp0&gt; and &lt;gp1&gt;
   dir: X = 0, Y = 1, X/ = 2
   sof: (stroke optimization flags ||, |&lt;, and &gt;| ) don't = 0, do = 1, leftBias = 2, rightBias = 3

   CALL[], &lt;dir&gt;, &lt;gp0&gt;, &lt;p&gt;, &lt;c&gt;, &lt;cvt&gt;, &lt;gp1&gt;, &lt;sof&gt;, 116 */

#BEGIN
#PUSHOFF

/* STACK: &lt;dir&gt;, &lt;gp0&gt;, &lt;p&gt;, &lt;c&gt;, &lt;cvt&gt;, &lt;gp1&gt;, &lt;sof&gt; */

#PUSH, 93, 4096, 9 /* setV, 64, dir */
CINDEX[]
MUL[]
ODD[]
ADD[]
CALL[]

/* constrain stroke */

#PUSH, 5 /* p */
CINDEX[]
#PUSH, 5 /* c */
CINDEX[]
#PUSH, 5 /* cvt */
MINDEX[]
#PUSH, 109 /* symDist */
CALL[]

/* STACK: &lt;dir&gt;, &lt;gp0&gt;, &lt;p&gt;, &lt;c&gt;, &lt;gp1&gt;, &lt;sof&gt; */

#PUSH, 93, 7 /* setV, dir */
CINDEX[]
ADD[]
CALL[]

#PUSH, 5 /* gp0 */
CINDEX[]
#PUSH, 5 /* p */
CINDEX[]
#PUSH, 5 /* c */
CINDEX[]
#PUSH, 5 /* gp1 */
CINDEX[]
#PUSH, 111 /* interpolate median */
CALL[]

/* STACK: &lt;dir&gt;, &lt;gp0&gt;, &lt;p&gt;, &lt;c&gt;, &lt;gp1&gt;, &lt;sof&gt; */

#PUSH, 93, 4096, 8 /* setV, 64, dir */
MINDEX[]
MUL[]
ODD[]
ADD[]
CALL[]

/* STACK: &lt;gp0&gt;, &lt;p&gt;, &lt;c&gt;, &lt;gp1&gt;, &lt;sof&gt; */

DUP[]
#PUSH, 0
GT[]
IF[] /* optimize stroke position */

    #PUSH, 80
    CALL[]

    /* STACK: &lt;gp0&gt;, &lt;p&gt;, &lt;c&gt;, &lt;gp1&gt;, &lt;sof&gt;, &lt;som&gt; */

    #PUSH, 5 /* p */
    CINDEX[]
    #PUSH, 5 /* c */
    CINDEX[]
    #PUSH, 7 /* p */
    CINDEX[]
    #PUSH, 7 /* c */
    CINDEX[]
    #PUSH, 5 /* som */
    CINDEX[]
    #PUSH, 113 /* get delta phase for optimal stroke position */
    CALL[]
    #PUSH, 2
    SLOOP[]
    SHPIX[]

    /* STACK: &lt;gp0&gt;, &lt;p&gt;, &lt;c&gt;, &lt;gp1&gt;, &lt;sof&gt;, &lt;som&gt; */

    #PUSH, 0
    GT[]
    #PUSH, 2 /* sof */
    CINDEX[]
    #PUSH, 1
    GT[]
    AND[]
    IF[]

        /* STACK: &lt;gp0&gt;, &lt;p&gt;, &lt;c&gt;, &lt;gp1&gt;, &lt;sof&gt; */
        /* determine total side-bearing space to see if we need to bias the black body */

        #PUSH, 4 /* p */
        CINDEX[]
        #PUSH, 6 /* gp0 */
        CINDEX[]
        MD[N]
        #PUSH, 3 /* gp1 */
        CINDEX[]
        #PUSH, 5 /* c */
        CINDEX[]
        MD[N]
        ADD[]
        DUP[]
        #PUSH, 64
        GT[]
        IF[]

            /* STACK: &lt;gp0&gt;, &lt;p&gt;, &lt;c&gt;, &lt;gp1&gt;, &lt;sof&gt;, &lt;totSBS&gt; */
            /* enough total side-bearing space left, leave it alone */
            POP[]

        ELSE[]

            /* STACK: &lt;gp0&gt;, &lt;p&gt;, &lt;c&gt;, &lt;gp1&gt;, &lt;sof&gt;, &lt;totSBS&gt; */
            /* 1 pixel or less total side-bearing space left */

            #PUSH, 0
            GT[]
            IF[]

                /* STACK: &lt;gp0&gt;, &lt;p&gt;, &lt;c&gt;, &lt;gp1&gt;, &lt;sof&gt; */
                /* any total side-bearing space left at all */

                DUP[]
                #PUSH, 2
                EQ[]
                IF[]

                    /* STACK: &lt;gp0&gt;, &lt;p&gt;, &lt;c&gt;, &lt;gp1&gt;, &lt;sof&gt; */
                    /* move stroke flush left */

                    #PUSH, 4 /* p */
                    CINDEX[]
                    #PUSH, 4 /* c */
                    CINDEX[]
                    #PUSH, 7 /* gp0 */
                    CINDEX[]
                    #PUSH, 7 /* p */
                    CINDEX[]
                    MD[N]
                    #PUSH, 2
                    SLOOP[]
                    SHPIX[]

                ELSE[]

                    /* STACK: &lt;gp0&gt;, &lt;p&gt;, &lt;c&gt;, &lt;gp1&gt;, &lt;sof&gt; */
                    /* move stroke flush left */

                    #PUSH, 4 /* p */
                    CINDEX[]
                    #PUSH, 4 /* c */
                    CINDEX[]
                    #PUSH, 4 /* gp1 */
                    CINDEX[]
                    #PUSH, 6 /* c */
                    CINDEX[]
                    MD[N]
                    #PUSH, 2
                    SLOOP[]
                    SHPIX[]

                EIF[]

            EIF[]

        EIF[]

    EIF[]

EIF[]

/* STACK: &lt;gp0&gt;, &lt;p&gt;, &lt;c&gt;, &lt;gp1&gt;, &lt;sof&gt; */

POP[]
POP[]
POP[]
POP[]
POP[]

/* STACK: */

#PUSHON
#END
ENDF[]

FDEF[], 117

/* fn tries to place and constrain two strokes &lt;p0,c0,cvt0&gt; and &lt;p1,c1,cvt1&gt;
   between grandparents &lt;gp0&gt; and &lt;gp1&gt; in direction &lt;dir&gt;
   dir: X = 0, Y = 1, X/ = 2
   X/ (italic) is not yet implemented; to do so properly will need to factor
   the italic phase optimization part out of fn 131 and make it available to
   this fn.   

   CALL[], &lt;dir&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;cvt0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;gp1&gt;, 117 */

#BEGIN
#PUSHOFF

/* STACK: &lt;dir&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;cvt0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;gp1&gt; */

#PUSH, 93, 4096, 11 /* setV, dir */
CINDEX[]
MUL[]
ODD[]
ADD[]
CALL[]

/* STACK: &lt;dir&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;cvt0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;gp1&gt; */
/* interpolate black body */

#PUSH, 7 /* p0 */
CINDEX[]
#PUSH, 7 /* c0 */
CINDEX[]
#PUSH, 6 /* p1 */
CINDEX[]
#PUSH, 6 /* c1 */
CINDEX[]
#PUSH, 12 /* gp0 */
CINDEX[]
#PUSH, 12 /* p0 */
CINDEX[]
#PUSH, 9 /* c1 */
CINDEX[]
#PUSH, 8 /* gp1 */
CINDEX[]
#PUSH, 110 /* calc offset for interpolation of median */
CALL[]
#PUSH, 4
SLOOP[]
SHPIX[]

/* STACK: &lt;dir&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;cvt0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;gp1&gt; */
/* constrain stroke0 */

#PUSH, 7 /* p0 */
CINDEX[]
#PUSH, 7 /* c0 */
CINDEX[]
#PUSH, 7 /* cvt0 */
MINDEX[]
#PUSH, 109 /* symDist */
CALL[]

/* STACK: &lt;dir&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;gp1&gt; */
/* constrain stroke1 */

#PUSH, 4 /* p1 */
CINDEX[]
#PUSH, 4 /* c1 */
CINDEX[]
#PUSH, 4 /* cvt1 */
MINDEX[]
#PUSH, 109 /* symDist */
CALL[]

/* STACK: &lt;dir&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;gp1&gt; */

#PUSH, 80
CALL[]

/* STACK: &lt;dir&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;gp1&gt;, &lt;som&gt; */
/* determine phase0 for optimal position of stroke0 */

#PUSH, 6 /* p0 */
CINDEX[]
#PUSH, 6 /* c0 */
CINDEX[]
#PUSH, 3 /* som */
CINDEX[]
#PUSH, 113 /* get delta phase for optimal stroke position */
CALL[]

/* STACK: &lt;dir&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;gp1&gt;, &lt;som&gt;, &lt;phase0&gt; */
/* forward to stroke1 position */

#PUSH, 5 /* p1 */
CINDEX[]
#PUSH, 5 /* c1 */
CINDEX[]
#PUSH, 3 /* phase0 */
CINDEX[]
#PUSH, 2
SLOOP[]
SHPIX[]

/* STACK: &lt;dir&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;gp1&gt;, &lt;som&gt;, &lt;phase0&gt; */
/* determine phase1 for optimal position of stroke1 */

DUP[]
#PUSH, 6 /* p1 */
CINDEX[]
#PUSH, 6 /* c1 */
CINDEX[]
#PUSH, 5 /* som */
CINDEX[]
#PUSH, 113 /* get delta phase for optimal stroke position */
CALL[]
ADD[]

/* STACK: &lt;dir&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;gp1&gt;, &lt;som&gt;, &lt;phase0&gt;, &lt;phase1&gt; */
/* undo forwarding to stroke1 position */

#PUSH, 6 /* p1 */
CINDEX[]
#PUSH, 6 /* c1 */
CINDEX[]
#PUSH, 4 /* phase0 */
CINDEX[]
NEG[]
#PUSH, 2
SLOOP[]
SHPIX[]

/* STACK: &lt;dir&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;gp1&gt;, &lt;som&gt;, &lt;phase0&gt;, &lt;phase1&gt; */
/* determine double average phase error */

#PUSH, 2 /* phase0 */
CINDEX[]
#PUSH, 2 /* phase1 */
CINDEX[]
ADD[]

/* STACK: &lt;dir&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;gp1&gt;, &lt;som&gt;, &lt;phase0&gt;, &lt;phase1&gt;, &lt;2*phaseError&gt; */

DUP[]
#PUSH, 64
GTEQ[]
IF[]

    /* STACK: &lt;dir&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;gp1&gt;, &lt;som&gt;, &lt;phase0&gt;, &lt;phase1&gt;, &lt;2*phaseError&gt; */
    /* double average phase error &gt;= 1 pixel, correct to the left */

    POP[]
    #PUSH, 64
    SUB[]
    SWAP[]
    #PUSH, 64
    SUB[]
    SWAP[]

ELSE[]

    /* STACK: &lt;dir&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;gp1&gt;, &lt;som&gt;, &lt;phase0&gt;, &lt;phase1&gt;, &lt;2*phaseError&gt; */

    #PUSH, -64
    LT[]
    IF[]

        /* STACK: &lt;dir&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;gp1&gt;, &lt;som&gt;, &lt;phase0&gt;, &lt;phase1&gt;, &lt;2*phaseError&gt; */
        /* double average phase error &lt; -1 pixel, correct to the right */

        #PUSH, 64
        ADD[]
        SWAP[]
        #PUSH, 64
        ADD[]
        SWAP[]

    EIF[]

EIF[]

/* STACK: &lt;dir&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;gp1&gt;, &lt;som&gt;, &lt;phase0&gt;, &lt;phase1&gt; */
/* apply corrected optimal phase0 to stroke0 */

#PUSH, 8 /* p0 */
CINDEX[]
#PUSH, 8 /* c0 */
CINDEX[]
#PUSH, 4 /* phase0 */
MINDEX[]
#PUSH, 2
SLOOP[]
SHPIX[]

/* STACK: &lt;dir&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;gp1&gt;, &lt;som&gt;, &lt;phase1&gt; */
/* apply corrected optimal phase1 to stroke1 */

#PUSH, 5 /* p1 */
CINDEX[]
#PUSH, 5 /* c1 */
CINDEX[]
ROLL[] /* phase1 */
#PUSH, 2
SLOOP[]
SHPIX[]

/* STACK: &lt;dir&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;gp1&gt;, &lt;som&gt; */

DUP[]
#PUSH, 0
GT[]
IF[]

    /* STACK: &lt;dir&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;gp1&gt;, &lt;som&gt; */
    /* determine total side-bearing space to see if we need to bias the black body */

    #PUSH, 6 /* p0 */
    CINDEX[]
    #PUSH, 8 /* gp0 */
    CINDEX[]
    MD[N]
    #PUSH, 3 /* gp1 */
    CINDEX[]
    #PUSH, 5 /* c1 */
    CINDEX[]
    MD[N]
    ADD[]
    DUP[]
    #PUSH, 64
    GT[]
    IF[]

        /* enough total side-bearing space left, leave it alone */
        POP[]

    ELSE[]

        /* 1 pixel or less total side-bearing space left */
        #PUSH, 0
        GT[]
        IF[]

            /* STACK: &lt;dir&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;gp1&gt;, &lt;som&gt; */
            /* any total side-bearing space left at all, move black-body flush left and start over */

            #PUSH, 6 /* p0 */
            CINDEX[]
            #PUSH, 6 /* c0 */
            CINDEX[]
            #PUSH, 6 /* p1 */
            CINDEX[]
            #PUSH, 6 /* c1 */
            CINDEX[]
            #PUSH, 11 /* gp0 */
            CINDEX[]
            #PUSH, 11 /* p0 */
            CINDEX[]
            MD[N]
            #PUSH, 4
            SLOOP[]
            SHPIX[]

            /* STACK: &lt;dir&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;gp1&gt;, &lt;som&gt; */
            /* optimize position of stroke0 forwarding phase0 to stroke1 */

            #PUSH, 6 /* p0 */
            CINDEX[]
            #PUSH, 6 /* c0 */
            CINDEX[]
            #PUSH, 6 /* p1 */
            CINDEX[]
            #PUSH, 6 /* c1 */
            CINDEX[]
            #PUSH, 10 /* p0 */
            CINDEX[]
            #PUSH, 10 /* c0 */
            CINDEX[]
            #PUSH, 7 /* som */
            CINDEX[]
            #PUSH, 113 /* get delta phase for optimal stroke position */
            CALL[]
            #PUSH, 4 /* apply to both strokes */
            SLOOP[]
            SHPIX[]

            /* STACK: &lt;dir&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;gp1&gt;, &lt;som&gt; */
            /* optimize position of stroke1 */

            #PUSH, 4 /* p1 */
            CINDEX[]
            #PUSH, 4 /* c1 */
            CINDEX[]
            #PUSH, 5 /* c1 */
            CINDEX[]
            #PUSH, 7 /* p1 */
            CINDEX[]
            #PUSH, 5 /* som */
            CINDEX[]
            #PUSH, 113 /* get delta phase for optimal stroke position */
            CALL[]
            #PUSH, 2 /* apply to second stroke only */
            SLOOP[]
            SHPIX[]

        ELSE[]

            /* STACK: &lt;dir&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;gp1&gt;, &lt;som&gt; */
            /* no total side-bearing space left, move stroke1 left by 1 pixel */

            #PUSH, 4 /* p1 */
            CINDEX[]
            #PUSH, 4 /* c1 */
            CINDEX[]
            #PUSH, -64, 2
            SLOOP[]
            SHPIX[]

        EIF[]

    EIF[]

EIF[]

/* STACK: &lt;dir&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;gp1&gt;, &lt;som&gt; */

POP[]
POP[]
POP[]
POP[]
POP[]
POP[]
POP[]
POP[]

#PUSHON
#END
ENDF[]

FDEF[], 118

/* fn to set pv perpendicular to p1 and c0' such that distance
   c0'&lt;---p0 measures cvt or natural distance if cvt = -1.
   used as support to ResX|YDDist and ResX|YDLink

   CALL[], &lt;p1&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;cvt&gt;, 118 */

#BEGIN
#PUSHOFF

/* STACK: &lt;p1&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;cvt&gt; */

#PUSH, 4 /* p1 */
CINDEX[]
#PUSH, 3 /* c0 */
CINDEX[]
SDPVTL[R]
#PUSH, 3 /* p0 */
CINDEX[]
#PUSH, 3 /* c0 */
CINDEX[]
ROLL[] /* cvt */
DUP[]
#PUSH, 0
LT[]
IF[]
    POP[]
    #PUSH, 101 /* resActDist, noCvt, noMinDist */
ELSE[]
    #PUSH, 104 /* resActDist, cvt, minDist */
EIF[]
CALL[]
ABS[]

/* STACK: &lt;p1&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;w&gt; */

#PUSH, 4 /* p1 */
CINDEX[]
#PUSH, 4 /* p0 */
CINDEX[]
SPVTL[r]
#PUSH, 4 /* p1 */
CINDEX[]
#PUSH, 4 /* p0 */
CINDEX[]
MD[N]

/* STACK: &lt;p1&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;w&gt;, &lt;d&gt; */
/* test if solution exists at all */

DUP[]
DUP[]
MUL[]
#PUSH, 3 /* w */
CINDEX[]
DUP[]
MUL[]
LTEQ[]
#PUSH, 0, 3 /* d */
CINDEX[]
EQ[]
OR[]

/* STACK: &lt;p1&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;w&gt;, &lt;d&gt;, &lt;d² &lt;= w² or d = 0?&gt; */

IF[]

    /* STACK: &lt;p1&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;w&gt;, &lt;d&gt; */
    /* solution doesn't exist, hence prepare to bail out */

    POP[]
    POP[]
    SWAP[]
    POP[]
    SPVTL[R]

ELSE[]

    /* STACK: &lt;p1&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;w&gt;, &lt;d&gt; */
    /* solution exists, hence continue computation */

    DUP[]
    MUL[]
    #PUSH, 2 /* w */
    CINDEX[]
    DUP[]
    MUL[]
    SUB[]
    DUP[]

    /* STACK: &lt;p1&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;w&gt;, &lt;d² - w²&gt;, &lt;d² - w²&gt; */

    #PUSH, 83 /* sqrt */
    CALL[]

    /* STACK: &lt;p1&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;w&gt;, &lt;d² - w²&gt;, &lt;sqrt(d² - w²)&gt; */

    ROLL[] /* w */
    MUL[]

    /* STACK: &lt;p1&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;d² - w² =: dx&gt;, &lt;w·sqrt(d² - w²) =: dy&gt; */

    #PUSH, 5 /* p1 */
    CINDEX[]
    #PUSH, 5 /* p0 */
    CINDEX[]
    SDPVTL[R]
    #PUSH, 4 /* p0 */
    CINDEX[]
    #PUSH, 4 /* c0 */
    MINDEX[]
    MD[O]

    #PUSH, 0
    LT[]
    IF[]
        NEG[] /* dy */
    EIF[]

    /* STACK: &lt;p1&gt;, &lt;p0&gt;, &lt;dx&gt;, &lt;dy&gt; */

    #PUSH, 4 /* p1 */
    MINDEX[]
    DUP[]
    SVTCA[X]
    GC[N]
    SWAP[]
    SVTCA[Y]
    GC[N]

    /* STACK: &lt;p0&gt;, &lt;dx&gt;, &lt;dy&gt;, &lt;p1.x&gt;, &lt;p1.y&gt; */

    #PUSH, 5 /* p0 */
    MINDEX[]
    DUP[]
    SVTCA[X]
    GC[N]
    SWAP[]
    SVTCA[Y]
    GC[N]

    /* STACK: &lt;dx&gt;, &lt;dy&gt;, &lt;p1.x&gt;, &lt;p1.y&gt;, &lt;p0.x&gt;, &lt;p0.y&gt; */

    #PUSH, 0 /* enter twilight zone */
    SZPS[]

    SVTCA[Y]
    #PUSH, 0
    SWAP[]
    SCFS[]
    SVTCA[X]
    #PUSH, 0
    SWAP[]
    SCFS[]

    /* STACK: &lt;dx&gt;, &lt;dy&gt;, &lt;p1.x&gt;, &lt;p1.y&gt; */

    SVTCA[Y]
    DUP[]
    #PUSH, 1
    SWAP[]
    SCFS[]
    #PUSH, 2
    SWAP[]
    SCFS[]
    SVTCA[X]
    DUP[]
    #PUSH, 1
    SWAP[]
    SCFS[]
    #PUSH, 2
    SWAP[]
    SCFS[]

    /* STACK: &lt;dx&gt;, &lt;dy&gt; */

    SWAP[]

    /* STACK: &lt;dy&gt;, &lt;dx&gt; */

    #PUSH, 2, 0, 1
    SFVTL[r]
    SWAP[]
    SHPIX[]

    /* STACK: &lt;dy&gt; */

    #PUSH, 2, 0, 1
    SFVTL[R]
    SWAP[]
    SHPIX[]

    /* STACK: */

    #PUSH, 2, 1
    SPVTL[R]

    #PUSH, 1 /* leave twilight zone */
    SZPS[]

EIF[]

#PUSHON
#END
ENDF[]

FDEF[], 119

/* align c with p unless fv is perpendicular to pv
   fv and pv assumed to be set prior to calling fn 119
   used as support to ResX|YDDist and ResX|YDLink

   CALL[], &lt;p&gt;, &lt;c&gt;, 119 */

#BEGIN
#PUSHOFF

/* STACK: &lt;p&gt;, &lt;c&gt; */

SWAP[]
SRP0[]

/* STACK: &lt;c&gt; */

GFV[]
GPV[]

/* STACK: &lt;c&gt;, &lt;fv.x&gt;, &lt;fv.y&gt;, &lt;pv.x&gt;, &lt;pv.y&gt; */

ROLL[]
MUL[]
SWAP[]
ROLL[]
MUL[]
ADD[]
ABS[]

/* STACK: &lt;c&gt;, &lt;|pv.y*fv.y + pv.x*fv.x|&gt; */

#PUSH, 16384, 1024
MUL[]

/* the above dot product multiplies two 2.14 numbers in 26.6 arithmetic yielding a 2.22 number (2^14 * 2^14 / 2^6 = 2^22)
   like the rasterizer, we're comparing this number to 1/16: |fv1·pv| &lt; 1/16 means fv1 is within ±arcsin(1/16) or ±3.5833° perpendicular to pv
   in 2.22 format 1/16 is 2^18, but since the assembler won't allow us to push 2^18 = 262144, we make up this number as a multiplication
   the multiplication, in turn, is again done in 26.6 format, hence we multiply 16384 with 1024 (2^14 * 2^10 / 2^6 = 2^18) */

LT[]
IF[]

    /* fv is approximately perpendicular to pv which by itself is perpendicular
       to a line from p to c' (with c' the twilight point 2 computed in fn 118),
       i.e. fv is approximately parallel to line from p to c'. Given the usage
       of fn 119 this means that fv is approximately coincident with said line,
       or c is approximately aligned already, hence simply touch the point, but
       without involving the pv */

    /* STACK: &lt;c&gt; */

    #PUSH, 0
    SHPIX[]

ELSE[]

    /* STACK: &lt;c&gt; */

    ALIGNRP[]

EIF[]

/* STACK: */

#PUSHON
#END
ENDF[]

FDEF[], 120

/* support to ResX|YDDist and ResX|YDLink where fv0 and fv1 are x or y

   CALL[], &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt0&gt;, &lt;cvt1&gt;, &lt;fv0&gt;, &lt;fv1&gt;, 120 */

#BEGIN
#PUSHOFF

/* STACK: &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt0&gt;, &lt;cvt1&gt;, &lt;fv0&gt;, &lt;fv1&gt; */

#PUSH, 6 /* p1 */
CINDEX[]
#PUSH, 9 /* p0 */
CINDEX[]
#PUSH, 9 /* c0 */
CINDEX[]
#PUSH, 7 /* cvt0 */
MINDEX[]
#PUSH, 118
CALL[]

/* STACK: &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;fv0&gt;, &lt;fv1&gt; */

SWAP[]
#PUSH, 0 /* x? */
EQ[]
IF[]
  SFVTCA[X]
ELSE[]
  SFVTCA[Y]
EIF[]

/* STACK: &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;fv1&gt; */

#PUSH, 4 /* p1 */
CINDEX[]
#PUSH, 6 /* c0 */
MINDEX[]
#PUSH, 119
CALL[]

/* STACK: &lt;p0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;fv1&gt; */

#PUSH, 5 /* p0 */
CINDEX[]
#PUSH, 5 /* p1 */
MINDEX[]
#PUSH, 5 /* c1 */
CINDEX[]
#PUSH, 5 /* cvt1 */
MINDEX[]
#PUSH, 118
CALL[]

/* STACK: &lt;p0&gt;, &lt;c1&gt;, &lt;fv1&gt; */

#PUSH, 0 /* x? */
EQ[]
IF[]
  SFVTCA[X]
ELSE[]
  SFVTCA[Y]
EIF[]

/* STACK: &lt;p0&gt;, &lt;c1&gt; */

#PUSH, 119
CALL[]

/* STACK: */

#PUSHON
#END
ENDF[]

FDEF[], 121

/* support to ResX|YDDist and ResX|YDLink where fv0 is x or y while fv1 is to-line

   CALL[], &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt0&gt;, &lt;cvt1&gt;, &lt;fv0&gt;, &lt;fv1.p0&gt;, &lt;fv1.p1&gt;, 121 */

#BEGIN
#PUSHOFF

/* STACK: &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt0&gt;, &lt;cvt1&gt;, &lt;fv0&gt;, &lt;fv1.p0&gt;, &lt;fv1.p1&gt; */

#PUSH, 7 /* p1 */
CINDEX[]
#PUSH, 10 /* p0 */
CINDEX[]
#PUSH, 10 /* c0 */
CINDEX[]
#PUSH, 8 /* cvt0 */
MINDEX[]
#PUSH, 118
CALL[]

/* STACK: &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;fv0&gt;, &lt;fv1.p0&gt;, &lt;fv1.p1&gt; */

ROLL[]
#PUSH, 0 /* x? */
EQ[]
IF[]
  SFVTCA[X]
ELSE[]
  SFVTCA[Y]
EIF[]

/* STACK: &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;fv1.p0&gt;, &lt;fv1.p1&gt; */

#PUSH, 5 /* p1 */
CINDEX[]
#PUSH, 7 /* c0 */
MINDEX[]
#PUSH, 119
CALL[]

/* STACK: &lt;p0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;fv1.p0&gt;, &lt;fv1.p1&gt; */

#PUSH, 6 /* p0 */
CINDEX[]
#PUSH, 6 /* p1 */
MINDEX[]
#PUSH, 6 /* c1 */
CINDEX[]
#PUSH, 6 /* cvt1 */
MINDEX[]
#PUSH, 118
CALL[]

/* STACK: &lt;p0&gt;, &lt;c1&gt;, &lt;fv1.p0&gt;, &lt;fv1.p1&gt; */

SFVTL[r]

/* STACK: &lt;p0&gt;, &lt;c1&gt; */

#PUSH, 119
CALL[]

/* STACK: */

#PUSHON
#END
ENDF[]

FDEF[], 122

/* support to ResX|YDDist and ResX|YDLink where fv0 is to-line while fv1 is x or y

   CALL[], &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt0&gt;, &lt;cvt1&gt;, &lt;fv0.p0&gt;, &lt;fv0.p1&gt;, &lt;fv1&gt;, 122 */

#BEGIN
#PUSHOFF

/* STACK: &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt0&gt;, &lt;cvt1&gt;, &lt;fv0.p0&gt;, &lt;fv0.p1&gt;, &lt;fv1&gt; */

#PUSH, 7 /* p1 */
CINDEX[]
#PUSH, 10 /* p0 */
CINDEX[]
#PUSH, 10 /* c0 */
CINDEX[]
#PUSH, 8 /* cvt0 */
MINDEX[]
#PUSH, 118
CALL[]

/* STACK: &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;fv0.p0&gt;, &lt;fv0.p1&gt;, &lt;fv1&gt; */

ROLL[]
ROLL[]
SFVTL[r]

/* STACK: &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;fv1&gt; */

#PUSH, 4 /* p1 */
CINDEX[]
#PUSH, 6 /* c0 */
MINDEX[]
#PUSH, 119
CALL[]

/* STACK: &lt;p0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;fv1&gt; */

#PUSH, 5 /* p0 */
CINDEX[]
#PUSH, 5 /* p1 */
MINDEX[]
#PUSH, 5 /* c1 */
CINDEX[]
#PUSH, 5 /* cvt1 */
MINDEX[]
#PUSH, 118
CALL[]

/* STACK: &lt;p0&gt;, &lt;c1&gt;, &lt;fv1&gt; */

#PUSH, 0 /* x? */
EQ[]
IF[]
  SFVTCA[X]
ELSE[]
  SFVTCA[Y]
EIF[]

/* STACK: &lt;p0&gt;, &lt;c1&gt; */

#PUSH, 119
CALL[]

/* STACK: */

#PUSHON
#END
ENDF[]

FDEF[], 123

/* support to ResX|YDDist and ResX|YDLink where both fv0 and fv1 are to-line

   CALL[], &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt0&gt;, &lt;cvt1&gt;, &lt;fv0.p0&gt;, &lt;fv0.p1&gt;, &lt;fv1.p0&gt;, &lt;fv1.p1&gt;, 123 */

#BEGIN
#PUSHOFF

/* STACK: &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt0&gt;, &lt;cvt1&gt;, &lt;fv0.p0&gt;, &lt;fv0.p1&gt;, &lt;fv1.p0&gt;, &lt;fv1.p1&gt; */

#PUSH, 8 /* p1 */
CINDEX[]
#PUSH, 11 /* p0 */
CINDEX[]
#PUSH, 11 /* c0 */
CINDEX[]
#PUSH, 9 /* cvt0 */
MINDEX[]
#PUSH, 118
CALL[]

/* STACK: &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;fv0.p0&gt;, &lt;fv0.p1&gt;, &lt;fv1.p0&gt;, &lt;fv1.p1&gt; */

#PUSH, 4 /* fv0.p0 */
MINDEX[]
#PUSH, 4 /* fv0.p1 */
MINDEX[]
SFVTL[r]

/* STACK: &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;fv1.p0&gt;, &lt;fv1.p1&gt; */

#PUSH, 5 /* p1 */
CINDEX[]
#PUSH, 7 /* c0 */
MINDEX[]
#PUSH, 119
CALL[]

/* STACK: &lt;p0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;fv1.p0&gt;, &lt;fv1.p1&gt; */

#PUSH, 6 /* p0 */
CINDEX[]
#PUSH, 6 /* p1 */
MINDEX[]
#PUSH, 6 /* c1 */
CINDEX[]
#PUSH, 6 /* cvt1 */
MINDEX[]
#PUSH, 118
CALL[]

/* STACK: &lt;p0&gt;, &lt;c1&gt;, &lt;fv1.p0&gt;, &lt;fv1.p1&gt; */

SFVTL[r]

/* STACK: &lt;p0&gt;, &lt;c1&gt; */

#PUSH, 119
CALL[]

/* STACK: */

#PUSHON
#END
ENDF[]

FDEF[], 124

/* determine on which side of edge p0-&gt;p1 is c
   by calculating vector product (c - p0) ^ (p1 - p0)

   CALL[], &lt;p0&gt;, &lt;c&gt;, &lt;p1&gt;, 124

   returns with vector product on stack
   if vector product &lt; 0 then c is on the left of p0-&gt;p1
   if vector product &gt; 0 then c is on the right of p0-&gt;p1
   else c is exactly on p0-&gt;p1 */

#BEGIN
#PUSHOFF

/* STACK: &lt;p0&gt;, &lt;c&gt;, &lt;p1&gt; */

SPVTCA[X]
#PUSH, 3 /* p0 */
CINDEX[]
#PUSH, 3 /* c */
CINDEX[]
MD[O]
#PUSH, 4 /* p0 */
CINDEX[]
#PUSH, 3 /* p1 */
CINDEX[]
MD[O]

/* STACK: &lt;p0&gt;, &lt;c&gt;, &lt;p1&gt;, &lt;a.x&gt;, &lt;b.x&gt; */

SPVTCA[Y]
#PUSH, 5 /* p0 */
CINDEX[]
#PUSH, 5 /* c */
MINDEX[]
MD[O]
#PUSH, 5 /* p0 */
MINDEX[]
#PUSH, 5 /* p1 */
MINDEX[]
MD[O]

/* STACK: &lt;a.x&gt;, &lt;b.x&gt;, &lt;a.y&gt;, &lt;b.y&gt; */

#PUSH, 4 /* a.x */
MINDEX[]
MUL[]

ROLL[] /* b.x */
ROLL[] /* a.y */
MUL[]

SUB[]

/* STACK: &lt;b.y*a.x - b.x*a.y&gt; */

#PUSHON
#END
ENDF[]

FDEF[], 125

/* fn interpolates a pair of diagonal links between grand-parents gp0 and gp1 along pv
   pv: X = 0, Y = 1, X/ = 2; fv0 and fv1: x and y components in 2.14

   CALL[], &lt;pv&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;cvt0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;gp1&gt;, &lt;fv0.x&gt;, &lt;fv0.y&gt;, &lt;fv1.x&gt;, fv1.y&gt;, 125 */

#BEGIN
#PUSHOFF

/* interpolate parents between grand-parents along pv */
/* STACK: &lt;pv&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;cvt0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;gp1&gt;, &lt;fv0.x&gt;, &lt;fv0.y&gt;, &lt;fv1.x&gt;, fv1.y&gt; */

#PUSH, 93, 14 /* pv */
CINDEX[]
ADD[]
CALL[]

#PUSH, 12 /* gp0 */
MINDEX[]
SRP1[]
#PUSH, 5 /* gp1 */
MINDEX[]
SRP2[]

#PUSH, 10 /* p0 */
CINDEX[]
IP[]
#PUSH, 7 /* p1 */
CINDEX[]
IP[]

/* determine if this is a crisscrossed stroke */
/* STACK: &lt;pv&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;cvt0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;fv0.x&gt;, &lt;fv0.y&gt;, &lt;fv1.x&gt;, fv1.y&gt; */

#PUSH, 10 /* p0 */
CINDEX[]
#PUSH, 10 /* c0 */
CINDEX[]
#PUSH, 9 /* p1 */
CINDEX[]
#PUSH, 124 /* c0 on which side of edge p0-&gt;p1? */
CALL[]
#PUSH, 0
LT[]

#PUSH, 11 /* p0 */
CINDEX[]
#PUSH, 8 /* c1 */
CINDEX[]
#PUSH, 10 /* p1 */
CINDEX[]
#PUSH, 124 /* c1 on which side of edge p0-&gt;p1? */
CALL[]
#PUSH, 0
LT[]

EQ[]
IF[]

    /* both childern on same side of parent edge p0&gt;-&gt;p1
       hence re-align children with parents perp to dpv. */
    /* STACK: &lt;pv&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;cvt0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;fv0.x&gt;, &lt;fv0.y&gt;, &lt;fv1.x&gt;, fv1.y&gt; */

    #PUSH, 7 /* p1 */
    CINDEX[]
    #PUSH, 11 /* p0 */
    CINDEX[]
    SDPVTL[R]

    #PUSH, 4 /* fv0.x */
    CINDEX[]
    #PUSH, 4 /* fv0.y */
    CINDEX[]
    SFVFS[]

    #PUSH, 10 /* p0 */
    CINDEX[]
    SRP0[]
    #PUSH, 9 /* c0 */
    CINDEX[]
    MDRP[m&lt;rBl]

    #PUSH, 2 /* fv1.x */
    CINDEX[]
    #PUSH, 2 /* fv1.y */
    CINDEX[]
    SFVFS[]

    #PUSH, 7 /* p1 */
    CINDEX[]
    SRP0[]
    #PUSH, 6 /* c1 */
    CINDEX[]
    MDRP[m&lt;rBl]

ELSE[]

    /* childern on opposite sides of "parent edge" p0&gt;-&gt;p1
       hence re-align children with parents per method for crisscrossed strokes */
    /* STACK: &lt;pv&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;cvt0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;fv0.x&gt;, &lt;fv0.y&gt;, &lt;fv1.x&gt;, fv1.y&gt; */

    #PUSH, 7 /* p1 */
    CINDEX[]
    #PUSH, 11 /* p0 */
    CINDEX[]
    #PUSH, 11 /* c0 */
    CINDEX[]
    #PUSH, -1, 118 /* no cvt0, no minDist */
    CALL[]

    /* STACK: &lt;pv&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;cvt0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;fv0.x&gt;, &lt;fv0.y&gt;, &lt;fv1.x&gt;, fv1.y&gt; */

    #PUSH, 4 /* fv0.x */
    CINDEX[]
    #PUSH, 4 /* fv0.y */
    CINDEX[]
    SFVFS[]

    /* STACK: &lt;pv&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;cvt0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;fv0.x&gt;, &lt;fv0.y&gt;, &lt;fv1.x&gt;, fv1.y&gt; */

    #PUSH, 7 /* p1 */
    CINDEX[]
    #PUSH, 10 /* c0 */
    CINDEX[]
    #PUSH, 119
    CALL[]

    /* STACK: &lt;pv&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;cvt0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;fv0.x&gt;, &lt;fv0.y&gt;, &lt;fv1.x&gt;, fv1.y&gt; */

    #PUSH, 10 /* p0 */
    CINDEX[]
    #PUSH, 8 /* p1 */
    CINDEX[]
    #PUSH, 8 /* c1 */
    CINDEX[]
    #PUSH, -1, 118 /* no cvt1, no minDist */
    CALL[]

    /* STACK: &lt;pv&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;cvt0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;fv0.x&gt;, &lt;fv0.y&gt;, &lt;fv1.x&gt;, fv1.y&gt; */

    #PUSH, 2 /* fv1.x */
    CINDEX[]
    #PUSH, 2 /* fv1.y */
    CINDEX[]
    SFVFS[]

    /* STACK: &lt;p0&gt;, &lt;c1&gt; */

    #PUSH, 10 /* p0 */
    CINDEX[]
    #PUSH, 7 /* c1 */
    CINDEX[]
    #PUSH, 119
    CALL[]

EIF[]

/* determine pre-link medians, measuring perpendicularly to p0-&gt;p1 */
/* STACK: &lt;pv&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;cvt0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;fv0.x&gt;, &lt;fv0.y&gt;, &lt;fv1.x&gt;, fv1.y&gt; */

#PUSH, 10 /* p0 */
CINDEX[]
GC[N]
#PUSH, 10 /* c0 */
CINDEX[]
GC[N]
ADD[]

#PUSH, 8 /* p1 */
CINDEX[]
GC[N]
#PUSH, 8 /* c1 */
CINDEX[]
GC[N]
ADD[]

/* links */
/* STACK: &lt;pv&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;cvt0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;fv0.x&gt;, &lt;fv0.y&gt;, &lt;fv1.x&gt;, fv1.y&gt;, &lt;median0&gt;, &lt;median1&gt; */

#PUSH, 6 /* fv0.x */
CINDEX[]
#PUSH, 6 /* fv0.y */
CINDEX[]
SFVFS[]

#PUSH, 12 /* p0 */
CINDEX[]
#PUSH, 12 /* c0 */
CINDEX[]
#PUSH, 12 /* cvt0 */
MINDEX[]
DUP[]
#PUSH, 0
LT[]
IF[]
    POP[]
    #PUSH, 106 /* resMIRP, noCvt, minDist */
ELSE[]
    #PUSH, 108 /* resMIRP, cvt, minDist */
EIF[]
CALL[]

/* STACK: &lt;pv&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;fv0.x&gt;, &lt;fv0.y&gt;, &lt;fv1.x&gt;, fv1.y&gt;, &lt;median0&gt;, &lt;median1&gt; */

#PUSH, 4 /* fv1.x */
CINDEX[]
#PUSH, 4 /* fv1.y */
CINDEX[]
SFVFS[]

#PUSH, 9 /* p1 */
CINDEX[]
#PUSH, 9 /* c1 */
CINDEX[]
#PUSH, 9 /* cvt1 */
MINDEX[]
DUP[]
#PUSH, 0
LT[]
IF[]
    POP[]
    #PUSH, 106 /* resMIRP, noCvt, minDist */
ELSE[]
    #PUSH, 108 /* resMIRP, cvt, minDist */
EIF[]
CALL[]

/* subtract post-link medians from pre-link ones */
/* STACK: &lt;pv&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;fv0.x&gt;, &lt;fv0.y&gt;, &lt;fv1.x&gt;, fv1.y&gt;, &lt;median0&gt;, &lt;median1&gt; */

SWAP[]

#PUSH, 10 /* p0 */
CINDEX[]
GC[N]
#PUSH, 10 /* c0 */
CINDEX[]
GC[N]
ADD[]

SUB[]
#PUSH, 32
MUL[]

SWAP[]

#PUSH, 8 /* p1 */
CINDEX[]
GC[N]
#PUSH, 8 /* c1 */
CINDEX[]
GC[N]
ADD[]

SUB[]
#PUSH, 32
MUL[]

/* finally move points by respective deltas */
/* STACK: &lt;pv&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;fv0.x&gt;, &lt;fv0.y&gt;, &lt;fv1.x&gt;, fv1.y&gt;, &lt;delta0&gt;, &lt;delta1&gt; */

#PUSH, 1, 12 /* pv */
CINDEX[]
EQ[]
IF[]
    SFVTCA[Y]
ELSE[]
    SFVTCA[X]
EIF[]

#PUSH, 10 /* p0 */
MINDEX[]
DUP[]
SRP0[]
#PUSH, 3 /* delta0 */
CINDEX[]
MSIRP[m]

#PUSH, 6 /* fv0.x */
MINDEX[]
#PUSH, 6 /* fv0.y */
MINDEX[]
SFVFS[]

#PUSH, 7 /* c0 */
MINDEX[]
DUP[]
SRP0[]
ROLL[] /* delta0 */
MSIRP[m]

/* STACK: &lt;pv&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;fv1.x&gt;, fv1.y&gt;, &lt;delta1&gt; */

#PUSH, 1, 7 /* pv */
MINDEX[]
EQ[]
IF[]
    SFVTCA[Y]
ELSE[]
    SFVTCA[X]
EIF[]

#PUSH, 5 /* p1 */
MINDEX[]
DUP[]
SRP0[]
#PUSH, 2 /* delta1 */
CINDEX[]
MSIRP[m]

ROLL[] /* fv0.x */
ROLL[] /* fv0.y */
SFVFS[]

SWAP[] /* c1 */
DUP[]
SRP0[]
SWAP[] /* delta1 */
MSIRP[m]

/* STACK: */

#PUSHON
#END
ENDF[]

FDEF[], 126

/* glue code to fn 125 where both fv0 and fv1 are x or y

   CALL[], &lt;pv&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;cvt0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;gp1&gt;, &lt;fv0&gt;, &lt;fv1&gt;, 126 */

#BEGIN
#PUSHOFF

/* STACK: &lt;pv&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;cvt0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;gp1&gt;, &lt;fv0&gt;, &lt;fv1&gt; */

SWAP[] /* fv0 */
#PUSH, 1
EQ[]
IF[]
    #PUSH, 0, 16384
ELSE[]
    #PUSH, 16384, 0
EIF[]

ROLL[] /* fv1 */
#PUSH, 1
EQ[]
IF[]
    #PUSH, 0, 16384
ELSE[]
    #PUSH, 16384, 0
EIF[]

#PUSH, 125 /* resIPDDLink */
CALL[]

#PUSHON
#END
ENDF[]

FDEF[], 127

/* glue code to fn 125 where fv0 is to line and fv1 is x or y

   CALL[], &lt;pv&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;cvt0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;gp1&gt;, &lt;fv0.0&gt;, &lt;fv0.1&gt;, &lt;fv1&gt;, 127 */

#BEGIN
#PUSHOFF

/* STACK: &lt;pv&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;cvt0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;gp1&gt;, &lt;fv0.0&gt;, &lt;fv0.1&gt;, &lt;fv1&gt; */

ROLL[] /* fv0.0 */
ROLL[] /* fv0.1 */
SFVTL[r]
GFV[]

ROLL[] /* fv1 */
#PUSH, 1
EQ[]
IF[]
    #PUSH, 0, 16384
ELSE[]
    #PUSH, 16384, 0
EIF[]

#PUSH, 125 /* resIPDDLink */
CALL[]

#PUSHON
#END
ENDF[]

FDEF[], 128

/* glue code to fn 125 where fv0 is x or y and fv1 is to line

   CALL[], &lt;pv&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;cvt0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;gp1&gt;, &lt;fv0&gt;, &lt;fv1.0&gt;, &lt;fv1.1&gt;, 128 */

#BEGIN
#PUSHOFF

/* STACK: &lt;pv&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;cvt0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;gp1&gt;, &lt;fv0&gt;, &lt;fv1.0&gt;, &lt;fv1.1&gt; */

SFVTL[r]

#PUSH, 1
EQ[]
IF[]
    #PUSH, 0, 16384
ELSE[]
    #PUSH, 16384, 0
EIF[]

GFV[]

#PUSH, 125 /* resIPDDLink */
CALL[]

#PUSHON
#END
ENDF[]

FDEF[], 129

/* glue code to fn 125 where both fv0 and fv1 are to line

   CALL[], &lt;pv&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;cvt0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;gp1&gt;, &lt;fv0.0&gt;, &lt;fv0.1&gt;, &lt;fv1.0&gt;, &lt;fv1.1&gt;, 129 */

#BEGIN
#PUSHOFF

/* STACK: &lt;pv&gt;, &lt;gp0&gt;, &lt;p0&gt;, &lt;c0&gt;, &lt;cvt0&gt;, &lt;p1&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;gp1&gt;, &lt;fv0.0&gt;, &lt;fv0.1&gt;, &lt;fv1.0&gt;, &lt;fv1.1&gt; */

#PUSH, 4 /* fv0.0 */
MINDEX[]
#PUSH, 4 /* fv0.1 */
MINDEX[]
SFVTL[r]
GFV[]
#PUSH, 4 /* fv1.0 */
MINDEX[]
#PUSH, 4 /* fv1.1 */
MINDEX[]
SFVTL[r]
GFV[]
#PUSH, 125 /* resIPDDLink */
CALL[]

#PUSHON
#END
ENDF[]

FDEF[], 130

/* extrapolate x-coordinate of &lt;p&gt; to base line along italic angle
   returns with extrapolated x-coordinate on stack

   CALL[], &lt;p&gt;, 130 */

#BEGIN
#PUSHOFF

DUP[]
SVTCA[X]
GC[N]
SWAP[]
SVTCA[Y]
GC[N]

/* STACK: &lt;p.x&gt;, &lt;p.y&gt; */

#PUSH, 10 /* rise */
RS[]
#PUSH, 11 /* run */
RS[]

/* STACK: &lt;p.x&gt;, &lt;p.y&gt;, &lt;rise&gt;, &lt;run&gt; */

ROLL[]
MUL[]
SWAP[]
DIV[]
SUB[]

/* STACK: &lt;p.x - p.y*run/rise&gt; */

#PUSHON
#END
ENDF[]

FDEF[], 131

/* constrains an italic stroke, defined by parents &lt;p0&gt; and &lt;p1&gt;, by
   children &lt;c0&gt; and &lt;c1&gt;, and by cvts &lt;cvt0&gt; and &lt;cvt1&gt;, and inter-
   polates it between points &lt;lsb&gt; and &lt;rsb&gt;

   for b&amp;w stroke additionally optimizes the resulting pixel pattern

   CALL[], &lt;lsb&gt;, &lt;rsb&gt;, &lt;p0&gt;, &lt;p1&gt;, &lt;c0&gt;, &lt;c1&gt;, &lt;cvt0&gt;, &lt;cvt1&gt;, 131 */

#BEGIN
#PUSHOFF

/* STACK: &lt;lsb&gt;, &lt;rsb&gt;, &lt;p0&gt;, &lt;p1&gt;, &lt;c0&gt;, &lt;c1&gt;, &lt;cvt0&gt;, &lt;cvt1&gt; */

#PUSH, 9 /* pv perp italic, fv X */
CALL[]

/* lock parent edge */

#PUSH, 6 /* p0 */
CINDEX[]
MDAP[r]

#PUSH, 5 /* p1 */
CINDEX[]
RDTG[]
MDRP[m&lt;RBl]

/* link child edge */

#PUSH, 6 /* p0 */
CINDEX[]
#PUSH, 5 /* c0 */
CINDEX[]
#PUSH, 4 /* cvt0 */
CINDEX[]
DUP[]
#PUSH, 0
LT[]
IF[]
    POP[]
    #PUSH, 106 /* resMIRP, noCvt, minDist */
ELSE[]
    #PUSH, 108 /* resMIRP, cvt, minDist */
EIF[]
CALL[]

#PUSH, 5 /* p1 */
CINDEX[]
#PUSH, 4 /* c1 */
CINDEX[]
#PUSH, 3 /* cvt1 */
CINDEX[]
DUP[]
#PUSH, 0
LT[]
IF[]
    POP[]
    #PUSH, 106 /* resMIRP, noCvt, minDist */
ELSE[]
    #PUSH, 108 /* resMIRP, cvt, minDist */
EIF[]
CALL[]

RTG[]

/* STACK: &lt;lsb&gt;, &lt;rsb&gt;, &lt;p0&gt;, &lt;p1&gt;, &lt;c0&gt;, &lt;c1&gt;, &lt;cvt0&gt;, &lt;cvt1&gt; */
/* interpolate median of p0 and c0 between lsb and rsb */

#PUSH, 8 /* lsb */
CINDEX[]
#PUSH, 7 /* p0 */
CINDEX[]
#PUSH, 6 /* c0 */
CINDEX[]
#PUSH, 10 /* rsb */
CINDEX[]
#PUSH, 111 /* interpolate median */
CALL[]

/* STACK: &lt;lsb&gt;, &lt;rsb&gt;, &lt;p0&gt;, &lt;p1&gt;, &lt;c0&gt;, &lt;c1&gt;, &lt;cvt0&gt;, &lt;cvt1&gt; */
/* if the two actual parent-&gt;child distances round to the same stroke weight */

#PUSH, 6 /* p0 */
CINDEX[]
#PUSH, 5 /* c0 */
CINDEX[]
#PUSH, 4 /* cvt0 */
MINDEX[]
DUP[]
#PUSH, 0
LT[]
IF[]
    POP[]
    #PUSH, 102 /* resActDist, noCvt, minDist */
ELSE[]
    #PUSH, 104 /* resActDist, cvt, minDist */
EIF[]
CALL[]

/* STACK: &lt;lsb&gt;, &lt;rsb&gt;, &lt;p0&gt;, &lt;p1&gt;, &lt;c0&gt;, &lt;c1&gt;, &lt;cvt1&gt;, &lt;[dist0]&gt; */

#PUSH, 5 /* p1 */
CINDEX[]
#PUSH, 4 /* c1 */
CINDEX[]
#PUSH, 4 /* cvt1 */
MINDEX[]
DUP[]
#PUSH, 0
LT[]
IF[]
    POP[]
    #PUSH, 102 /* resActDist, noCvt, minDist */
ELSE[]
    #PUSH, 104 /* resActDist, cvt, minDist */
EIF[]
CALL[]

/* STACK: &lt;lsb&gt;, &lt;rsb&gt;, &lt;p0&gt;, &lt;p1&gt;, &lt;c0&gt;, &lt;c1&gt;, &lt;[dist0]&gt;, &lt;[dist1]&gt; */

EQ[]
IF[]

    /* STACK: &lt;lsb&gt;, &lt;rsb&gt;, &lt;p0&gt;, &lt;p1&gt;, &lt;c0&gt;, &lt;c1&gt; */
    /* adjust median of p1 and c1 in parallel */

    RDTG[]
    #PUSH, 4 /* p0 */
    CINDEX[]
    SRP0[]
    #PUSH, 3 /* p1 */
    CINDEX[]
    MDRP[m&lt;RBl]

    #PUSH, 2 /* c0 */
    CINDEX[]
    SRP0[]
    #PUSH, 1 /* c1 */
    CINDEX[]
    MDRP[m&lt;RBl]

    #PUSH, 5 /* rsb */
    MINDEX[]
    POP[]
    #PUSH, 5 /* lsb */
    MINDEX[]
    POP[]

    /* STACK: &lt;p0&gt;, &lt;p1&gt;, &lt;c0&gt;, &lt;c1&gt; */

ELSE[]

    /* STACK: &lt;lsb&gt;, &lt;rsb&gt;, &lt;p0&gt;, &lt;p1&gt;, &lt;c0&gt;, &lt;c1&gt; */
    /* interpolate median of p1 and c1 between lsb and rsb independently */

    #PUSH, 6 /* lsb */
    MINDEX[]
    #PUSH, 4 /* p1 */
    CINDEX[]
    #PUSH, 3 /* c1 */
    CINDEX[]
    #PUSH, 8 /* rsb */
    MINDEX[]
    #PUSH, 111 /* interpolate median */
    CALL[]

    /* STACK: &lt;p0&gt;, &lt;p1&gt;, &lt;c0&gt;, &lt;c1&gt; */

EIF[]

/* STACK: &lt;p0&gt;, &lt;p1&gt;, &lt;c0&gt;, &lt;c1&gt; */
/* for b&amp;w only optimize pixel pattern */

#PUSH, 0, 2
RS[]
EQ[]
IF[]

    /* STACK: &lt;p0&gt;, &lt;p1&gt;, &lt;c0&gt;, &lt;c1&gt; */
    /* extrapolate c0 to base line */

    RDTG[]
    #PUSH, 2 /* c0 */
    CINDEX[]
    #PUSH, 130
    CALL[]

    /* extrapolate p0 to base line */

    #PUSH, 5 /* p0 */
    CINDEX[]
    #PUSH, 130
    CALL[]

    /* get parentPhase from extrapolated x-coordinate */

    DUP[]
    DUP[]
    ROUND[Bl]
    SUB[]

    #PUSH, 4 /* targetPhase */
    RS[]

    /* STACK: &lt;p0&gt;, &lt;p1&gt;, &lt;c0&gt;, &lt;c1&gt;, &lt;c0.x'&gt;, &lt;p0.x'&gt;, &lt;parentPhase&gt;, &lt;targetPhase&gt; */
    /* shifting parent edge by deltaPhase optimizes stepping pattern on parent edge */

    SVTCA[X]
    SWAP[]
    SUB[]

    /* STACK: &lt;p0&gt;, &lt;p1&gt;, &lt;c0&gt;, &lt;c1&gt;, &lt;c0.x'&gt;, &lt;p0.x'&gt;, &lt;deltaPhase&gt; */
    /* minimize the positioning error by mapping deltaPhase from [-63,63] to [-32,31] */

    #PUSH, 96
    ADD[]
    DUP[]
    ROUND[Bl]
    SUB[]
    #PUSH, 32
    SUB[]

    /* STACK: &lt;p0&gt;, &lt;p1&gt;, &lt;c0&gt;, &lt;c1&gt;, &lt;c0.x'&gt;, &lt;p0.x'&gt;, &lt;deltaPhase&gt; */
    /* save minimized deltaPhase for child edge and shift parent edge */

    DUP[]
    #PUSH, 8 /* p0 */
    MINDEX[]
    #PUSH, 8 /* p1 */
    MINDEX[]
    ROLL[]
    #PUSH, 2
    SLOOP[]
    SHPIX[]

    /* STACK: &lt;c0&gt;, &lt;c1&gt;, &lt;c0.x'&gt;, &lt;p0.x'&gt;, &lt;deltaPhase&gt; */
    /* since child edge is linked perpendicular to italic angle,
       the resulting stroke would include unnecessary pixels,
       hence determine phase of distance between extrapolated
       x-coordinates (deltaDeltaPhase) */

    ROLL[]
    ROLL[]
    SUB[]
    DUP[]
    ROUND[Bl]
    SUB[]

    /* STACK: &lt;c0&gt;, &lt;c1&gt;, &lt;deltaPhase&gt;, &lt;deltaDeltaPhase&gt; */
    /* subtract from deltaPhase (don't shift quite as far...) */

    SUB[]

    /* STACK: &lt;c0&gt;, &lt;c1&gt;, &lt;deltaPhase'&gt; */
    /* shift parent edge */

    #PUSH, 2
    SLOOP[]
    SHPIX[]

    /* STACK: */

ELSE[]

    /* STACK: &lt;p0&gt;, &lt;p1&gt;, &lt;c0&gt;, &lt;c1&gt; */

    POP[]
    POP[]
    POP[]
    POP[]

    /* STACK: */

EIF[]

RTG[]

#PUSHON
#END
ENDF[]

FDEF[], 132

/* for monochrome only: stack points &lt;p&gt; through &lt;c&gt; on top of &lt;p&gt; below &lt;ppem&gt;

   CALL[], &lt;p&gt;, &lt;c&gt;, &lt;ppem&gt;, 132 */

#BEGIN
#PUSHOFF

/* STACK: &lt;p&gt;, &lt;c&gt;, &lt;ppem&gt; */

MPPEM[]
GT[]
#PUSH, 1, 2
RS[]
GTEQ[]
AND[]
IF[]

    /* STACK: &lt;p&gt;, &lt;c&gt; */

    SWAP[]
    SRP0[]
    DUP[]
    SVTCA[X]
    ALIGNRP[]
    SVTCA[Y]
    ALIGNRP[]

ELSE[]

    /* STACK: &lt;p&gt;, &lt;c&gt; */

    POP[]
    POP[]
EIF[]

#PUSHON
#END
ENDF[]

FDEF[], 133

/* support fn for fns 134 and 135

   CALL[], &lt;align?&gt;, &lt;from&gt;, &lt;to&gt;, 133 */

#BEGIN
#PUSHOFF

SWAP[]

/* STACK: &lt;align?&gt;, &lt;to&gt;, &lt;from&gt; */

#WBeginLoop133:

#PUSH, 2 /* to */
CINDEX[]
#PUSH, 2 /* from */
CINDEX[]
GTEQ[]
IF[]

    /* STACK: &lt;align?&gt;, &lt;to&gt;, &lt;from&gt; */

    DUP[]
    #PUSH, 4 /* align? */
    CINDEX[]
    IF[]
        ALIGNRP[]
    ELSE[]
        IP[]
    EIF[]

    #PUSH, 1
    ADD[]

    #PUSH, WOffset133
    JMPR[], (WOffset133=#WBeginLoop133)

EIF[]

/* STACK: &lt;align?&gt;, &lt;to&gt;, &lt;from&gt; */

POP[]
POP[]
POP[]

#PUSHON
#END
ENDF[]

FDEF[], 134

/* support fn for italic IUP[?]
   assume pv and fv are set externally

   CALL[], &lt;p0&gt;, &lt;p1&gt;, 134 */

#BEGIN
#PUSHOFF

/* STACK: &lt;p0&gt;, &lt;p1&gt; */

#PUSH, 2 /* p0 */
CINDEX[]
GC[O]
#PUSH, 2 /* p1 */
CINDEX[]
GC[O]
EQ[]

/* STACK: &lt;p0&gt;, &lt;p1&gt;, &lt;eq?&gt; */

ROLL[] /* p0 */
DUP[]
DUP[]
SRP0[]
SRP1[]
#PUSH, 1
ADD[]
ROLL[] /* p1 */
DUP[]
SRP2[]
#PUSH, 1
SUB[]

/* STACK: &lt;eq?&gt;, &lt;from&gt;, &lt;to&gt; */

#PUSH, 133
CALL[]

#PUSHON
#END
ENDF[]

FDEF[], 135

/* support fn for italic IUP[?]
   assume pv and fv are set externally

   CALL[], &lt;p0&gt;, &lt;end&gt;, &lt;start&gt;, &lt;p1&gt;, 135 */

#BEGIN
#PUSHOFF

/* STACK: &lt;p0&gt;, &lt;end&gt;, &lt;start&gt;, &lt;p1&gt; */

#PUSH, 4 /* p0 */
CINDEX[]
GC[O]
#PUSH, 2 /* p1 */
CINDEX[]
GC[O]
EQ[]

/* STACK: &lt;p0&gt;, &lt;end&gt;, &lt;start&gt;, &lt;p1&gt;, &lt;eq?&gt; */

SWAP[]
DUP[]
SRP2[]
#PUSH, 1
SUB[]
SWAP[]
DUP[]

#PUSH, 6 /* p0 */
MINDEX[]
DUP[]
DUP[]
SRP0[]
SRP1[]
#PUSH, 1
ADD[]
#PUSH, 6 /* end */
MINDEX[]

/* STACK: &lt;start&gt;, &lt;to&gt;, &lt;eq?&gt;, &lt;eq?&gt;, &lt;from&gt;, &lt;end&gt; */

#PUSH, 133
CALL[]

ROLL[]
ROLL[]
#PUSH, 133
CALL[]

#PUSHON
#END
ENDF[]

FDEF[], 150
/* Function 150 takes 5 arguments */
/* VERSION 1.0 20120420 */

/* This function moves a point between a PPEM range */
/* for the given rasterizer mode (in Store 2) ClearType */
/* CALL[],&lt;point&gt;,&lt;amount&gt;,&lt;low PPEM&gt;,&lt;high PPEM&gt;, &lt;rasterizer mode&gt;, 150 */
/* &lt;low ppem&gt; Lowest PPEM range to be modified (inclusive) */
/* &lt;high ppem&gt; Highest PPEM range to be modified (inclusive) */
/* &lt;Point&gt; point to be modified */
/* &lt;amount&gt; Amount to move point, in ± 64ths */
/* &lt;rasterizer mode&gt; value in store 2 */
/* 150 Function number */
#BEGIN
#PUSHOFF
#PUSH, 2
RS[] /* read store 2 */
EQ[] /* is it = to the last arg? */
IF[] /* if so . . . */
    GPV[] /* Save current PV on stack to restore */
    SPVTCA[Y] /* We should only MPPEM with Y PV */
    ROLL[]
    MPPEM[] /* check cur. size against high ppem */
    GTEQ[]
    #PUSH, 4
    MINDEX[]
    MPPEM[] /* and low ppem */
    LTEQ[]
    AND[]
    IF[] /* if it's between, then */
        SPVFS[] /* Restore orig PV */
        SHPIX[] /* move the point by the amount */
    ELSE[]
       SPVFS[] /* Restore orig PV */
       POP[] /* otherwise remove the remaining arguments */
       POP[]
    EIF[]

ELSE[]
    POP[] /* remove the remaining arguments if the first test fails */
    POP[]
    POP[]
    POP[]
EIF[]
#END
#PUSHON
ENDF[]

FDEF[], 151
/* Function 151 takes 5 arguments */
/* VERSION 1.0 20120420 */

/* This function moves a point between a PPEM range */
/* for the given set of rasterizer flags (in Store 2) */
/* CALL[],&lt;point&gt;,&lt;amount&gt;,&lt;low PPEM&gt;,&lt;high PPEM&gt;, &lt;rasterizer mode&gt;, 151 */
/* &lt;low ppem&gt; Lowest PPEM range to be modified (inclusive) */
/* &lt;high ppem&gt; Highest PPEM range to be modified (inclusive) */
/* &lt;Point&gt; point to be modified */
/* &lt;amount&gt; Amount to move point, in ± 64ths */
/* &lt;rasterizer flag&gt; bit of a value in store 2 */
/* Function 151 differs from Function 150 in that instead of requiring an */
/* exact match with the value in store 2, a given set of flags (or bit values) */
/* can be referenced. For example, if the function should execute */
/* in any situation where ClearType with fractional AWs is enabled, */
/* (c.f. Function 84) irrespective of other flags (e.g. BGR as opposed */
/* to RGB Devices or non-ClearType direction anti-aliasing) then one */
/* would use a &lt;rasterizer flag&gt; value of 64. (c.f. Function 84.) */
/* The rasterizer values for &lt;rasterizer mode&gt; are defined in the function */
/* 84 header. */
/* EXAMPLE: */
/* If one wanted the move to occur if either subpixel positioned or full gray pixel */
/* then one would take the 64 (from subpixel positioned) and the 256 (from */
/* gray full-pixel) and add them to get 320. With a value of 320, the point will */
/* get moved if either subpixel positioned or full gray pixel is enabled. */
/* If one wanted to move to occur always if ClearType was on, independent of */
/* any subtype or spacing flag, one would set the rasterizer mode to 2. */

/* 151 Function number */
#BEGIN
#PUSHOFF
#PUSH, 152 /* Call function 152 with the rasterizer mode on the top of stack */
CALL[]
IF[] /* if so . . . */
    GPV[] /* Save current PV on stack to restore */
    SPVTCA[Y] /* We should only MPPEM with Y PV */
    ROLL[]
    MPPEM[] /* check cur. size against high ppem */
    GTEQ[]
    #PUSH, 4
    MINDEX[]
    MPPEM[] /* and low ppem */
    LTEQ[]
    AND[]
    IF[] /* if it's between, then */
        SPVFS[] /* Restore orig PV */
        SHPIX[] /* move the point by the amount */
    ELSE[]
        SPVFS[] /* Restore orig PV */
        POP[] /* otherwise remove the remaining arguments */
        POP[]
    EIF[]

ELSE[]
    POP[] /* remove the remaining arguments if the first test fails */
    POP[]
    POP[]
    POP[]
EIF[]
#END
#PUSHON
ENDF[]

FDEF[], 152
/* Function 152 takes 1 argument, a "bitfield" flag. */
/* VERSION 1.0 20111117 */
/*
Function 152 is intended to take a set of one or more bits as input and do an AND (e.g. mask) of those
bits with the set of flags returned by Function 84. Then determine if there is at least one
of these resultant bits that are set.

Function 152 returns TRUE if the match is successful, and FALSE if it is not successful.

If the parameter is zero, indicating no flags, then the function returns FALSE.

This function takes a maxiumum of 32 bit flags.

USES: Storage 2 (FN 84)
RETURNS: 0 or 1
*/

#BEGIN
#PUSHOFF
/* Input parameter is a set of one or more flags */

DUP[]
#PUSH, 2     /* Read FN 84 flags */
RS[]
EQ[]         /* If a simple match, return TRUE */
#PUSH, 1
SWAP[]

#PUSH, BEcln
SWAP[]
JROT[], (BEcln=#LEndClear)  /* Jump to end and clean up stack. */
POP[]
#PUSH, 0, 2
RS[]         /* Read FN 84 flags */
#PUSH, BEclr /* If no FN 84 flags, return FALSE */
SWAP[]

JROF[], (BEclr=#LEndClear)

POP[]
#PUSH, 2
RS[]
SWAP[]
#PUSH, 32   /* Maximum number of bits to loop through */
/* TopLoop: */
#LTopLoop:
   /* STACK
   Loop Iteration Count
   Updated (shifted) Input Value
   Updated (shifted) FN 84 Flag
   */
  DUP[]
  NOT[]
  IF[]    /* Exit the loop when done */
    POP[]
    POP[]
    POP[]
    #PUSH, 0, BDEnd /* 73  End */

    JMPR[], (BDEnd=#LEndFn)

  EIF[]
  ROLL[]
  ROLL[]
  DUP[]
  ROLL[]
  DUP[]
  ROLL[]
  SWAP[]
  /* STACK
  Updated (shifted) FN 84 Flag
  Updated (shifted) Input Value
  Updated (shifted) FN 84 Flag
  Updated (Shifted) Input Value
  Loop Interation Count
  */

  /* Check to see if the lower-order bit is set in the FN 84 Flag */
  #PUSH, 4096 /* Convert to 26.6 by multiply by 64 x 64 */
  MUL[]
  ODD[]
  IF[]
    /* Check to see if the lower-order bit is set in the Input Value */
    #PUSH, 4096
    MUL[]
    ODD[]
    IF[]
      /* We can early out here once we find our first match */
      POP[]
      POP[]
      POP[]
      #PUSH, 1, BTEnd  /* 1 is the TRUE return code */
      JMPR[], (BTEnd=#LEndFn)
    EIF[]
  ELSE[]
    POP[]
  EIF[]
  /* STACK
  Updated (shifted) FN 84 Flag
  Updated (shifted) Input Value
  Loop Interation Count
  */
  /* Shift both the Input Value and the FN 84 Flag each one bit right */
  #PUSH, 128  /* 2 in 26.6 */
  DIV[]
  DUP[]
  NOT[]
  IF[]
    POP[]
    POP[]
    POP[]
    #PUSH, 0, BPEnd /* 0 is end condition of FALSE */

    JMPR[], (BPEnd=#LEndFn)

  EIF[]
  SWAP[]
  #PUSH, 128  /* 2 in 26.6 */
  DIV[]
  DUP[]
  NOT[]
  IF[]
    POP[]
    POP[]
    POP[]
    #PUSH, 0, BZEnd /* End */

    JMPR[], (BZEnd=#LEndFn) 

  EIF[]
  ROLL[]
  #PUSH, 1
  SUB[]
  #PUSH, WReLoop  /* -77 TopLoop */

JMPR[], (WReLoop=#LTopLoop)

/* EndClear: */
#LEndClear:
SWAP[]
POP[]
#LEndFn:
/* End: */
#END
#PUSHON
ENDF[]

FDEF[], 153
/* Function 153 takes 1 argument, a "bitfield" flag. */
/* VERSION 1.0 20111117 */
/*
Function 153 is intended to take a set of one or more bits as input and do an AND (e.g. mask) of those
bits with the set of flags returned by Function 84. Then determine if ALL
of these resultant bits from the mask are set.

Function 153 returns TRUE if the match is successful, and FALSE if it is not successful.

If the parameter is zero, indicating no flags, then the function returns FALSE.

This function takes a maxiumum of 32 flags.

USES: Storage 2 (FN 84)
RETURNS: 0 or 1
*/

#BEGIN
#PUSHOFF
/* Input parameter is a set of one or more flags */

DUP[]
#PUSH, 2     /* Read FN 84 flags */
RS[]
EQ[]         /* If a simple match, return TRUE */
#PUSH, 1
SWAP[]

#PUSH, BEcln
SWAP[]
JROT[], (BEcln=#LEndClear)  /* Jump to end and clean up stack. */
POP[]
#PUSH, 0, 2
RS[]         /* Read FN 84 flags */
#PUSH, BEclr /* If no FN 84 flags, return FALSE */
SWAP[]

JROF[], (BEclr=#LEndClear)

POP[]
#PUSH, 0, 2   /* 0 is the boolean tracking success, start off with FALSE */
RS[]
ROLL[]
#PUSH, 32   /* Maximum number of bits to loop through */
/* TopLoop: */
#LTopLoop:
   /* STACK
   Loop Iteration Count
   Updated (shifted) Input Value
   Updated (shifted) FN 84 Flag
   Conditional boolean tracking success
   */
  DUP[]
  NOT[]
  IF[]    /* Exit the loop when done */
    POP[]
    POP[]
    POP[]
    #PUSH, BDEnd /* 73  End */

    JMPR[], (BDEnd=#LEndFn)

  EIF[]
  ROLL[]
  ROLL[]
  DUP[]
  ROLL[]
  DUP[]
  ROLL[]
  SWAP[]
  /* STACK
  Updated (shifted) FN 84 Flag
  Updated (shifted) Input Value
  Updated (shifted) FN 84 Flag
  Updated (Shifted) Input Value
  Loop Interation Count
  Conditional boolean tracking success
  */

  /* Check to see if the lower-order bit is set in the FN 84 Flag */
  #PUSH, 4096 /* Convert to 26.6 by multiply by 64 x 64 */
  MUL[]
  ODD[]
  IF[]
    /* Check to see if the lower-order bit is set in the Input Value */
    #PUSH, 4096
    MUL[]
    ODD[]
    IF[]
      #PUSH, 4
      MINDEX[]
      #PUSH, 1  /* Set TRUE return code */
      OR[]      /* We OR this because we will immediately exit if we fail this test */
      #PUSH, 4
      MINDEX[]
      #PUSH, 4
      MINDEX[]
      #PUSH, 4
      MINDEX[]
    ELSE[]
      POP[]
      POP[]
      POP[]
      POP[]
      #PUSH, BTEnd , 0  /* 0 is the FALSE return code */
      SWAP[]
      JMPR[], (BTEnd=#LEndFn)

    EIF[]
  ELSE[]
    POP[]
  EIF[]
  #PUSH, 4 /* Can this be cleaned up and integrated with the code below? */
  MINDEX[]
  SWAP[]
  /* STACK
  Updated (shifted) FN 84 Flag
  Conditional boolean tracking success
  Updated (shifted) Input Value
  Loop Interation Count
  */
  /* Shift both the Input Value and the FN 84 Flag each one bit right */
  #PUSH, 128  /* 2 in 26.6 */
  DIV[]
  DUP[]
  NOT[]
  IF[]
    ROLL[]
    NOT[]
    ROLL[]
    AND[]
    SWAP[]
    POP[]
    SWAP[]
    POP[]
    #PUSH, BPEnd /* 29  End */

    JMPR[], (BPEnd=#LEndFn)

  EIF[]
  ROLL[]
  #PUSH, 128  /* 2 in 26.6 */
  DIV[]
  DUP[]
  NOT[]
  IF[]
    POP[]
    POP[]
    SWAP[]
    POP[]
    #PUSH, BZEnd /* End */

    JMPR[], (BZEnd=#LEndFn)

  EIF[]
  #PUSH, 4
  MINDEX[]
  #PUSH, 1
  SUB[]
  #PUSH, WReLoop  /* -77 TopLoop */

JMPR[], (WReLoop=#LTopLoop)

/* EndClear: */
#LEndClear:
SWAP[]
POP[]
#LEndFn:
/* End: */
#END
#PUSHON
ENDF[]

    </extraProgram>

    <extraProgram name="ppgm">
/* auto-generated pre-program */
/* VTT 6.32 compiler */
/* Grey scaling? */
CALL[], 84

/* InstructionsOn */
#PUSHOFF
MPPEM[]
#PUSH, 55
GT[]
MPPEM[]
#PUSH, 9
LT[]
OR[]
#PUSH, 1
GETINFO[]
#PUSH, 37
GTEQ[]
#PUSH, 1
GETINFO[]
#PUSH, 64
LTEQ[]
AND[]
#PUSH, 6
GETINFO[]
#PUSH, 0
NEQ[]
AND[]
OR[]
IF[]
    #PUSH, 1, 1
    INSTCTRL[]
EIF[]
#PUSHON

/* DropOutCtrlOff */
SCANCTRL[], 400

SCANTYPE[], 1
SCANTYPE[], 5

/* CvtCutIn */
SVTCA[Y]
SCVTCI[], 64
WS[], 3, 64
#PUSHOFF
MPPEM[]
#PUSH, 144
GTEQ[]
IF[]
#PUSH, 3, 0, 0
SCVTCI[]
WS[]
EIF[]
#PUSHON

/* ClearTypeCtrl */
#PUSHOFF
#PUSH, 2, 2
RS[]
LTEQ[]
IF[]
    #PUSH, 4, 3
    INSTCTRL[]
EIF[]
#PUSHON

WS[], 16, 0
/* LinearAdvanceWidths */
DLTC1[(2 @0 8)(2 @1 8)(2 @3 8)(2 @5 8)
      (2 @7 8)(2 @11 8)(2 @13 8)]
SVTCA[Y]
CALL[], 2, 89
SVTCA[Y]
CALL[], 8, 89
CALL[], 3, 45, 2, 85
CALL[], 9, 45, 8, 85
DLTC1[(0 @1 8)(0 @3 8)(0 @5 8)(0 @7 8)
      (0 @9 8)]
DLTC1[(0 @12 -8)]
DLTC1[(0 @13 8)]
DLTC2[(0 @0 8)(0 @6 8)(0 @8 8)(0 @12 8)
      (0 @13 8)]
SVTCA[Y]
CALL[], 0, 89
DLTC1[(6 @14 -8)]
DLTC2[(6 @2 -8)]
SVTCA[Y]
CALL[], 6, 89
SVTCA[Y]
CALL[], 10, 89
DLTC1[(14 @3 -8)(14 @9 -8)]
SVTCA[Y]
CALL[], 14, 89
CALL[], 1, 167, 0, 85
CALL[], 7, 30, 6, 85
CALL[], 11, 30, 10, 85
CALL[], 15, 167, 14, 85
DLTC1[(4 @0 8)(4 @1 8)(4 @3 8)(4 @5 8)
      (4 @7 8)(4 @11 8)(4 @13 8)]
SVTCA[Y]
CALL[], 4, 89
SVTCA[Y]
CALL[], 12, 89
CALL[], 5, 167, 4, 85
CALL[], 13, 167, 12, 85
SVTCA[Y]
CALL[], 16, 89
SVTCA[Y]
CALL[], 18, 89
CALL[], 17, 167, 16, 85
CALL[], 19, 167, 18, 85
SVTCA[X]
CALL[], 21, 25, 64, 22, 255, 90
SVTCA[X]
CALL[], 23, 60, 22, 255, 91
SVTCA[X]
CALL[], 26, 60, 25, 255, 91
SVTCA[X]
CALL[], 24, 60, 22, 255, 91
SVTCA[X]
CALL[], 27, 60, 25, 255, 91
SVTCA[X]
CALL[], 28, 22, 255, 31
SVTCA[Y]
CALL[], 29, 23, 255, 31
CALL[], 30, 22, 255, 31
SVTCA[X]
CALL[], 31, 25, 255, 31
SVTCA[Y]
CALL[], 32, 26, 255, 31
CALL[], 33, 25, 255, 31
SVTCA[X]
CALL[], 40, 28, 255, 31
SVTCA[Y]
CALL[], 41, 29, 84, 31
CALL[], 42, 29, 255, 31
CALL[], 43, 30, 100, 31
CALL[], 44, 30, 255, 31
SVTCA[X]
CALL[], 45, 31, 255, 31
SVTCA[Y]
CALL[], 46, 32, 255, 31
CALL[], 47, 33, 167, 31
CALL[], 48, 33, 255, 31
SVTCA[X]
CALL[], 49, 34, 255, 31
SVTCA[Y]
CALL[], 50, 35, 255, 31
CALL[], 51, 36, 255, 31
SVTCA[X]
CALL[], 52, 37, 84, 31
CALL[], 53, 37, 250, 31
CALL[], 54, 37, 255, 31
SVTCA[Y]
CALL[], 55, 38, 255, 31
CALL[], 56, 39, 255, 31
CALL[], 57, 39, 100, 31
CALL[], 60, 52, 59, 85
RTG[]

    </extraProgram>

  </TSI1>

  <TSI3>

    <glyphProgram name=".notdef">
/* Y direction */
YAnchor(0)
YShift(0,4)
ResYAnchor(1,2)
YShift(1,7)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="A">
/* Y direction */
ResYAnchor(0,8)
YShift(0,4)
YAnchor(4)
ResYAnchor(1,2)
YShift(1,6)
YIPAnchor(1,8,0)
YShift(8,9)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="A.ss01">
/* Y direction */
YAnchor(0)
YShift(0,11)
ResYAnchor(5,3)
YShift(5,15)
YIPAnchor(5,20,0)
YShift(20,21)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="AE">
/* Y direction */
ResYAnchor(0,8)
YShift(0,18)
YShift(18,15)
ResYAnchor(1,2)
YShift(1,20)
YIPAnchor(1,14,7,0)
YShift(14,11)
YShift(7,8)
YShift(1,19)
YShift(19,2)
YShift(1,22)
YShift(22,3)
YShift(3,5)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="AE.ss01">
/* Y direction */
YAnchor(16,18)
YShift(16,0)
YShift(0,9)
ResYAnchor(20,2)
YShift(20,1)
YIPAnchor(16,12,8,20)
YShift(12,13)
YShift(8,5)
YShift(20,23)
YShift(23,4)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="Adieresis.alt">
/* Y direction */
YAnchor(0,8)
YShift(0,4)
YAnchor(4)
ResYAnchor(1,2)
YShift(1,5)
YIPAnchor(0,8,1)
YShift(8,9)
YShift(1,18)
YAnchor(18)
YShift(18,12)
YShift(18,30)
YAnchor(30)
YShift(30,24)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="B">
/* Y direction */
ResYAnchor(0,8)
YShift(0,18)
ResYAnchor(1,2)
YShift(1,35)
YIPAnchor(1,26,0)
YShift(26,27)
YShift(26,9)
YShift(9,10)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="C">
/* Y direction */
ResYAnchor(0,9)
YShift(0,27)
ResYAnchor(10,3)
YShift(10,17)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="CR">
/* VTTTalk Unicode 0xd */
/* ACT generated Wed May  6 15:33:15 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/*Auto-Hinting Light is not applied: Empty glyph or glyph with one point*/

    </glyphProgram>

    <glyphProgram name="D">
/* Y direction */
ResYAnchor(0,8)
YShift(0,11)
ResYAnchor(1,2)
YShift(1,21)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="E">
/* Y direction */
ResYAnchor(7,8)
YShift(7,4)
ResYAnchor(8,2)
YShift(8,11)
YIPAnchor(8,3,7)
YShift(3,0)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="E.ss01">
/* Y direction */
ResYAnchor(0,9)
YShift(0,40)
ResYAnchor(17,3)
YShift(17,24)
YIPAnchor(17,33,0)
YShift(33,30)
YShift(33,9)
YShift(9,8)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="Eng">
/* Y direction */
ResYAnchor(0,8)
ResYAnchor(1,2)
YShift(1,5)
YShift(1,19)
YAnchor(8)
YShift(8,15)
YInterpolate(8,4,3,1)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="Eng.ss01">
/* Y direction */
ResYAnchor(0,3)
YShift(0,20)
ResYAnchor(27,2)
YAnchor(7)
YShift(7,14)
YAnchor(25,8)
YInterpolate(25,23,28,29,0)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="Eogonek.ss01">
/* Y direction */
YAnchor(0)
YShift(0,61)
ResYAnchor(10,9)
YShift(10,50)
YShift(50,6)
YShift(6,7)
ResYAnchor(27,3)
YShift(27,34)
YIPAnchor(10,42,27)
YShift(42,41)
YShift(41,18)
YShift(18,19)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="Euro">
/* Y direction */
ResYAnchor(8,13)
YShift(8,35)
ResYAnchor(18,5)
YShift(18,25)
YIPAnchor(8,4,18)
YShift(4,5)
YDist(4,1,&gt;=)
YShift(1,0)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="F">
/* Y direction */
ResYAnchor(5,8)
ResYAnchor(6,2)
YShift(6,9)
YIPAnchor(6,3,5)
YShift(3,0)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="F.ss01">
/* Y direction */
YAnchor(0)
ResYAnchor(4,3)
YShift(4,11)
YIPAnchor(4,16,0)
YShift(16,17)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="G">
/* Y direction */
ResYAnchor(0,9)
YShift(0,27)
YShift(0,34)
YShift(34,30)
ResYAnchor(10,3)
YShift(10,17)
YIPAnchor(0,35,10)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="G.ss01">
/* Y direction */
ResYAnchor(0,9)
YShift(0,27)
YShift(0,34)
YAnchor(34)
ResYAnchor(10,3)
YShift(10,17)
YIPAnchor(0,37,10)
YInterpolate(0,31,30,37)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="H">
/* Y direction */
ResYAnchor(5,8)
YShift(5,2)
ResYAnchor(6,2)
YShift(6,0)
YIPAnchor(6,9,5)
YShift(9,10)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="I">
/* VTTTalk Unicode 0x49 (I) */
/* ACT generated Wed May  6 15:33:15 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 0 8 */
/* CVT 1 2 */
/* Min and Max */
ResYAnchor(0,8)	/* min, CVT */
ResYAnchor(1,2)	/* max, CVT */

/* CVTs - beginning */
/* CVTs - end */


Smooth()

    </glyphProgram>

    <glyphProgram name="I.ss01">
/* Y direction */
YAnchor(4)
YShift(4,5)
YShift(5,0)
ResYAnchor(9,2)
YShift(9,8)
YShift(8,1)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="IJ">
/* Y direction */
ResYAnchor(0,9)
YShift(0,7)
ResYAnchor(18,2)
YShift(18,12)
YDist(18,17,&gt;=)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="IJ.ss01">
/* Y direction */
YAnchor(0)
YShift(0,7)
ResYAnchor(11,2)
YShift(11,19)
YAnchor(18,2)
YUpToGrid(17)
YShift(18,17)
YAnchor(17)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="Iacute_J.loclNLD">
/* Y direction */
YAnchor(0,19)
YShift(0,7)
ResYAnchor(18,2)
YShift(18,11)
YDist(18,17,&gt;=)
YDist(18,21,&gt;=)
YShift(21,25)
YDist(21,22,&gt;=2)
YShift(22,26)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="Iacute_J.loclNLD.ss01">
/* Y direction */
YAnchor(0,9)
YShift(0,7)
ResYAnchor(11,2)
YShift(11,19)
YUpToGrid(17)
YShift(19,17)
YAnchor(17)
YDist(11,28,&gt;=)
YShift(28,24)
YDist(28,26,&gt;=2)
YShift(26,23)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="J">
/* VTTTalk Unicode 0x4a (J) */
/* ACT generated Wed May  6 15:33:15 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 0 9 */
/* CVT 12 2 */
/* Min and Max */
ResYAnchor(0,9)	/* min, CVT */
ResYAnchor(12,2)	/* max, CVT */

/* CVTs - beginning */
/* CVTs - end */


/* YDir: Stroke #0 */
YShift(12,11) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YShift(0,7) /*perpendicular to the stroke*/

Smooth()

    </glyphProgram>

    <glyphProgram name="J.ss01">
/* Y direction */
YAnchor(0)
YShift(0,7)
ResYAnchor(12,2)
YShift(12,11)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="K">
/* Y direction */
ResYAnchor(6,8)
YShift(6,10)
ResYAnchor(7,2)
YShift(7,2)
YInterpolate(6,0,1,5,4,11,12,7)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="L">
/* VTTTalk Unicode 0x4c (L) */
/* ACT generated Wed May  6 15:33:15 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 0 8 */
/* CVT 1 2 */
/* Min and Max */
ResYAnchor(0,8)	/* min, CVT */
ResYAnchor(1,2)	/* max, CVT */

/* CVTs - beginning */
/* CVTs - end */


/* YDir: Stroke #0 */
YShift(0,3) /*perpendicular to the stroke*/

Smooth()

    </glyphProgram>

    <glyphProgram name="M">
/* Y direction */
ResYAnchor(0,8)
YShift(0,8)
ResYAnchor(1,2)
YShift(1,6)
YInterpolate(0,12,3,9,13,1)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="M.ss01">
/* Y direction */
ResYAnchor(0,3)
YShift(0,9)
YShift(0,26)
YShift(0,31)
YShift(31,18)
YAnchor(4)
YShift(4,14)
YShift(4,24)
YInterpolate(4,34,28,0)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="N">
/* Y direction */
ResYAnchor(0,8)
YShift(0,8)
ResYAnchor(1,2)
YShift(1,6)
YInterpolate(0,4,9,1)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="N.ss01">
/* Y direction */
ResYAnchor(0,3)
YShift(0,16)
YShift(0,9)
YShift(9,17)
YAnchor(4)
YShift(4,14)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="NULL">
/* VTTTalk Unicode 0x0 */
/* ACT generated Wed May  6 15:33:15 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/*Auto-Hinting Light is not applied: Empty glyph or glyph with one point*/

    </glyphProgram>

    <glyphProgram name="O">
/* VTTTalk Unicode 0x4f (O) */
/* ACT generated Wed May  6 15:33:15 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 0 9 */
/* CVT 10 3 */
/* Min and Max */
ResYAnchor(0,9)	/* min, CVT */
ResYAnchor(10,3)	/* max, CVT */

/* CVTs - beginning */
/* CVTs - end */


/* YDir: Stroke #0 */
YShift(10,30) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YShift(0,20) /*perpendicular to the stroke*/

Smooth()

    </glyphProgram>

    <glyphProgram name="OE">
/* Y direction */
ResYAnchor(9,2)
YShift(9,30)
YShift(9,10)
YShift(10,33)
YAnchor(29,8)
YShift(29,20)
YShift(29,21)
YShift(29,26)
YIPAnchor(29,25,9)
YShift(25,22)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="Ohorn">
/* Y direction */
ResYAnchor(0,9)
YShift(0,39)
ResYAnchor(10,3)
YShift(10,49)
YShift(49,26)
YShift(26,13)
YShift(13,20)
YShift(20,19)
YShift(49,29)
YShift(29,30)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="P">
/* VTTTalk Unicode 0x50 (P) */
/* ACT generated Wed May  6 15:33:15 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 0 8 */
/* CVT 1 2 */
/* Min and Max */
ResYAnchor(0,8)	/* min, CVT */
ResYAnchor(1,2)	/* max, CVT */

/* CVTs - beginning */
/* CVTs - end */


/* YDir: Stroke #0 */
YShift(1,23) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YInterpolate(1,11,0)
YAnchor(11)
YShift(11,15) /*perpendicular to the stroke*/

Smooth()

    </glyphProgram>

    <glyphProgram name="Q">
/* Y direction */
ResYAnchor(0,9)
YShift(0,35)
YInterpolate(35,26,25,0)
ResYAnchor(10,3)
YShift(10,45)
YAnchor(20)
YShift(20,30)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="Q.ss01">
/* Y direction */
ResYAnchor(8,9)
YDist(8,0)
YShift(8,28)
YDist(28,3)
ResYAnchor(18,3)
YShift(18,38)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="Q.ss01.BRACKET.170">
/* Y direction */
ResYAnchor(4,9)
YDist(4,0,&gt;=)
YShift(4,1)
YShift(4,24)
ResYAnchor(14,3)
YShift(14,34)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="R">
/* Y direction */
ResYAnchor(0,8)
YShift(0,14)
ResYAnchor(1,2)
YShift(1,27)
YIPAnchor(1,11,0)
YShift(11,15)
YShift(11,19)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="S">
/* Y direction */
ResYAnchor(0,9)
YShift(0,7)
ResYAnchor(23,3)
YShift(23,30)
YInterpolate(0,42,11,34,19,23)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="T">
/* VTTTalk Unicode 0x54 (T) */
/* ACT generated Wed May  6 15:33:15 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 0 8 */
/* CVT 3 2 */
/* Min and Max */
ResYAnchor(0,8)	/* min, CVT */
ResYAnchor(3,2)	/* max, CVT */

/* CVTs - beginning */
/* CVTs - end */


/* YDir: Stroke #0 */
YShift(3,2) /*perpendicular to the stroke*/
YShift(2,6) /*along bottom edge*/

Smooth()

    </glyphProgram>

    <glyphProgram name="T.ss01">
/* Y direction */
ResYAnchor(4,3)
YShift(4,11)
YShift(4,16)
YAnchor(14)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="T_h">
/* Y direction */
YAnchor(0)
YShift(0,24)
YShift(24,14)
ResYAnchor(3,2)
YShift(3,26)
YShift(3,2)
YShift(2,6)
ResYAnchor(8,7)
YShift(8,18)
YShift(18,27,28)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="Thorn">
/* Y direction */
YAnchor(20,8)
YDist(20,0,&gt;=)
YShift(0,1)
ResYAnchor(21,2)
YDist(21,10,&gt;=)
YShift(10,9)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="U">
/* Y direction */
ResYAnchor(0,9)
YShift(0,9)
ResYAnchor(4,2)
YShift(4,14)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="U.ss01">
/* Y direction */
ResYAnchor(0,9)
YShift(0,9)
YShift(0,16)
YAnchor(16)
ResYAnchor(4,2)
YShift(4,14)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="Udieresis.alt">
/* Y direction */
ResYAnchor(0,9)
YShift(0,9)
ResYAnchor(4,2)
YShift(4,13)
YShift(4,24)
YAnchor(24)
YShift(24,18)
YShift(24,36)
YAnchor(36)
YShift(36,30)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="Udieresis.alt.BRACKET.133">
/* Y direction */
ResYAnchor(0,9)
YShift(0,9)
ResYAnchor(4,2)
YShift(4,13)
YShift(4,18)
YAnchor(18)
YShift(18,24)
YShift(18,30)
YShift(30,36)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="Udieresis.ss01.alt">
/* Y direction */
YAnchor(0,9)
YShift(0,9)
YShift(9,17)
ResYAnchor(4,2)
YShift(4,13)
YShift(4,27)
YAnchor(27)
YShift(27,21)
YShift(27,39)
YAnchor(39)
YShift(39,33)
YAnchor(16,8)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="Udieresis.ss01.alt.BRACKET.133">
/* Y direction */
ResYAnchor(0,9)
YShift(0,9)
ResYAnchor(4,2)
YShift(4,13)
YShift(4,21)
YAnchor(21)
YShift(21,27)
YShift(21,33)
YShift(33,39)
YAnchor(16,8)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="Uogonek">
/* Y direction */
ResYAnchor(30,9)
YShift(30,19)
YAnchor(19)
YShift(19,12)
YShift(30,39)
YShift(39,27)
YShift(27,26)
YShift(26,5)
ResYAnchor(34,2)
YShift(34,0)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="Ustraitcy">
/* Y direction */
ResYAnchor(0,8)
ResYAnchor(3,2)
YShift(3,8)
YInterpolate(0,9,2,1,10,6,5,3)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="Ustraitstrokecy">
/* Y direction */
ResYAnchor(4,8)
ResYAnchor(7,2)
YShift(7,12)
YIPAnchor(7,0,4)
YShift(0,1)

YInterpolate(7,6,13,5,14,10,9,4)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="V">
/* Y direction */
ResYAnchor(0,8)
YShift(0,4)
ResYAnchor(1,2)
YShift(1,6)
YInterpolate(0,3,1)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="W">
/* Y direction */
ResYAnchor(0,8)
YShift(0,4)
YShift(0,12)
ResYAnchor(1,2)
YShift(1,6)
YShift(1,10)
YInterpolate(0,3,8,14,1)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="W.ss01">
/* Y direction */
YAnchor(0)
YShift(0,9)
YShift(9,30)
ResYAnchor(4,2)
YShift(4,14)
YShift(4,23)
YIPAnchor(4,27,0)
YShift(27,18)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="X">
/* Y direction */
ResYAnchor(0,8)
YShift(0,12)
ResYAnchor(3,2)
YShift(3,8)
YInterpolate(0,13,2,9,10,1,6,3)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="Y">
/* Y direction */
ResYAnchor(0,8)
ResYAnchor(3,2)
YShift(3,8)
YInterpolate(0,9,2,10,1,5,6,3)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="Y.ss01">
/* Y direction */
YAnchor(0)
YShift(0,7)
ResYAnchor(19,2)
YShift(19,29)
YIPAnchor(19,15,0)
YInterpolate(19,10,30,15)
YInterpolate(15,31,9,32,8,0)
YShift(15,24)
YShift(24,12,11)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="Z">
/* Y direction */
ResYAnchor(0,8)
YShift(0,9)
YShift(9,1)
YShift(9,8)
ResYAnchor(5,2)
YShift(5,3)
YShift(3,2)
YShift(3,7)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="Z.ss01">
/* Y direction */
YAnchor(0)
YShift(0,9)
YShift(9,1)
YShift(9,8)
ResYAnchor(5,2)
YShift(5,4)
YShift(4,7)
YShift(7,2)
YIPAnchor(5,12,0)
YShift(12,13)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="a">
/* Y direction */
ResYAnchor(13,7)
YShift(13,6)
YAnchor(17)
ResYAnchor(18,11)
YShift(18,35)
YIPAnchor(13,26,18)
YShift(26,29)

YInterpolate(26,38,39,18)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="a.sc">
/* Y direction */
YAnchor(0)
YShift(0,4)
YAnchor(1,58)
YShift(1,5)
YIPAnchor(1,9,0)
YShift(9,8)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="a.sc.ss01">
/* Y direction */
YAnchor(0)
YShift(0,11)
YAnchor(5,58)
YShift(5,15)
YIPAnchor(5,20,0)
YShift(20,21)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="a.ss01">
/* Y direction */
ResYAnchor(0,11)
YShift(0,16)
ResYAnchor(8,7)
YShift(8,24)
YAnchor(32,10)
ResYAnchor(36,6)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="acutecomb">
/* Y direction */
YAnchor(0)
YDelta(0,1@12)
YDist(0,1,&gt;=2)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="acutecomb.loclVIET">
/* Y direction */
YAnchor(3)
YDist(3,1,&gt;=2)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="adieresis.sc.alt">
/* Y direction */
YAnchor(25,58)
YShift(25,29)
YShift(25,6)
YAnchor(6)
YShift(6,0)
YShift(6,18)
YAnchor(18)
YShift(18,12)
YAnchor(31,10)
YShift(31,28)
YIPAnchor(31,32,25)
YShift(32,33)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="ae">
/* Y direction */
ResYAnchor(0,11)
YShift(0,16)
ResYAnchor(30,7)
YShift(30,23)
ResYAnchor(37,7)
YShift(37,53)
ResYAnchor(69,11)
YShift(69,62)
YIPAnchor(69,46,37)
YInterpolate(69,74,73,46)
YInterpolate(46,33,34,37)
YShift(46,47)
YShift(46,9)
YAnchor(9)
YShift(9,8)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="ae.sc">
/* Y direction */
YAnchor(1,58)
YShift(1,19)
YShift(19,2)
YShift(1,22)
YShift(22,3)
YShift(3,5)
YShift(5,4)
YAnchor(6,10)
YAnchor(18,10)
YShift(18,15)
YIPAnchor(18,9,14,1)
YShift(9,10)
YShift(14,11)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="ae.sc.ss01">
/* Y direction */
YAnchor(0,10)
YShift(0,9)
YShift(0,16)
YAnchor(20,58)
YShift(20,1)
YIPAnchor(0,12,8,20)
YShift(12,13)
YShift(8,5)
YShift(20,23)
YShift(23,4)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="ae.ss01">
/* Y direction */
ResYAnchor(0,11)
YShift(0,16)
ResYAnchor(30,7)
YShift(30,23)
YIPAnchor(0,9,30)
YInterpolate(0,69,68,42,43,9)
YInterpolate(9,20,33,34,30)
YShift(9,8)
ResYAnchor(37,7)
YShift(37,49)
ResYAnchor(64,11)
YShift(64,58)
YInterpolate(64,41,45,37)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="ampersand">
/* Y direction */
ResYAnchor(0,19)
YShift(0,49)
YShift(0,24)
YAnchor(24)
YShift(24,23)
ResYAnchor(33,3)
YShift(33,15)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="ampersand.sc">
/* Y direction */
YAnchor(0,11)
YShift(0,22)
YAnchor(22)
YShift(0,44)
YAnchor(30,58)
YShift(30,14)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="approxequal">
/* Y direction */
YAnchor(24)
YShift(24,32)
YAnchor(32)
YShift(24,41)
YDist(24,36,&gt;=2)
YShift(36,29)
YShift(36,44)
YAnchor(44)
YDist(36,0,&gt;=)
YShift(0,8)
YAnchor(8)
YShift(0,17)
YDist(0,12,&gt;=2)
YShift(12,5)
YShift(12,20)
YAnchor(20)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="arrowboth">
/* Y direction */
YAnchor(12,18)
YShift(12,6)
YShift(6,0)
YShift(12,13)
YShift(13,1)
YShift(1,4)
YShift(13,7)
YShift(7,10)
YShift(13,8)
YShift(8,2)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="arrowdown">
/* Y direction */
YAnchor(2)
YShift(2,5)
YShift(2,6)
YAnchor(6)
YShift(2,8)
YShift(2,4)
YShift(4,3)
YShift(4,0)
YShift(0,1)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="arrowdown.case">
/* Y direction */
YAnchor(2)
YShift(2,8,5)
YAnchor(6)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="arrowleft">
/* Y direction */
YAnchor(9)
YShift(9,5)
YShift(9,8)
YShift(8,3)
YShift(8,4)
YShift(4,1)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="arrowleft.case">
/* Y direction */
YAnchor(9)
YShift(9,5)
YShift(9,8)
YShift(8,3)
YShift(8,4)
YShift(4,1)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="arrowright">
/* Y direction */
YAnchor(8)
YShift(8,3)
YShift(8,9)
YShift(9,5)
YShift(9,4)
YShift(4,1)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="arrowright.case">
/* Y direction */
YAnchor(8,18)
YShift(8,3)
YShift(8,9)
YShift(9,5)
YShift(9,4)
YShift(4,1)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="arrowup">
/* Y direction */
YAnchor(2)
YShift(2,5)
YDist(2,6,&gt;=)
YShift(2,7)
YShift(2,0)
YShift(0,1)
YShift(0,4)
YShift(4,3)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="arrowup.case">
/* Y direction */
YAnchor(2)
YShift(2,5)
YShift(2,7)
YAnchor(6)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="arrowupdn">
/* Y direction */
YAnchor(2)
YShift(2,5)
YShift(2,13)
YAnchor(6)
YShift(6,9)
YShift(6,12)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="asciicircum">
/* Y direction */
YAnchor(1)
YShift(1,5)
YShift(1,0)
YAnchor(0)
YShift(0,4)
YAnchor(4)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="asciitilde">
/* Y direction */
YAnchor(0)
YShift(0,8)
YAnchor(8)
YShift(0,17)
YDist(0,12,&gt;=2)
YShift(12,5)
YShift(12,20)
YAnchor(20)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="asterisk">
/* Y direction */
ResYAnchor(19,3)
YDist(19,8,&gt;=)
YInterpolate(19,16,23,0,15,12,3,4,11,8)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="at">
/* Y direction */
YAnchor(0)
YShift(0,50)
ResYAnchor(10,3)
YShift(10,40)
YIPAnchor(10,65,0)
YShift(65,26)
YAnchor(26)
YShift(65,81)
YAnchor(57)
YShift(57,73)
YShift(57,19)
YShift(19,31)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="b">
/* Y direction */
ResYAnchor(0,11)
YShift(0,23)
ResYAnchor(8,7)
YShift(8,31)
ResYAnchor(16,10)
ResYAnchor(17,0)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="b.sc">
/* Y direction */
YAnchor(0)
YShift(0,16)
YAnchor(1,58)
YShift(1,33)
YIPAnchor(1,24,0)
YShift(24,25)
YShift(24,8)
YShift(8,9)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="backslash">
/* VTTTalk Unicode 0x5c (\) */
/* ACT generated Wed May  6 15:33:15 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(0)	/* min */
YAnchor(2)	/* max */

Smooth()

    </glyphProgram>

    <glyphProgram name="backslash.case">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(0)	/* min */
YAnchor(2)	/* max */

Smooth()

    </glyphProgram>

    <glyphProgram name="bar">
/* VTTTalk Unicode 0x7c (|) */
/* ACT generated Wed May  6 15:33:15 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(0)	/* min */
YAnchor(1)	/* max */

Smooth()

    </glyphProgram>

    <glyphProgram name="braceleft">
/* Y direction */
YAnchor(0)
YShift(0,37)
YAnchor(17)
YShift(17,20)
YIPAnchor(17,8,0)
YShift(8,9)
YShift(8,28,29)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="braceright">
/* Y direction */
YAnchor(1)
YShift(1,2)
YAnchor(22)
YShift(22,21)
YIPAnchor(22,33,1)
YShift(33,12,11)
YShift(33,30)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="bracketleft">
/* VTTTalk Unicode 0x5b ([) */
/* ACT generated Wed May  6 15:33:15 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(0)	/* min */
YAnchor(1)	/* max */

/* YDir: Stroke #0 */
YShift(1,4) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YShift(0,5) /*perpendicular to the stroke*/

Smooth()

    </glyphProgram>

    <glyphProgram name="bracketright">
/* VTTTalk Unicode 0x5d (]) */
/* ACT generated Wed May  6 15:33:15 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(1)	/* min */
YAnchor(6)	/* max */

/* YDir: Stroke #0 */
YShift(6,5) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YShift(1,2) /*perpendicular to the stroke*/

Smooth()

    </glyphProgram>

    <glyphProgram name="brevecombcy">
/* Y direction */
YAnchor(0)
YShift(0,7)
YDist(0,4,&gt;=2)
YShift(4,10)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="brevecombcy.case">
/* Y direction */
YAnchor(0)
YShift(0,7)
YDist(0,4,&gt;=2)
YShift(4,10)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="brokenbar">
/* Y direction */
YAnchor(1)
YShift(1,0)
YAnchor(4)
YShift(4,5)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="bullet">
/* Y direction */
YAnchor(0)
YShift(0,8)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="c">
/* Y direction */
ResYAnchor(0,11)
YShift(0,23)
ResYAnchor(8,7)
YShift(8,15)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="c.sc">
/* Y direction */
YAnchor(0,11)
YShift(0,23)
YAnchor(8,58)
YShift(8,15)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="cent">
/* Y direction */
ResYAnchor(4,11)
YDist(4,0,&gt;=)
YShift(4,27)
ResYAnchor(12,7)
YDist(12,1,&gt;=)
YShift(12,19)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="cent.BRACKET.179">
/* Y direction */
ResYAnchor(0,11)
YShift(0,23,31,32)
ResYAnchor(8,7)
YShift(8,15)
YShift(8,34)
YDist(8,35,&gt;=)
YShift(8,37)


YDist(0,30,&gt;=)

Smooth()

    </glyphProgram>

    <glyphProgram name="colonmonetary">
/* Y direction */
ResYAnchor(8,13)
YShift(8,35)
YDist(8,3,&gt;=)
YShift(3,7)
ResYAnchor(18,5)
YShift(18,25)
YDist(18,5,&gt;=)
YShift(5,1)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="colonmonetary.1">
/* Y direction */
ResYAnchor(0,13)
YShift(0,27)
YShift(27,40)
YShift(40,36)
YDist(0,41,&gt;=)
YShift(41,37)
ResYAnchor(10,5)
YShift(10,17)
YShift(17,45)
YShift(17,46)
YDist(10,43,&gt;=)
YShift(43,47)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="comma">
/* Y direction */
YUpToGrid(8)
YAnchor(8)
YDist(8,0,&gt;=)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="copyright">
/* Y direction */
ResYAnchor(0,9)
YShift(0,20)
YDist(0,40,&gt;=2)
YShift(40,63)
ResYAnchor(10,3)
YShift(10,30)
YDist(10,48,&gt;=2)
YShift(48,55)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="currency">
/* Y direction */
YAnchor(16)
YShift(16,36)
YShift(16,5)
YShift(5,4)
YShift(16,8)
YShift(8,11)
YAnchor(26)
YShift(26,44)
YInterpolate(16,7,9,6,10,0,12,3,13,26)
YShift(26,1)
YShift(1,2)
YShift(26,14)
YShift(14,15)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="d">
/* Y direction */
ResYAnchor(0,11)
YShift(0,16)
ResYAnchor(8,7)
YShift(8,24)
ResYAnchor(32,10)
ResYAnchor(36,0)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="d.sc">
/* Y direction */
YAnchor(0)
YShift(0,11)
YAnchor(1,58)
YShift(1,21)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="dagger">
/* Y direction */
YAnchor(0)
ResYAnchor(5,2)
YIPAnchor(5,3,0)
YShift(3,2,7,10)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="daggerdbl">
/* Y direction */
YAnchor(7)
ResYAnchor(16,2)
YIPAnchor(7,10,13,16)
YShift(10,2)
YShift(10,9)
YShift(9,5)
YShift(13,1)
YShift(13,14)
YShift(14,18)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="degree">
/* Y direction */
YAnchor(0)
YShift(0,16)
ResYAnchor(8,5)
YShift(8,24)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="descTailcy">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

/* Y direction */
YAnchor(3)
YDist(3,0,&gt;=2)
YShift(3,4,1,2)
/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="descTailcy.case">
/* Y direction */
YAnchor(3)
YDist(3,0,&gt;=2)
YShift(3,4,1,2)
/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="descendercy">
/* Y direction */
YAnchor(3)
YDist(3,0,&gt;=2)
YShift(3,4)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="descendercy.case">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

/* Y direction */
YAnchor(3)
YDist(3,0,&gt;=2)
YShift(3,4)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="descendercy.case.short">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */


/* Y direction */
YAnchor(3)
YDist(3,0,&gt;=2)
YShift(3,4)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="descendercy.short">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */


/* Y direction */
YAnchor(3)
YDist(3,0,&gt;=2)
YShift(3,4)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="divide">
/* Y direction */
YAnchor(1)
YShift(1,0)
YDownToGrid(10)
YShift(0,10)
YAnchor(10)
YShift(10,4)
YDist(1,16,&gt;=)
YShift(16,22)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="dollar">
/* Y direction */
ResYAnchor(4,13)
YDist(4,0,&gt;=)
ResYAnchor(27,5)
YDist(27,1,&gt;=)
YShift(27,34)
YInterpolate(4,46,15,38,23,27)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="dollar.BRACKET.179">
/* Y direction */
YAnchor(0,13)
YDist(0,46,&gt;=)
YShift(0,7)
YShift(7,48)
YAnchor(23,5)
YDist(23,52,&gt;=)
YInterpolate(0,42,11,34,19,23)
YShift(23,30)
YShift(30,50)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="dong">
/* Y direction */
YAnchor(0,13)
YShift(0,20)
YDist(0,17,&gt;=)
YShift(17,16)
YAnchor(8)
YShift(8,28)
YDist(8,43,&gt;=)
YShift(43,44)
YShift(44,40)
YAnchor(40)
YAnchor(36,12)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="dotbelowcomb">
/* Y direction */
YDownToGrid(6)
YAnchor(6)
YShift(6,0)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="dotlessi">
/* VTTTalk Unicode 0x131 */
/* ACT generated Wed May  6 15:33:15 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 0 10 */
/* CVT 1 6 */
/* Min and Max */
ResYAnchor(0,10)	/* min, CVT */
ResYAnchor(1,6)	/* max, CVT */

/* CVTs - beginning */
/* CVTs - end */


Smooth()

    </glyphProgram>

    <glyphProgram name="e">
/* Y direction */
ResYAnchor(0,11)
YShift(0,32)
ResYAnchor(8,7)
YShift(8,23)
YIPAnchor(8,16,0)
YShift(16,17)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="e.sc">
/* Y direction */
YAnchor(7)
YShift(7,4)
YAnchor(8,58)
YShift(8,11)
YIPAnchor(8,3,7)
YShift(3,0)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="e.sc.ss01">
/* Y direction */
YAnchor(3,11)
YShift(3,41)
YAnchor(19,58)
YShift(19,26)
YIPAnchor(3,34,19)
YShift(34,33)
YShift(33,11)
YShift(11,10)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="e.ss01">
/* Y direction */
ResYAnchor(0,11)
YShift(0,28)
ResYAnchor(8,7)
YShift(8,20)
YInterpolate(0,13,14,12,16,15,8)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="eight">
/* Y direction */
ResYAnchor(0,13)
YShift(0,16)
YAnchor(22,4)
YShift(22,28)
YShift(22,44)
YShift(44,8)
ResYAnchor(36,5)
YShift(36,50)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="eight.dnom">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */



/* Y direction */
YAnchor(0,13)
YShift(0,16)

YLink(0,34,61)
YShift(34,46)

YIPAnchor(0,22,34)
YShift(22,28,8,40)

Smooth()

    </glyphProgram>

    <glyphProgram name="eight.tf">
/* Y direction */
ResYAnchor(0,13)
YShift(0,16)
ResYAnchor(36,5)
YShift(36,50)
YInterpolate(0,22,36)
YShift(22,28,8,44)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="emdash">
/* VTTTalk Unicode 0x2014 */
/* ACT generated Wed May  6 15:33:15 2020 */


/* Y direction */
YAnchor(0)
YShift(0,1)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="emptyset">
/* Y direction */
YAnchor(12)
YShift(12,28)
YShift(12,2)
YShift(2,3)
YShift(12,4)
YAnchor(4)
YShift(4,20)
YShift(4,0)
YShift(0,1)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="endash">
/* VTTTalk Unicode 0x2013 */
/* ACT generated Wed May  6 15:33:15 2020 */


/* Y direction */
YAnchor(0)
YShift(0,1)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="eng">
/* Y direction */
ResYAnchor(0,7)
YShift(0,21)
ResYAnchor(8,15)
YShift(8,14)
ResYAnchor(27,10)
YInterpolate(27,30,31,0)
ResYAnchor(28,6)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="eng.sc">
/* Y direction */
YAnchor(0,18)
YShift(0,4)
YShift(4,3)
YAnchor(1,58)
YShift(1,5)
YShift(1,19)
YDownToGrid(8)
YAnchor(8,14)
YShift(8,14)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="eng.sc.ss01">
/* Y direction */

YAnchor(26,58)
YShift(26,0)
YShift(0,19)
YShift(19,27)
YShift(27,22)
YShift(27,28)
YAnchor(7)
YShift(7,13)
YAnchor(24,10)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="eogonek">
/* Y direction */
YAnchor(0)
YShift(0,56)
ResYAnchor(10,11)
YShift(10,42)
YShift(42,7,6)
ResYAnchor(18,7)
YShift(18,33)
YIPAnchor(18,26,10)
YShift(26,27)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="eogonek.sc.ss01">
/* Y direction */
YAnchor(10,11)
YDist(10,0,&gt;=)
YShift(0,60)
YShift(10,48)
YShift(48,6)
YShift(48,7)
YAnchor(26,58)
YShift(26,33)
YIPAnchor(10,41,26)
YShift(41,40)
YShift(40,17,18)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="eogonek.ss01">
/* Y direction */
ResYAnchor(10,11)
YDist(10,0,&gt;=)
YShift(0,52)
YShift(10,38)
YShift(38,6)
YShift(6,7)
YShift(7,45)
ResYAnchor(18,7)
YShift(18,30)
YInterpolate(10,23,24,22,26,25,18)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="equal">
/* Y direction */
YAnchor(0)
YShift(0,1)
YDist(0,5,&gt;=)
YShift(5,4)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="estimated">
/* Y direction */
ResYAnchor(0,13)
YShift(0,26)
ResYAnchor(10,5)
YShift(10,42)
YIPAnchor(0,17,10)
YShift(17,33)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="eth">
/* Y direction */
ResYAnchor(0,11)
YShift(0,35)
YAnchor(27,0)
YShift(27,20)
YIPAnchor(0,8,27)
YInterpolate(0,12,13,39,31,16,8)
YInterpolate(8,50,51,53,52,27)
YShift(8,43)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="exclam">
/* Y direction */
ResYAnchor(1,2)
YAnchor(4,11)
YShift(4,10)
YShift(10,0)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="exclam.sc">
/* Y direction */
YAnchor(1,58)
YAnchor(4)
YShift(4,10)
YShift(10,0)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="exclamdown">
/* Y direction */
YAnchor(1)
ResYAnchor(4,7)
YShift(4,10)
YShift(10,3)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="exclamdown.sc">
/* Y direction */
YAnchor(1)
YAnchor(4,58)
YShift(4,10)
YShift(10,3)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="f">
/* Y direction */
ResYAnchor(0,10)
ResYAnchor(4,1)
YShift(4,11)
YUpToGrid(19)
YAnchor(19)
YDelta(19,-1@21;23;27)
YShift(19,18)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="f.sc">
/* Y direction */
YAnchor(4)
YAnchor(6,58)
YShift(6,9)
YIPAnchor(6,3,4)
YShift(3,0)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="f.sc.ss01">
/* Y direction */
YAnchor(0)
YAnchor(4,58)
YShift(4,11)
YIPAnchor(4,16,0)
YShift(16,17)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="f.ss01">
/* Y direction */
YAnchor(0)
ResYAnchor(4,1)
YShift(4,11)
YIPAnchor(4,19,0)
YShift(19,18)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="figuredash">
/* VTTTalk Unicode 0x2012 */
/* ACT generated Wed May  6 15:33:15 2020 */


/* Y direction */
YAnchor(0)
YShift(0,1)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="filledbox">
/* VTTTalk Unicode 0x25a0 */
/* ACT generated Wed May  6 15:33:15 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(0)	/* min */
YAnchor(1)	/* max */

Smooth()

    </glyphProgram>

    <glyphProgram name="five">
/* Y direction */
ResYAnchor(0,13)
YShift(0,7)
ResYAnchor(16,4)
YShift(16,19)
YShift(19,20)
YIPAnchor(16,22,0)
YShift(22,15)
YShift(22,21)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="five.dnom">
/* Y direction */
YAnchor(0,13)
YShift(0,7)
YLink(0,15,61)
YShift(15,18)
YShift(18,19)
YIPAnchor(0,22,15)
YShift(22,13)
YShift(13,20)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="five.osf">
/* Y direction */
YAnchor(0)
YShift(0,7)
YAnchor(16)
YShift(16,19)
YShift(19,20)
YIPAnchor(16,22,0)
YShift(22,15)
YShift(22,21)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="five.tf">
/* Y direction */
ResYAnchor(0,13)
YShift(0,8)
ResYAnchor(18,4)
YIPAnchor(0,16,18)
YShift(16,25)
YShift(25,23)
YShift(18,21)
YShift(21,22)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="five.tosf">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */


/* Y direction */
YAnchor(0)
YShift(0,8)
YAnchor(18,59)
YIPAnchor(0,16,18)
YShift(16,25)
YShift(25,23)
YShift(18,21)
YShift(21,22)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="fl.ss01">
/* Y direction */
YAnchor(0)
YShift(0,25)
YAnchor(12,10)
ResYAnchor(17,1)
YShift(17,7)
YAnchor(33)
YShift(33,32)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="florin">
/* Y direction */
ResYAnchor(0,15)
YShift(0,6)
ResYAnchor(13,1)
YShift(13,20)
YAnchor(30)
YShift(30,29)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="four">
/* Y direction */
ResYAnchor(3,4)
ResYAnchor(13,12)
YIPAnchor(3,0,13)
YShift(0,5)
YShift(5,1)
YShift(5,4)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="four.dnom">
/* Y direction */
YAnchor(8,12)
YLink(8,2,61)
YIPAnchor(8,0,2)
YShift(0,5)
YShift(5,4)
YShift(4,1)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="four.osf">
/* Y direction */
YAnchor(2,59)
YAnchor(8)
YIPAnchor(8,7,2)
YShift(7,6)
YShift(6,12)
YAnchor(12)
YShift(6,4)
YShift(4,1)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="four.tf">
/* Y direction */
YAnchor(2,4)
YAnchor(8,12)
YIPAnchor(8,7,2)
YShift(7,6)
YShift(6,4,1,11)
YAnchor(11)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="four.tosf">
/* Y direction */
YAnchor(2,59)
YAnchor(8)
YIPAnchor(8,7,2)
YShift(7,6)
YShift(6,12)
YAnchor(12)
YShift(6,4)
YShift(4,1)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="fraction">
/* VTTTalk Unicode 0x2044 */
/* ACT generated Wed May  6 15:33:15 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 0 18 */
/* CVT 2 16 */
/* Min and Max */
ResYAnchor(0,18)	/* min, CVT */
ResYAnchor(2,4)	/* max, CVT */

/* CVTs - beginning */
/* CVTs - end */


Smooth()

    </glyphProgram>

    <glyphProgram name="franc">
/* Y direction */
ResYAnchor(9,12)
ResYAnchor(10,4)
YShift(10,13)
YIPAnchor(10,7,9)
YShift(7,4)
YDist(7,1,&gt;=)
YShift(1,0)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="g">
/* Y direction */
ResYAnchor(0,15)
YShift(0,7)
ResYAnchor(14,6)
ResYAnchor(27,7)
YShift(27,43)
YIPAnchor(27,19,0)
YShift(19,35)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="g.sc">
/* Y direction */
YAnchor(4,11)
YShift(4,27)
YAnchor(12,58)
YShift(12,19)
YIPAnchor(12,32,4)
YInterpolate(32,30,31,34,0,4)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="g.sc.ss01">
/* Y direction */
YAnchor(0,11)
YShift(0,31)
YAnchor(31)
YShift(0,24)
YShift(24,34)
YAnchor(34)
YShift(24,27)
YShift(27,28)
YAnchor(9,58)
YShift(9,16)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="germandbls">
/* Y direction */
ResYAnchor(0,11)
YShift(0,7)
ResYAnchor(27,10)
ResYAnchor(32,1)
YShift(32,22)
YIPAnchor(32,15,0)
YShift(15,16)
YShift(15,42)
YShift(42,41)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="germandbls.sc">
/* Y direction */
ResYAnchor(3,11)
YShift(3,10)
YAnchor(30,10)
ResYAnchor(34,58)
YShift(34,25)
YIPAnchor(3,44,34)
YInterpolate(44,39,22,21,38,34)
YShift(44,16)
YShift(44,41)
YShift(41,40)
YShift(40,20)
YShift(20,19)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="gravecomb">
/* Y direction */
YAnchor(0)
YDist(0,1,&gt;=2)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="gravecomb.loclVIET">
/* Y direction */
YAnchor(0)
YDist(0,1,&gt;=2)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="greater">
/* Y direction */
YAnchor(0)
YShift(0,1)
YShift(0,5)
YAnchor(5)
YShift(5,4)
YInterpolate(5,2,3,6,7,0)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="greaterequal">
/* Y direction */
YAnchor(9)
YShift(9,10)
YUpToGrid(0)
YShift(10,0)
YAnchor(0)
YShift(0,1)
YShift(0,5)
YAnchor(5)
YShift(5,4)
YInterpolate(0,2,3,6,7,5)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="guilsinglleft">
/* Y direction */
YAnchor(0)
YDist(0,2,&gt;=)
YInterpolate(0,4,1,2)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="guilsinglleft.sc">
/* Y direction */
YAnchor(0)
YAnchor(2)
YInterpolate(0,4,1,2)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="guilsinglright">
/* Y direction */
YAnchor(1)
YDist(1,3,&gt;=)
YInterpolate(1,5,2,3)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="guilsinglright.sc">
/* Y direction */
YAnchor(0)
YAnchor(3)
YInterpolate(0,5,2,3)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="h">
/* Y direction */
ResYAnchor(0,7)
YShift(0,10)
ResYAnchor(16,10)
YShift(16,6)
YInterpolate(16,19,20,0)
ResYAnchor(17,0)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="h.sc">
/* Y direction */
YAnchor(0)
YShift(0,8)
YAnchor(1,58)
YShift(1,6)
YIPAnchor(1,10,0)
YShift(10,3)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="hookabovecomb">
/* Y direction */
YAnchor(0)
YShift(0,1)
YDist(0,13,&gt;=3)
YShift(13,7)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="hookabovecomb.loclVIET">
/* Y direction */
YAnchor(0)
YShift(0,1)
YDist(0,13,&gt;=2)
YShift(13,7)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="hyphen">
/* Y direction */
YAnchor(0)
YShift(0,1)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="i.sc">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 0 18  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(0)	/* min */
YAnchor(1,58)	/* max */

Smooth()

    </glyphProgram>

    <glyphProgram name="i.sc.ss01">
/* Y direction */
YAnchor(4)
YShift(4,0)
YShift(4,5)
YAnchor(9,58)
YShift(9,1)
YShift(9,8)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="iacute_j.loclNLD">
/* Y direction */
ResYAnchor(0,10)
ResYAnchor(1,6)
YDist(1,7,&gt;=)
YShift(7,23)
YAnchor(23)
YDist(7,5,&gt;=2)
YShift(5,24)
ResYAnchor(8,15)
YShift(8,14)
ResYAnchor(18,6)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="iacute_j.loclNLD.sc">
/* Y direction */
YAnchor(0,11)
YShift(0,7)
YAnchor(17,58)
YShift(17,11)
YShift(17,16)
YDist(17,20,&gt;=)
YShift(20,24)
YDist(20,21,&gt;=2)
YShift(21,25)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="iacute_j.loclNLD.sc.ss01">
/* Y direction */
YAnchor(0,11)
YShift(0,7)
YAnchor(17,58)
YShift(17,11)
YDist(17,20,&gt;=)
YShift(20,24)
YDist(20,21,&gt;=2)
YShift(21,25)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="ij.sc">
/* Y direction */
ResYAnchor(0,11)
YShift(0,7)
YAnchor(11,58)
YShift(11,17)
YShift(17,16)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="ij.sc.ss01">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(0)	/* min */
YAnchor(11)	/* max */

/* YDir: Stroke #0 */
YShift(0,7) /*perpendicular to the stroke*/

/* Contour #1 */
YShift(11,17) /* max */
YShift(0,16) /* min */

Smooth()

    </glyphProgram>

    <glyphProgram name="infinity">
/* Y direction */
YAnchor(0)
YShift(0,48)
YShift(0,24)
YAnchor(24)
YShift(24,56)
YShift(24,40)
YAnchor(40)
YShift(40,8)
YShift(0,32)
YAnchor(32)
YShift(32,16)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="integral">
/* Y direction */
YAnchor(0)
YShift(0,6)
YAnchor(13)
YShift(13,20)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="j.sc">
/* Y direction */
YAnchor(0,11)
YShift(0,7)
YAnchor(12,58)
YShift(12,11)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="j.sc.ss01">
/* Y direction */
YAnchor(0)
YShift(0,7)
YAnchor(12,58)
YShift(12,11)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="k">
/* Y direction */
ResYAnchor(3,6)
ResYAnchor(6,10)
YShift(6,10)
YInterpolate(6,0,1,5,11,4,12,3)
ResYAnchor(7,0)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="k.sc">
/* Y direction */
YAnchor(2,58)
YShift(2,8)
YAnchor(6)
YShift(6,10)
YInterpolate(6,0,1,5,11,4,12,2)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="kgreenlandic">
/* Y direction */
ResYAnchor(6,10)
YShift(6,10)
YAnchor(10)
ResYAnchor(7,6)
YShift(7,2)
YAnchor(2)
YInterpolate(6,0,1,11,12,7)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="l">
/* Y direction */
ResYAnchor(0,10)
ResYAnchor(1,0)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="l.sc">
/* Y direction */
YAnchor(0)
YShift(0,3)
YAnchor(1,58)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="l.ss01">
/* Y direction */
ResYAnchor(0,11)
YShift(0,9)
ResYAnchor(4,0)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="less">
/* Y direction */
YAnchor(0,18)
YShift(0,7)
YShift(0,3)
YAnchor(3)
YShift(3,4)
YInterpolate(0,5,6,2,1,3)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="lessequal">
/* Y direction */
YAnchor(11)
YShift(11,10)
YUpToGrid(0)
YShift(10,0)
YAnchor(0)
YShift(0,7)
YShift(0,3)
YAnchor(3)
YShift(3,4)
YInterpolate(0,6,5,1,2,3)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="lira">
/* Y direction */
ResYAnchor(0,12)
YShift(0,1)
YShift(0,20)
ResYAnchor(9,5)
YShift(9,16)
YIPAnchor(0,22,9)
YShift(22,21)
YDist(22,25,&gt;=)
YShift(25,26)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="logicalnot">
/* Y direction */
YAnchor(5)
YShift(5,4)
YShift(4,2)
YAnchor(2)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="longs">
/* Y direction */
ResYAnchor(4,1)
YShift(4,11)
ResYAnchor(15,10)
YAnchor(17)
YShift(17,16)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="lozenge">
/* Y direction */
YAnchor(0)
YShift(0,4)
YAnchor(2)
YShift(2,6)
YInterpolate(0,3,7,1,5,2)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="m">
/* Y direction */
ResYAnchor(26,10)
YShift(26,6)
YShift(26,16)
ResYAnchor(27,6)
ResYAnchor(33,7)
YShift(33,20)
YShift(33,0)
YShift(0,10)
YInterpolate(26,36,37,29,30,33)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="m.sc">
/* Y direction */
YAnchor(0)
YShift(0,8)
YAnchor(1,58)
YShift(1,6)
YInterpolate(0,12,4,9,13,1)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="m.sc.ss01">
/* Y direction */
YAnchor(0,58)
YShift(0,9)
YShift(0,25)
YAnchor(25)
YAnchor(4)
YShift(4,14)
YShift(4,23)
YIPAnchor(0,30,4)
YInterpolate(30,26,34,4)
YShift(30,18)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="minus">
/* Y direction */
YAnchor(0)
YShift(0,1)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="minute">
/* Y direction */
ResYAnchor(1,2)
YDist(1,0,&gt;=)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="multiply">
/* Y direction */
YAnchor(3)
YShift(3,0)
YShift(3,1)
YAnchor(1)
YShift(1,2)
YShift(1,5)
YAnchor(5)
YShift(5,4)
YShift(3,7)
YAnchor(7)
YShift(7,6)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="n">
/* Y direction */
ResYAnchor(0,7)
YShift(0,10)
ResYAnchor(16,10)
YShift(16,6)
YInterpolate(16,19,20,0)
ResYAnchor(17,6)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="n.sc">
/* Y direction */
YAnchor(0)
YShift(0,8)
YAnchor(1,58)
YShift(1,6)
YInterpolate(0,4,9,1)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="n.sc.ss01">
/* Y direction */
YAnchor(0,58)
YShift(0,9)
YShift(0,16)
YAnchor(16)
YAnchor(4)
YShift(4,14)
YInterpolate(14,12,17,18,0)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="nine">
/* Y direction */
ResYAnchor(0,5)
YShift(0,34)
ResYAnchor(8,13)
YShift(8,15)
YIPAnchor(0,26,8)
YInterpolate(0,22,45,21,26)
YShift(26,41)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="nine.dnom">
/* Y direction */
YAnchor(0,13)
YShift(0,7)

YLink(0,25,61)
YShift(25,39)


YIPAnchor(0,17,25)
YShift(17,32)

YInterpolate(17,10,28,35,14,13,25)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="nine.tf">
/* Y direction */
ResYAnchor(0,5)
YShift(0,36)
ResYAnchor(9,13)
YShift(9,16)
YIPAnchor(0,28,9)
YInterpolate(0,24,48,23,4,20,28)
YShift(28,44)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="nine.tosf">
/* Y direction */
YAnchor(0,60)
YShift(0,36)
YAnchor(9)
YShift(9,16)
YIPAnchor(0,28,9)
YInterpolate(0,24,48,23,4,20,28)
YShift(28,44)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="notequal">
/* Y direction */
YAnchor(8)
YDist(8,5,&gt;=)
YShift(5,4)
YShift(4,0)
YShift(8,9)
YShift(9,1)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="numbersign">
/* Y direction */
YAnchor(0,8)
ResYAnchor(1,2)
YAnchor(8,8)
ResYAnchor(9,2)
YIPAnchor(8,5,9)
YShift(5,4)
YDist(5,12,&gt;=)
YShift(12,13)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="o">
/* Y direction */
ResYAnchor(0,11)
YShift(0,16)
ResYAnchor(8,7)
YShift(8,24)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="o.sc">
/* Y direction */
YAnchor(0,11)
YShift(0,16)
YAnchor(8,58)
YShift(8,24)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="oe">
/* Y direction */
ResYAnchor(0,11)
YShift(0,16)
YShift(0,32)
YShift(32,64)
ResYAnchor(8,7)
YShift(8,24)
YShift(8,40)
YShift(40,55)
YIPAnchor(8,48,0)
YShift(48,49)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="oe.sc">
/* Y direction */
YAnchor(8,58)
YShift(8,11)
YShift(11,26)
YShift(26,10)
YShift(8,23)
YShift(23,9)
YAnchor(21,18)
YShift(21,20)
YShift(20,27)
YIPAnchor(21,30,8)
YShift(30,31)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="oe.ss01">
/* Y direction */
ResYAnchor(0,11)
YShift(0,16)
ResYAnchor(8,7)
YShift(8,24)
ResYAnchor(32,11)
YShift(32,61)
ResYAnchor(40,7)
YShift(40,52)
YInterpolate(32,45,46,44,48,47,40)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="ohorn">
/* Y direction */
ResYAnchor(0,11)
YShift(0,37)
ResYAnchor(8,7)
YDist(8,19,&gt;=)
YShift(19,18)
YShift(8,45)
YShift(45,30)
YShift(30,29)
YShift(29,26)
YShift(26,12)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="ohorn.sc">
/* Y direction */
ResYAnchor(0,11)
YShift(0,37)
YAnchor(8,58)
YDist(8,18,&gt;=)
YShift(18,17)
YShift(8,45)
YShift(45,28)
YShift(28,29)
YShift(29,12)
YShift(29,25)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="one">
/* Y direction */
ResYAnchor(4,4)
YShift(4,3)
YShift(3,1)
ResYAnchor(6,12)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="one.dnom">
/* Y direction */
YAnchor(4,12)

YLink(4,11,61)
YShift(11,10,8)


YShift(4,5,1,7,0)

Smooth()

    </glyphProgram>

    <glyphProgram name="one.osf">
/* Y direction */
YAnchor(0)
YAnchor(4,59)
YShift(4,3)
YShift(3,1)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="one.tf">
/* Y direction */
YAnchor(4)
YShift(4,5,1)
YShift(5,7)
YShift(7,0)
ResYAnchor(11,4)
YShift(11,10)
YShift(10,8)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="one.tosf">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

/* Y direction */
YAnchor(4)
YShift(4,5,1)
YShift(5,7)
YShift(7,0)
YAnchor(11,59)
YShift(11,10)
YShift(10,8)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="ordfeminine">
/* Y direction */
YAnchor(13)
YShift(13,6)
YShift(13,18)
YAnchor(18)
YShift(18,0)
YAnchor(0)
YShift(18,33)
YIPAnchor(18,26,13)
YShift(26,25)
YShift(26,36)
YShift(36,37)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="ordmasculine">
/* Y direction */
YAnchor(8)
YShift(8,22)
YShift(8,0)
YAnchor(0)
YShift(0,16)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="p">
/* Y direction */
ResYAnchor(0,11)
YShift(0,23)
ResYAnchor(8,7)
YShift(8,31)
ResYAnchor(16,14)
ResYAnchor(17,6)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="p.sc">
/* Y direction */
YAnchor(0)
YAnchor(1,58)
YIPAnchor(1,11,0)
YShift(11,12)
YShift(11,15)
YShift(1,23)
YShift(23,24)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="paragraph">
/* Y direction */
YAnchor(0)
YShift(0,12)
YAnchor(12)
YUpToGrid(9)
YAnchor(9)
YShift(9,1)
YShift(9,14)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="parenleft">
/* VTTTalk Unicode 0x28 (() */
/* ACT generated Wed May  6 15:33:15 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(0)	/* min */
YAnchor(6)	/* max */

Smooth()

    </glyphProgram>

    <glyphProgram name="parenright">
/* VTTTalk Unicode 0x29 ()) */
/* ACT generated Wed May  6 15:33:15 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(0)	/* min */
YAnchor(7)	/* max */

Smooth()

    </glyphProgram>

    <glyphProgram name="partialdiff">
/* Y direction */
ResYAnchor(0,19)
YShift(0,35)
YAnchor(27)
YShift(27,20)
YIPAnchor(27,8,0)
YInterpolate(8,39,13,0)
YShift(8,43)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="percent">
/* Y direction */
ResYAnchor(12,5)
YShift(12,1)
YAnchor(1)
YShift(12,26)
YDist(12,4,&gt;=)
YShift(4,20)
ResYAnchor(32,13)
YShift(32,3)
YAnchor(3)
YShift(32,48)
YDist(32,40,&gt;=)
YShift(40,54)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="period">
/* Y direction */
ResYAnchor(0,11)
YShift(0,6)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="period.sc">
/* Y direction */
ResYAnchor(0,11)
YShift(0,6)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="periodcentered">
/* Y direction */
YAnchor(0)
YShift(0,6)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="periodcentered.loclCAT">
/* Y direction */
YAnchor(0)
YShift(0,6)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="periodcentered.loclCAT.case">
/* Y direction */
YAnchor(0)
YShift(0,6)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="periodcentered.loclCAT.sc">
/* Y direction */
YAnchor(0)
YShift(0,6)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="periodcentered.sc">
/* Y direction */
YAnchor(0)
YShift(0,6)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="perthousand">
/* Y direction */
YAnchor(12,5)
YShift(12,1)
YAnchor(1)
YShift(12,26)
YDist(12,4,&gt;=)
YShift(4,20)
YAnchor(32,13)
YShift(32,3)
YAnchor(3)
YShift(32,48)
YDist(32,40,&gt;=)
YShift(40,54)
YShift(40,68)
YAnchor(68)
YShift(68,82)
YShift(32,60)
YAnchor(60)
YShift(60,76)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="pi">
/* Y direction */
ResYAnchor(7,6)
YShift(7,10)
YShift(7,18)
YShift(7,22)
ResYAnchor(17,10)
YShift(17,21)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="plus">
/* Y direction */
YAnchor(5)
YShift(5,1)
YShift(5,4)
YShift(4,0)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="plusminus">
/* Y direction */
YAnchor(0)
YShift(0,1)
YUpToGrid(4)
YShift(1,4)
YAnchor(4)
YShift(4,8)
YAnchor(8)
YShift(8,9)
YShift(9,5)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="prime">
/* Y direction */
ResYAnchor(1,2)
YDist(1,0,&gt;=2)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="product">
/* Y direction */
YAnchor(0)
YShift(0,4)
ResYAnchor(1,2)
YShift(1,6)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="q">
/* Y direction */
ResYAnchor(0,11)
YShift(0,16)
ResYAnchor(8,7)
YShift(8,24)
ResYAnchor(32,14)
ResYAnchor(36,6)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="q.sc">
/* Y direction */
YAnchor(8,58)
YShift(8,39)
YAnchor(16)
YShift(16,25)
YAnchor(0,11)
YShift(0,31)
YShift(0,20)
YShift(20,21)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="q.sc.ss01">
/* Y direction */
YAnchor(8,11)
YShift(8,0)
YAnchor(0)
YShift(8,24)
YShift(24,3)
YAnchor(3)
YAnchor(16,58)
YShift(16,32)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="q.sc.ss01.BRACKET.170">
/* Y direction */
YAnchor(4,11)
YDist(4,0,&gt;=)
YShift(4,20)
YInterpolate(4,1,20)
YAnchor(12)
YShift(12,28)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="question">
/* Y direction */
ResYAnchor(17,3)
YShift(17,10)
ResYAnchor(29,9)
YShift(29,35)
YShift(35,0)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="question.sc">
/* Y direction */
YAnchor(16,58)
YShift(16,9)
YAnchor(27)
YShift(27,33)
YShift(33,0)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="questiondown">
/* Y direction */
YAnchor(0)
YShift(0,22)
ResYAnchor(35,7)
YShift(35,29)
YShift(29,11)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="questiondown.sc">
/* Y direction */
YAnchor(0)
YShift(0,20)
YAnchor(33,58)
YShift(33,27)
YShift(27,10)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="quoteleft">
/* Y direction */
YAnchor(8)
YDist(8,16,&gt;=2)
YInterpolate(16,15,2,1,8)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="quoteleft.sc">
/* Y direction */
YAnchor(8)
YDist(8,0,&gt;=2)
YInterpolate(0,2,1,8)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="quoteright">
/* Y direction */
YAnchor(8)
YDist(8,0,&gt;=2)
YInterpolate(0,2,8)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="quoteright.sc">
/* Y direction */
YAnchor(0)
YDist(0,8,&gt;=2)
YInterpolate(8,1,2,0)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="quotesinglbase">
/* Y direction */
YUpToGrid(8)
YAnchor(8)
YDist(8,0,&gt;=2)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="quotesinglbase.sc">
/* Y direction */
YAnchor(8)
YDist(8,0,&gt;=)
YInterpolate(0,2,1,8)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="quotesingle">
/* Y direction */
ResYAnchor(1,2)
YDist(1,0,&gt;=)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="quotesingle.sc">
/* Y direction */
YAnchor(1,58)
YDist(1,0,&gt;=2)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="r">
/* Y direction */
ResYAnchor(0,10)
ResYAnchor(1,6)
YInterpolate(0,3,4,1)
ResYAnchor(7,7)
YShift(7,11)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="r.sc">
/* Y direction */
YAnchor(0)
YShift(0,14)
YAnchor(1,58)
YShift(1,27)
YIPAnchor(1,11,0)
YShift(11,19)
YShift(19,15)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="radical">
/* Y direction */
YAnchor(0)
YAnchor(2)
YShift(2,9)
YIPAnchor(0,6,2)
YShift(6,5)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="registered">
/* Y direction */
ResYAnchor(0,9)
YShift(0,24)
YShift(24,44)
YAnchor(44)
YShift(44,20)
YAnchor(20)
ResYAnchor(10,3)
YShift(10,34)
YShift(34,45)
YAnchor(45)
YShift(45,63)
YIPAnchor(44,53,45)
YShift(53,55)
YShift(55,21)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="s">
/* Y direction */
ResYAnchor(0,11)
YShift(0,7)
ResYAnchor(22,7)
YShift(22,29)
YInterpolate(0,40,10,32,18,22)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="s.sc">
/* Y direction */
YAnchor(4,11)
YShift(4,11)
YAnchor(26,58)
YShift(26,33)
YInterpolate(4,14,0,36,22,26)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="second">
/* Y direction */
ResYAnchor(1,2)
YShift(1,5)
YDist(1,0,&gt;=)
YShift(0,4)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="section">
/* Y direction */
ResYAnchor(16,3)
YShift(16,24)
YAnchor(38)
YShift(38,46)
YInterpolate(38,72,49,0,1,35,4,64,57,61,60,27,12,16)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="seven">
/* Y direction */
ResYAnchor(0,12)
ResYAnchor(7,4)
YShift(7,3)
YShift(3,4)
YShift(3,1)
YShift(1,9)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="seven.dnom">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */



/* Y direction */
YAnchor(0,12)

YLink(0,7,61)
YShift(7,3,4,1,9)



Smooth()

    </glyphProgram>

    <glyphProgram name="seven.osf">
/* Y direction */
YAnchor(0)
YAnchor(7,59)
YShift(7,3)
YShift(3,4,1,9)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="seven.tf">
/* Y direction */
YAnchor(0)
ResYAnchor(7,4)
YShift(7,6)
YAnchor(6)
YShift(7,3)
YShift(3,4)
YShift(3,1)
YShift(1,9)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="seven.tosf">
/* Y direction */
YAnchor(0)
YAnchor(7,59)
YShift(7,6)
YAnchor(6)
YShift(7,3)
YShift(3,4)
YShift(3,1)
YShift(1,9)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="six">
/* Y direction */
ResYAnchor(0,13)
YShift(0,34)
ResYAnchor(8,5)
YShift(8,15)
YIPAnchor(8,26,0)
YInterpolate(26,18,4,21,45,22,0)
YShift(26,41)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="six.dnom">
/* Y direction */
YAnchor(0,13)
YShift(0,32)
YLink(0,7,61)
YShift(7,14)
YIPAnchor(0,24,7)
YInterpolate(0,41,21,20,3,17,24)
YShift(24,38)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="six.tf">
/* Y direction */
ResYAnchor(0,13)
YShift(0,36)
ResYAnchor(9,5)
YShift(9,16)
YIPAnchor(9,28,0)
YInterpolate(28,4,20,23,48,24,0)
YShift(28,44)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="slash">
/* VTTTalk Unicode 0x2f (/) */
/* ACT generated Wed May  6 15:33:15 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(0)	/* min */
YAnchor(1)	/* max */

Smooth()

    </glyphProgram>

    <glyphProgram name="slash.case">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(0)	/* min */
YAnchor(1)	/* max */

Smooth()

    </glyphProgram>

    <glyphProgram name="space">
/* VTTTalk Unicode 0x20 */
/* ACT generated Wed May  6 15:33:15 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/*Auto-Hinting Light is not applied: Empty glyph or glyph with one point*/

    </glyphProgram>

    <glyphProgram name="sterling">
/* Y direction */
ResYAnchor(5,5)
YShift(5,12)
ResYAnchor(17,12)
YShift(17,16)
YShift(17,18)
YIPAnchor(5,21,17)
YShift(21,22)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="summation">
/* Y direction */
YAnchor(0)
YShift(0,13)
YShift(13,1)
YShift(13,12)
ResYAnchor(5,2)
YShift(5,8)
YShift(8,4)
YShift(8,9)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="t">
/* Y direction */
ResYAnchor(0,11)
YShift(0,9)
ResYAnchor(16,6)
YDist(16,4,&gt;=)
YShift(16,15)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="t.sc">
/* Y direction */
YAnchor(0)
YAnchor(3,58)
YShift(3,2)
YShift(2,6)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="t.sc.ss01">
/* Y direction */
YAnchor(4,58)
YShift(4,11)
YShift(4,16)
YAnchor(14)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="t.ss01">
/* Y direction */
ResYAnchor(0,11)
YShift(0,9)
YAnchor(16)
YDist(16,4,&gt;=)
YShift(16,15)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="thorn">
/* Y direction */
ResYAnchor(0,11)
YShift(0,23)
ResYAnchor(8,7)
YShift(8,31)
ResYAnchor(16,14)
ResYAnchor(17,0)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="thorn.sc">
/* Y direction */
YAnchor(20,10)
YDist(20,0,&gt;=)
YShift(0,1)
YAnchor(21,58)
YDist(21,10,&gt;=)
YShift(10,9)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="three">
/* Y direction */
ResYAnchor(0,13)
YShift(0,7)
ResYAnchor(19,4)
YShift(19,18)
YShift(18,16)
YShift(16,21)
YIPAnchor(19,23,0)
YShift(23,14)
YShift(23,15)
YShift(23,22)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="three.dnom">
/* Y direction */
YAnchor(0,13)
YLink(0,19,61)
YIPAnchor(0,13,19)
YShift(13,24)
YShift(24,22)
YShift(22,15)
YShift(19,18)
YShift(18,16)
YShift(16,21)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="three.osf">
/* Y direction */
YAnchor(0)
YShift(0,7)
YAnchor(19)
YShift(19,18)
YShift(18,16)
YShift(16,21)
YIPAnchor(19,23,0)
YShift(23,14)
YShift(23,15)
YShift(23,22)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="three.tf">
/* Y direction */
ResYAnchor(0,13)
YShift(0,7)
ResYAnchor(19,4)
YShift(19,18)
YIPAnchor(0,13,19)
YShift(13,24)
YShift(24,22)
YShift(22,15)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="three.tosf">
/* Y direction */
YAnchor(0)
YShift(0,7)
YAnchor(19,59)
YShift(19,18)
YShift(18,16)
YShift(16,21)
YIPAnchor(19,23,0)
YShift(23,14)
YShift(23,15)
YShift(23,22)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="tildecomb">
/* Y direction */
YAnchor(0)
YShift(0,8)
YShift(0,17)
YDist(0,12,&gt;=2)
YShift(12,5)
YShift(12,20)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="tildecomb.loclVIET">
/* Y direction */
YAnchor(0)
YShift(0,7)
YShift(0,15)
YDist(0,11,&gt;=2)
YShift(11,4)
YShift(11,18)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="tildecomb.narrow">
/* Y direction */
YAnchor(0)
YShift(0,8)
YShift(0,17)
YDist(0,12,&gt;=2)
YShift(12,5)
YShift(12,20)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="trademark">
/* Y direction */
ResYAnchor(19,2)
YShift(19,1)
YAnchor(1)
YShift(1,13)
YShift(1,5)
YAnchor(5)
YShift(5,9)
YShift(19,16)
YAnchor(16)
YShift(16,0)
YAnchor(0)
YShift(0,8)
YAnchor(8)
YShift(8,12)
YAnchor(12)
YShift(12,4)
YShift(19,18)
YShift(18,22)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="triagdn">
/* VTTTalk Unicode 0x25bc */
/* ACT generated Wed May  6 15:33:15 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(2)	/* min */
YAnchor(0)	/* max */

Smooth()

    </glyphProgram>

    <glyphProgram name="triagup">
/* VTTTalk Unicode 0x25b2 */
/* ACT generated Wed May  6 15:33:15 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(0)	/* min */
YAnchor(1)	/* max */

Smooth()

    </glyphProgram>

    <glyphProgram name="two">
/* Y direction */
ResYAnchor(0,12)
YShift(0,26)
YShift(26,1)
YShift(26,25)
ResYAnchor(16,5)
YShift(16,9)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="two.dnom">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */


/* Y direction */
YAnchor(0,12)

YLink(0,15,61)
YShift(15,8)


YShift(0,23,22,1)

Smooth()

    </glyphProgram>

    <glyphProgram name="two.osf">
/* Y direction */
YAnchor(0)
YShift(0,26)
YShift(26,1)
YShift(26,25)
YAnchor(16,60)
YShift(16,9)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="two.tf">
/* Y direction */
YAnchor(0,12)
YShift(0,27)
YShift(27,1)
YShift(27,26)
ResYAnchor(17,5)
YShift(17,10)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="two.tosf">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */


/* Y direction */
YAnchor(0)
YShift(0,27)
YShift(27,1)
YShift(27,25)
YAnchor(16,60)
YShift(16,9)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="u">
/* Y direction */
ResYAnchor(0,11)
YShift(0,10)
ResYAnchor(5,6)
YShift(5,16)
YInterpolate(0,20,19,14,5)
ResYAnchor(17,10)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="u.sc">
/* Y direction */
YAnchor(0,11)
YShift(0,10)
YAnchor(5,58)
YShift(5,15)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="u.sc.ss01">
/* Y direction */
YAnchor(0,11)
YShift(0,9)
YShift(0,16)
YAnchor(16)
YAnchor(4,58)
YShift(4,14)
YInterpolate(0,17,18,4)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="udieresis.sc.alt">
/* Y direction */
ResYAnchor(0,11)
YShift(0,10)
YAnchor(5,58)
YShift(5,14)
YAnchor(14)
YShift(5,38)
YAnchor(38)
YShift(38,32)
YShift(38,26)
YAnchor(26)
YShift(26,20)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="udieresis.sc.alt.BRACKET.133">
/* Y direction */
ResYAnchor(0,11)
YShift(0,10)
YAnchor(5,58)
YShift(5,14)
YAnchor(14)
YShift(5,38)
YAnchor(38)
YShift(38,32)
YShift(38,26)
YAnchor(26)
YShift(26,20)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="udieresis.sc.ss01.alt">
/* Y direction */
ResYAnchor(24,11)
YShift(24,33)
YShift(33,41)
YShift(33,42)
YAnchor(28,58)
YShift(28,37)
YAnchor(37)
YShift(28,18)
YAnchor(18)
YShift(18,12)
YShift(18,6)
YAnchor(6)
YShift(6,0)
YAnchor(40,10)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="udieresis.sc.ss01.alt.BRACKET.133">
/* Y direction */
ResYAnchor(24,11)
YShift(24,33)
YShift(24,40)
YAnchor(40)
YAnchor(28,58)
YShift(28,37)
YAnchor(37)
YShift(28,18)
YAnchor(18)
YShift(18,12)
YShift(18,6)
YAnchor(6)
YShift(6,0)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="underscore">
/* VTTTalk Unicode 0x5f (_) */
/* ACT generated Wed May  6 15:33:15 2020 */


/* Y direction */
YAnchor(1)
YShift(1,0)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni00A0">
/* VTTTalk Unicode 0xa0 */
/* ACT generated Wed May  6 15:33:15 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/*Auto-Hinting Light is not applied: Empty glyph or glyph with one point*/

    </glyphProgram>

    <glyphProgram name="uni018F">
/* Y direction */
ResYAnchor(0,9)
YShift(0,15)
ResYAnchor(35,3)
YShift(35,26)
YIPAnchor(35,9,0)
YShift(9,6)
YShift(9,10)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni018F.ss01">
/* Y direction */
ResYAnchor(0,9)
YShift(0,11)
ResYAnchor(31,3)
YShift(31,22)
YInterpolate(0,7,8,4,6,5,31)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni01E4">
/* Y direction */
YAnchor(4)
YShift(4,31)
YShift(4,38)
YShift(38,34)
ResYAnchor(14,3)
YShift(14,21)
YIPAnchor(14,39,0,4)
YShift(0,1)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni01E4.ss01">
/* Y direction */
ResYAnchor(4,9)
YShift(4,31)
ResYAnchor(14,3)
YShift(14,21)
YUpToGrid(0)
YIPAnchor(4,0,14)
YInterpolate(4,35,40,34,0)
YShift(0,1)
YUpToGrid(41)
YShift(1,41)
YAnchor(41)
YAnchor(38,8)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni01E5">
/* Y direction */
ResYAnchor(0,15)
YShift(0,7)
ResYAnchor(14,6)
ResYAnchor(31,7)
YShift(31,47)
YIPAnchor(0,23,31)
YShift(23,39)
YInterpolate(7,19,20,23)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni01E5.sc">
/* Y direction */
YAnchor(8,11)
YShift(8,31)
YShift(31,35)
YAnchor(16,58)
YShift(16,23)
YIPAnchor(8,0,16)
YShift(0,1)
YShift(1,36)
YAnchor(36)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni01E5.sc.ss01">
/* Y direction */
ResYAnchor(4,11)
YShift(4,35)
YAnchor(35)
YShift(4,28)
YShift(28,31)
YShift(31,32)
YAnchor(13,58)
YShift(13,20)
YIPAnchor(4,0,13)
YShift(0,1)
YShift(1,38)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni01EA">
/* Y direction */
YAnchor(0)
YShift(0,37)
ResYAnchor(11,9)
YShift(11,44)
YShift(44,7)
YShift(7,8)
YShift(8,30)
ResYAnchor(21,3)
YShift(21,54)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni01EB">
/* Y direction */
YAnchor(0)
YShift(0,33)
ResYAnchor(11,11)
YShift(11,40)
YShift(11,8)
YShift(8,7)
YShift(7,26)
ResYAnchor(19,7)
YShift(19,48)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni01EB.sc">
/* Y direction */
YAnchor(0)
YShift(0,33)
YAnchor(19,58)
YShift(19,48)
ResYAnchor(11,11)
YShift(11,40)
YShift(11,8)
YShift(8,7)
YShift(8,27)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0237">
/* VTTTalk Unicode 0x237 */
/* ACT generated Wed May  6 15:33:15 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 0 15 */
/* CVT 11 6 */
/* Min and Max */
ResYAnchor(0,15)	/* min, CVT */
ResYAnchor(11,6)	/* max, CVT */

/* CVTs - beginning */
/* CVTs - end */


/* YDir: Stroke #0 */
YShift(0,6) /*perpendicular to the stroke*/

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0259">
/* Y direction */
ResYAnchor(0,7)
YShift(0,32)
ResYAnchor(8,11)
YShift(8,23)
YIPAnchor(0,18,8)
YShift(18,15)
YShift(18,19)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0259.sc">
/* Y direction */
ResYAnchor(0,11)
YShift(0,13)
YAnchor(29,58)
YShift(29,22)
YIPAnchor(29,8,0)
YShift(8,5)
YShift(8,9)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0259.sc.ss01">
/* Y direction */
YAnchor(0,11)
YShift(0,11)
YAnchor(27,58)
YShift(27,20)
YInterpolate(0,4,7,8,5,6,27)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0259.ss01">
/* Y direction */
ResYAnchor(0,7)
YShift(0,28)
ResYAnchor(8,11)
YShift(8,20)
YInterpolate(8,16,12,14,13,0)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0292.sc">
/* Y direction */
ResYAnchor(0,11)
YShift(0,7)
YAnchor(19,58)
YIPAnchor(0,13,19)
YShift(13,24)
YShift(24,22)
YShift(22,15)
YShift(19,18)
YShift(18,21)
YShift(21,16)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni02B9">
/* Y direction */
ResYAnchor(1,2)
YDist(1,0,&gt;=)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni02BE">
/* VTTTalk Unicode 0x2be */
/* ACT generated Wed May  6 15:33:15 2020 */

/* Y direction */
YAnchor(0)
YShift(0,1)
YDist(0,8,&gt;=3)
YShift(8,7)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni02BF">
/* Y direction */
YAnchor(0)
YShift(0,15)
YDist(0,8,&gt;=3)
YShift(8,9)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni02C8">
/* Y direction */
ResYAnchor(1,2)
YDist(1,0,&gt;=)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni02C9">
/* Y direction */
YAnchor(0)
YShift(0,1)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni02CA">
/* Y direction */
YAnchor(0)
YDist(0,1,&gt;=2)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni02CB">
/* Y direction */
YAnchor(0)
YDist(0,2,&gt;=2)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni02CC">
/* Y direction */
YAnchor(1)
YDist(1,0,&gt;=)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0302">
/* Y direction */
YAnchor(7)
YShift(7,4)
YDist(7,1,&gt;=2)
YInterpolate(7,5,1)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0302.loclVIET">
/* Y direction */
YAnchor(7)
YShift(7,4)
YDist(7,1,&gt;=2)
YShift(1,5)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0302.narrow">
/* Y direction */
YAnchor(7)
YDelta(7,1@12)
YShift(7,4)
YDist(7,1,&gt;=2)
YInterpolate(7,5,1)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0304">
/* Y direction */
YAnchor(0)
YShift(0,1)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0304.loclVIET">
/* Y direction */
YAnchor(0)
YShift(0,1)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0304.narrow">
/* Y direction */
YAnchor(0)
YShift(0,1)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0306">
/* Y direction */
YAnchor(0)
YShift(0,7)
YDist(0,4,&gt;=2)
YShift(4,10)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0306.loclVIET">
/* Y direction */
YAnchor(0)
YShift(0,7)
YDist(0,3,&gt;=2)
YShift(3,10)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0306.narrow">
/* Y direction */
YAnchor(0)
YDelta(0,1@12;14)
YShift(0,7)
YDist(0,3,&gt;=2)
YShift(3,10)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0307">
/* Y direction */
YAnchor(0)
YShift(0,6)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0307.i">
/* Y direction */
YAnchor(0)
YShift(0,6)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0307.loclVIET">
/* Y direction */
YAnchor(0)
YShift(0,6)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0308">
/* Y direction */
YAnchor(12)
YShift(12,18)
YShift(12,0)
YShift(0,6)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0308.loclVIET">
/* Y direction */
YAnchor(12)
YShift(12,18)
YShift(12,0)
YAnchor(0)
YShift(0,6)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0308.narrow">
/* Y direction */
YAnchor(12)
YShift(12,18)
YShift(12,0)
YShift(0,6)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni030A">
/* Y direction */
YAnchor(8)
YShift(8,22)
YDist(8,0,&gt;=3)
YShift(0,16)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni030A0301">
/* Y direction */
YAnchor(8,17)
YShift(8,22)
YDist(8,0,&gt;=3)
YShift(0,16)
YShift(8,28)
YShift(28,29)
YShift(28,30)
YShift(30,31)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni030B">
/* Y direction */
YAnchor(4)
YShift(4,0)
YDist(4,5,&gt;=2)
YShift(5,1)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni030C">
/* Y direction */
YAnchor(0)
YDist(0,2,&gt;=2)
YShift(2,5)
YInterpolate(0,4,2)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni030C.alt">
/* Y direction */
YAnchor(0)
YDist(0,1,&gt;=)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni030C.alt.short">
/* Y direction */
YAnchor(1)
YDist(1,0,&gt;=2)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni030C.loclVIET">
/* Y direction */
YAnchor(0)
YDist(0,2,&gt;=2)
YShift(2,5)
YInterpolate(0,3,4,2)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni030C.narrow">
/* Y direction */
YAnchor(0)
YShift(0,4)
YDist(0,2,&gt;=2)
YShift(2,5)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni030F">
/* Y direction */
YAnchor(4)
YShift(4,0)
YDist(4,6,&gt;=2)
YShift(6,1)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0311">
/* Y direction */
YAnchor(0)
YShift(0,7)
YDist(0,3,&gt;=2)
YShift(3,10)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0311.narrow">
/* Y direction */
YAnchor(0)
YShift(0,7)
YDist(0,3,&gt;=2)
YShift(3,10)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0312">
/* Y direction */
YAnchor(7)
YDist(7,0,&gt;=2)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni031B">
/* Y direction */
YAnchor(9)
YShift(9,8)
YDist(9,15,&gt;=2)
YShift(15,2)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0324">
/* Y direction */
YDownToGrid(6)
YAnchor(6)
YShift(6,0)
YDownToGrid(18)
YAnchor(18)
YShift(18,12)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0326">
/* Y direction */
YDownToGrid(8)
YAnchor(8)
YDist(8,0,&gt;=2)
YInterpolate(0,2,1,8)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0326.alt">
/* Y direction */
YAnchor(8)
YDist(8,0,&gt;=2)
YInterpolate(8,2,1,0)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0327">
/* Y direction */
YAnchor(15)
YDist(15,0,&gt;=3)
YShift(0,7)
YShift(15,17)
YShift(17,14)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0328">
/* Y direction */
YAnchor(7)
YShift(7,8)
YDist(7,0,&gt;=3)
YShift(0,15)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0328.i">
/* Y direction */
YAnchor(6)
YDist(6,0,&gt;=)
YShift(0,13)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni032E">
/* Y direction */
YDownToGrid(3)
YAnchor(3)
YShift(3,10)
YDist(3,0,&gt;=2)
YShift(0,7)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0331">
/* Y direction */
YAnchor(1)
YShift(1,0)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0335">
/* Y direction */
YAnchor(0)
YShift(0,1)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0335.case">
/* Y direction */
YAnchor(0)
YShift(0,1)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0335.sc">
/* Y direction */
YAnchor(0)
YShift(0,1)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0335.t">
/* Y direction */
YAnchor(0)
YShift(0,1)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0336">
/* Y direction */
YAnchor(0)
YShift(0,1)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0336.sc">
/* Y direction */
YAnchor(0)
YShift(0,1)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0337">
/* Y direction */
YAnchor(0)
YShift(0,1)
YDist(0,2,&gt;=2)
YShift(2,3)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0337.case">
/* Y direction */
YAnchor(0)
YDist(0,2,&gt;=)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0338">
/* VTTTalk Unicode 0x338 */
/* ACT generated Wed May  6 15:33:15 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(0)	/* min */
YAnchor(1)	/* max */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0338.case">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(0)	/* min */
YAnchor(1)	/* max */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0338.sc">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(0)	/* min */
YAnchor(1)	/* max */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0394">
/* Y direction */
ResYAnchor(2,8)
YShift(2,5)
YShift(5,4,7)
ResYAnchor(3,2)
YShift(3,8)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni03A9">
/* Y direction */
ResYAnchor(0,8)
YShift(0,1)
YShift(0,21)
YAnchor(21)
YShift(21,18)
YShift(18,22)
YShift(22,38)
ResYAnchor(10,3)
YShift(10,30)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni03BC">
/* Y direction */
ResYAnchor(0,14)
ResYAnchor(1,6)
YShift(1,12)
YAnchor(12)
ResYAnchor(13,10)
ResYAnchor(20,11)
YShift(20,6)
YInterpolate(20,23,15,1)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0402">
/* Y direction */
ResYAnchor(0,8)
YShift(0,10)
ResYAnchor(4,2)
YShift(4,6)
YShift(4,3)
YShift(3,1,8)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0404">
/* Y direction */
ResYAnchor(4,9)
YShift(4,31)
ResYAnchor(14,3)
YShift(14,21)
YIPAnchor(14,2,4)
YShift(2,3)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0406">
/* VTTTalk Unicode 0x406 */
/* ACT generated Wed May  6 15:33:15 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 0 8 */
/* CVT 1 2 */
/* Min and Max */
ResYAnchor(0,8)	/* min, CVT */
ResYAnchor(1,2)	/* max, CVT */

/* CVTs - beginning */
/* CVTs - end */


Smooth()

    </glyphProgram>

    <glyphProgram name="uni0407">
/* Y direction */
YAnchor(0,8)
ResYAnchor(1,2)
YDist(1,16,&gt;=)
YShift(16,22)
YShift(16,4)
YShift(4,10)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0409.ss01">
/* Y direction */
ResYAnchor(0,9)
YShift(0,6)
ResYAnchor(13,2)
YShift(13,28)
YShift(13,16)
YShift(16,17)
YIPAnchor(13,47,24,0)
YShift(47,40)
YShift(24,33)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni040A">
/* Y direction */
YAnchor(0,8)
ResYAnchor(1,2)
YShift(1,6)
YShift(6,25)
YIPAnchor(0,10,1)
YShift(10,3)
YShift(10,21)
YShift(21,27)
YInterpolate(27,26,22,21)
YAnchor(8,8)
YShift(8,23)
YShift(23,13)
YShift(13,12)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni040A.ss01">
/* Y direction */
ResYAnchor(0,9)
YShift(0,23)
YAnchor(8,8)
ResYAnchor(9,2)
YShift(9,14)
YIPAnchor(9,11,0)
YShift(11,15)
YShift(11,6)
YShift(6,31)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni040B">
/* Y direction */
ResYAnchor(0,8)
YShift(0,18)
ResYAnchor(4,2)
YShift(4,3)
YShift(3,6,1,8)
YIPAnchor(4,13,0)
YShift(13,22)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni040F">
/* Y direction */
ResYAnchor(6,8)
YShift(6,2)
YDist(6,3,&gt;=)
YShift(6,9)
ResYAnchor(7,2)
YShift(7,11)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0411">
/* Y direction */
ResYAnchor(0,8)
YShift(0,13)
ResYAnchor(1,2)
YShift(1,4)
YIPAnchor(1,5,0)
YShift(5,20)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0412">
/* Y direction */
ResYAnchor(0,8)
YShift(0,16)
ResYAnchor(1,2)
YShift(1,33)
YIPAnchor(1,24,0)
YShift(24,25)
YShift(24,8)
YShift(8,9)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0413">
/* Y direction */
ResYAnchor(0,8)
ResYAnchor(1,2)
YShift(1,4)
YShift(4,5)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0414">
/* Y direction */
YAnchor(0,8)
ResYAnchor(15,2)
YShift(15,2)
YAnchor(24,8)
YDist(24,18,&gt;=)
YShift(18,22)
YShift(24,19)
YShift(19,9)
YShift(9,8)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0414.loclBGR">
/* Y direction */
YAnchor(6,8)
YShift(6,1)
YDist(6,0)
YShift(0,4)
YShift(6,14)
YShift(14,10)
ResYAnchor(15,2)
YShift(15,11)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0414.ss01">
/* Y direction */
ResYAnchor(5,3)
YShift(5,15)
YAnchor(26,8)
YShift(26,21)
YShift(26,0)
YShift(0,11)
YDist(26,20)
YShift(20,24)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0416">
/* Y direction */
YAnchor(13,8)
YShift(13,17)
YShift(17,0)
ResYAnchor(25,2)
YShift(25,18)
YShift(18,10)
YIPAnchor(13,20,25)
YShift(20,23)
YShift(20,4)
YShift(4,5)

YShift(20,24,27,14,15,1,2,9,8)


/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0417">
/* Y direction */
YAnchor(25,3)
YShift(25,20)
ResYAnchor(42,9)
YShift(42,3)
YIPAnchor(42,12,25)
YShift(12,11)
YShift(12,34)
YShift(34,33)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0418">
/* Y direction */
ResYAnchor(1,2)
YShift(1,5)
ResYAnchor(9,8)
YShift(9,7)
YInterpolate(9,3,8,1)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni041A">
/* Y direction */
ResYAnchor(4,8)
YShift(4,0)
ResYAnchor(5,2)
YShift(5,14)
YIPAnchor(5,8,4)
YShift(8,9)
YShift(8,12)
YShift(12,13)
YShift(13,1)
YShift(13,2)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni041B">
/* Y direction */
ResYAnchor(0,9)
YShift(0,6)
ResYAnchor(11,2)
YShift(11,17)
YShift(17,15)
YShift(17,18)
ResYAnchor(13,8)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni041B.loclBGR">
/* Y direction */
YAnchor(5,8)
YShift(5,2)
ResYAnchor(7,2)
YShift(7,3)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni041B.ss01">
/* Y direction */
YAnchor(0,8)
YShift(0,11)
YShift(0,21)
ResYAnchor(5,3)
YShift(5,15)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni041C">
/* Y direction */
ResYAnchor(0,8)
YShift(0,8)
ResYAnchor(1,2)
YShift(1,6)
YInterpolate(0,12,3,9,13,1)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni041F">
/* Y direction */
ResYAnchor(0,8)
YShift(0,4)
ResYAnchor(1,2)
YShift(1,7)
YShift(7,8,5)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0420.ss01">
/* Y direction */
YAnchor(0)
ResYAnchor(4,3)
YShift(4,24)
YIPAnchor(4,11,0)
YShift(11,18)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0422">
/* Y direction */
ResYAnchor(0,8)
ResYAnchor(4,2)
YShift(4,3)
YShift(3,2,7,1,8)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0423">
/* Y direction */
YAnchor(12)
YShift(12,0)
ResYAnchor(14,2)
YShift(14,7)
YInterpolate(12,13,4,5,16,3,8,14)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0424">
/* Y direction */
YAnchor(12)
YShift(12,8)
YDist(12,48,&gt;=)
YShift(12,35)
YShift(35,38)
YAnchor(20)
YShift(20,0)
YDist(20,46,&gt;=)
YShift(20,27)
YShift(27,24)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0424.loclBGR">
/* Y direction */
ResYAnchor(0,9)
YShift(0,20)
YDist(0,40)
ResYAnchor(10,3)
YShift(10,30)
YDist(10,41)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0424.ss01">
/* Y direction */
ResYAnchor(0,9)
YShift(0,20)
YShift(20,40)
ResYAnchor(10,3)
YShift(10,30)
YShift(30,41)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0425">
/* Y direction */
ResYAnchor(0,2)
YShift(0,4)
ResYAnchor(10,8)
YShift(10,7)
YInterpolate(10,8,5,11,2,0)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0426">
/* Y direction */
ResYAnchor(0,8)
YShift(0,3)
YDist(0,8,&gt;=)
YShift(0,11)
YShift(11,12)
YShift(12,9)
ResYAnchor(1,2)
YShift(1,6)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0427">
/* Y direction */
ResYAnchor(7,2)
YShift(7,18)
ResYAnchor(19,8)
YIPAnchor(7,3,19)
YInterpolate(7,15,0,3)
YShift(3,12)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0428">
/* Y direction */
ResYAnchor(11,8)
YShift(11,1)
YShift(11,4)
YShift(11,6)
YShift(6,7)
YShift(11,15)
YShift(15,14)
ResYAnchor(12,2)
YShift(12,3)
YShift(12,9)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni042A">
/* Y direction */
ResYAnchor(7,8)
YShift(7,21)
ResYAnchor(10,2)
YShift(10,9)
YIPAnchor(10,12,7)
YShift(12,20)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni042A.ss01">
/* Y direction */
ResYAnchor(2,2)
YShift(2,1)
YShift(2,8)
ResYAnchor(4,9)
YShift(4,13)
YIPAnchor(2,27,4)
YShift(27,20)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni042B.ss01">
/* Y direction */
ResYAnchor(0,9)
YShift(0,9)
YShift(0,30)
YAnchor(30)
ResYAnchor(4,2)
YShift(4,31)
YIPAnchor(4,23,0)
YShift(23,16)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni042C">
/* Y direction */
ResYAnchor(7,8)
YShift(7,19)
ResYAnchor(8,2)
YIPAnchor(8,10,7)
YShift(10,18)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni042C.ss01">
/* Y direction */
ResYAnchor(0,9)
YShift(0,9)
ResYAnchor(4,2)
YIPAnchor(4,23,0)
YInterpolate(23,20,19,0)
YShift(23,16)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni042D">
/* Y direction */
ResYAnchor(4,3)
YShift(4,31)
ResYAnchor(14,9)
YShift(14,21)
YIPAnchor(4,0,14)
YShift(0,1)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni042E">
/* Y direction */
ResYAnchor(0,8)
ResYAnchor(1,2)
ResYAnchor(8,9)
YShift(8,28)
ResYAnchor(18,3)
YShift(18,38)
YIPAnchor(18,6,8)
YShift(6,3)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni042F">
/* Y direction */
ResYAnchor(11,2)
YShift(11,21)
YShift(21,19)
ResYAnchor(14,8)
YShift(14,13)
YIPAnchor(11,3,14)
YShift(3,16)
YShift(3,27)
YShift(3,1)
YShift(1,18)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0431">
/* Y direction */
ResYAnchor(0,11)
YShift(0,37)
YAnchor(12)
YShift(12,13)
YAnchor(29)
YInterpolate(29,18,17,8,16,14,11,6,19,12)
YShift(29,45)
YShift(45,25)
YShift(45,27)
YShift(45,47)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0431.loclSRB">
/* Y direction */
ResYAnchor(0,11)
YShift(0,33)
ResYAnchor(16,0)
YShift(16,18)

YIPAnchor(16,9,0)
YShift(9,41,10,26)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0432">
/* Y direction */
YAnchor(0,10)
YShift(0,16)
ResYAnchor(1,6)
YShift(1,33)
YIPAnchor(0,24,1)
YShift(24,25)
YShift(25,8)
YShift(8,9)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0432.loclBGR">
/* Y direction */
ResYAnchor(6,1)
YShift(6,51)
ResYAnchor(25,11)
YShift(25,34)
YIPAnchor(25,42,6)
YShift(42,43)
YShift(42,15)
YShift(15,16)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0433">
/* Y direction */
ResYAnchor(0,10)
ResYAnchor(1,6)
YShift(1,4)
YShift(4,5)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0433.loclBGR">
/* Y direction */
ResYAnchor(0,11)
YShift(0,38)
ResYAnchor(23,7)
YShift(23,15)
YInterpolate(0,35,4,27,12,23)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0434">
/* Y direction */
ResYAnchor(15,6)
YShift(15,2)
YAnchor(24,10)
YShift(24,0)
YShift(24,19)
YShift(24,8)
YShift(8,9)
YDist(24,25,&gt;=)
YShift(25,22)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0436">
/* Y direction */
YAnchor(13,10)
YShift(13,17)
YShift(17,0)
ResYAnchor(25,6)
YShift(25,18)
YShift(18,10)
YIPAnchor(13,20,25)
YShift(20,4)
YShift(20,23)
YShift(23,5,14,15,24,27,1,2,9,8)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0436.loclBGR">
/* Y direction */
YAnchor(12,10)
YShift(12,17)
YShift(17,0)
ResYAnchor(18,0)
YAnchor(25,6)
YShift(25,10)
YIPAnchor(12,20,25)
YShift(20,4)
YShift(20,23,24,27,14,15,1,2,9,8)
YShift(23,5)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0437">
/* Y direction */
ResYAnchor(0,11)
YShift(0,41)
ResYAnchor(16,7)
YShift(16,23)
YIPAnchor(0,33,16)
YShift(33,32)
YShift(32,8)
YShift(8,7)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0437.loclBGR">
/* Y direction */
YAnchor(0)
YShift(0,7)
ResYAnchor(31,7)
YShift(31,25)
YIPAnchor(31,17,0)
YShift(17,16)
YShift(17,40,39)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0438">
/* Y direction */
ResYAnchor(1,6)
YShift(1,5)
ResYAnchor(9,10)
YShift(9,7)
YInterpolate(9,3,8,1)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0438.ss01">
/* Y direction */
ResYAnchor(0,11)
YShift(0,18)
YAnchor(18)
YShift(0,10)
YShift(10,19)
YShift(19,20)
ResYAnchor(5,6)
YShift(5,16)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni043A">
/* Y direction */
ResYAnchor(4,10)
YShift(4,0)
ResYAnchor(5,6)
YShift(5,14)
YIPAnchor(5,8,4)
YShift(8,9,1,2,13,12)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni043A.loclBGR">
/* Y direction */
YAnchor(0)
YShift(0,7)

ResYAnchor(5,0)
ResYAnchor(14,6)

YIPAnchor(5,8,0)
YShift(8,9,1,2,13,12)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni043B">
/* Y direction */
ResYAnchor(10,6)
YShift(10,16)
YShift(16,17)
YShift(17,14)
ResYAnchor(12,10)
ResYAnchor(23,11)
YShift(23,4)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni043B.loclBGR">
/* Y direction */
ResYAnchor(0,6)
YShift(0,4)
YAnchor(1)
YShift(1,6)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni043C">
/* Y direction */
ResYAnchor(0,10)
YShift(0,8)
ResYAnchor(1,6)
YShift(1,6)
YInterpolate(0,12,4,9,13,1)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni043D">
/* VTTTalk Unicode 0x43d */
/* ACT generated Wed May  6 15:33:15 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 0 10 */
/* CVT 1 6 */
/* Min and Max */
ResYAnchor(0,10)	/* min, CVT */
ResYAnchor(1,6)	/* max, CVT */

/* CVTs - beginning */
/* CVTs - end */


/* YDir: Stroke #0 */
YInterpolate(1,10,0)
YAnchor(10)
YShift(10,3) /*perpendicular to the stroke*/

/* Extreme Max */
YShift(1,6)

/* Extreme Min */
YShift(0,8)

Smooth()

    </glyphProgram>

    <glyphProgram name="uni043F">
/* Y direction */
ResYAnchor(0,10)
YShift(0,4)
ResYAnchor(1,6)
YShift(1,7)
YShift(7,8)
YShift(8,5)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0440.ss01">
/* Y direction */
ResYAnchor(0,7)
YShift(0,27)
ResYAnchor(13,14)
ResYAnchor(8,11)
YShift(8,19)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0442">
/* Y direction */
ResYAnchor(0,10)
ResYAnchor(4,6)
YShift(4,3)
YShift(3,6)
YShift(3,1)
YShift(1,8)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0442.loclSRB">
/* Y direction */
ResYAnchor(4,11)
YShift(4,14)
ResYAnchor(9,6)
YDist(9,0,&gt;=)
YShift(0,1)
YShift(9,19)
YShift(19,29)
YInterpolate(4,34,33,41,40,9)
YAnchor(32,10)
ResYAnchor(37,11)
YShift(37,24)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0444">
/* Y direction */
ResYAnchor(4,11)
YShift(4,20)
YDist(4,42,&gt;=)
ResYAnchor(14,7)
YShift(14,10)
YDist(14,43,&gt;=)
YShift(14,31)
YShift(31,28)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0446">
/* Y direction */
ResYAnchor(0,10)
YShift(0,3)
YDist(0,8,&gt;=)
YShift(0,11)
YShift(11,9)
YShift(11,12)
ResYAnchor(1,6)
YShift(1,6)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0447">
/* Y direction */
ResYAnchor(7,6)
YShift(7,18)
ResYAnchor(19,10)
YIPAnchor(7,3,19)
YShift(3,12)
YShift(12,0)
YShift(0,15)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0447.loclBGR">
/* Y direction */
ResYAnchor(7,6)
YShift(7,19)
YAnchor(17)
YIPAnchor(7,3,17)
YInterpolate(7,16,0,3)
YShift(3,12)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0448">
/* Y direction */
YAnchor(11,10)
YShift(11,15)
YShift(15,14)
YShift(15,5)
YShift(5,1)
YShift(1,4)
YShift(4,7)
ResYAnchor(12,6)
YShift(12,2)
YShift(2,8)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0448.loclBGR">
/* Y direction */
ResYAnchor(0,11)
YShift(0,10)
YShift(0,28)
YAnchor(28)
ResYAnchor(5,6)
YShift(5,16)
YShift(5,26)
ResYAnchor(33,11)
YInterpolate(5,36,37,29,30,33)
YShift(33,20)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni044A">
/* Y direction */
ResYAnchor(7,10)
YShift(7,20)
ResYAnchor(10,6)
YShift(10,9)
YIPAnchor(10,12,7)
YShift(12,19)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni044A.loclBGR">
/* Y direction */
ResYAnchor(2,6)
YShift(2,1)
YShift(2,9)
ResYAnchor(4,11)
YShift(4,21)
YIPAnchor(2,13,4)
YShift(13,28)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni044A.ss01">
/* Y direction */
ResYAnchor(2,6)
YShift(2,1)
YShift(2,9)
ResYAnchor(4,11)
YShift(4,21)
YIPAnchor(4,13,2)
YShift(13,28)
YShift(28,10)
YShift(10,31)
YShift(31,7)
YShift(31,32)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni044B">
/* Y direction */
YAnchor(0,10)
YAnchor(4,6)
YShift(4,14)
YShift(4,21)
YShift(21,22)
YAnchor(11,10)
YShift(11,23)
YAnchor(12,6)
YShift(12,1)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni044B.ss01">
/* Y direction */
ResYAnchor(0,11)
YShift(0,17)
YShift(0,31)
YAnchor(31)
ResYAnchor(4,6)
YShift(4,32)
YAnchor(32)
YIPAnchor(4,9,0)
YShift(9,24)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni044C">
/* Y direction */
YAnchor(0,6)
YShift(0,10)
YShift(0,17)
YShift(17,18)
YAnchor(7,10)
YShift(7,19)
ResYAnchor(8,6)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni044C.loclBGR">
/* Y direction */
ResYAnchor(0,11)
YShift(0,17)
ResYAnchor(4,6)
YIPAnchor(4,9,0)
YShift(9,24)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni044C.ss01">
/* Y direction */
ResYAnchor(0,11)
YShift(0,17)
ResYAnchor(4,6)
YIPAnchor(0,9,4)
YInterpolate(0,28,27,6,9)
YShift(9,24)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni044D">
/* Y direction */
ResYAnchor(4,7)
YShift(4,27)
ResYAnchor(12,11)
YShift(12,19)
YIPAnchor(4,0,12)
YShift(0,1)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni044E">
/* Y direction */
ResYAnchor(0,10)
ResYAnchor(1,6)
ResYAnchor(8,11)
YShift(8,24)
ResYAnchor(16,7)
YShift(16,32)
YIPAnchor(16,6,8)
YShift(6,3)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni044E.loclBGR">
/* Y direction */
ResYAnchor(1,0)
ResYAnchor(8,11)
YShift(8,7)
YAnchor(7)
YShift(8,24)
YIPAnchor(1,16,6,8)
YShift(16,32)
YShift(6,3)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni044F">
/* Y direction */
ResYAnchor(9,6)
YShift(9,19)
YShift(19,17)
ResYAnchor(12,10)
YShift(12,11)
YIPAnchor(9,3,12)
YShift(3,24)
YShift(3,14)
YShift(14,13)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0452">
/* Y direction */
ResYAnchor(0,15)
YShift(0,6)
ResYAnchor(19,10)
ResYAnchor(20,0)
ResYAnchor(26,7)
YShift(26,13)
YInterpolate(19,17,22,23,26)
YDist(26,34,&gt;=)
YShift(34,35)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0454">
/* Y direction */
ResYAnchor(4,11)
YShift(4,27)
ResYAnchor(12,7)
YShift(12,19)
YIPAnchor(12,2,4)
YShift(2,3)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0459.ss01">
/* Y direction */
ResYAnchor(10,6)
YShift(10,29)
YShift(10,13)
YShift(13,14)
ResYAnchor(21,11)
YShift(21,4)
YIPAnchor(10,33,24,21)
YShift(33,48)
YShift(24,41)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni045A">
/* Y direction */
ResYAnchor(11,10)
YShift(11,7)
YShift(7,27)
ResYAnchor(12,6)
YShift(12,17)
YIPAnchor(12,14,11)
YShift(14,18)
YShift(14,9)
YShift(9,26)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni045A.ss01">
/* Y direction */
ResYAnchor(1,6)
YShift(1,24)
YAnchor(24)
ResYAnchor(19,11)
YShift(19,7)
YAnchor(7)
YShift(19,8)
YIPAnchor(1,25,3,19)
YShift(25,15)
YShift(3,6)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni045B">
/* Y direction */
ResYAnchor(4,7)
YShift(4,14)
YDist(4,0,&gt;=)
YShift(0,1)
ResYAnchor(20,10)
YShift(20,10)
YInterpolate(20,18,23,24,4)
ResYAnchor(21,0)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni045F">
/* Y direction */
ResYAnchor(6,10)
YShift(6,2)
YDist(6,3,&gt;=)
YShift(6,9)
ResYAnchor(7,6)
YShift(7,11)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0462">
/* Y direction */
ResYAnchor(0,8)
YShift(0,11)
YAnchor(1)
YIPAnchor(1,3,0)
YShift(3,18)
YDist(3,19,&gt;=)
YShift(19,20)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0462.ss01">
/* Y direction */
ResYAnchor(0,9)
YShift(0,9)
ResYAnchor(4,2)
YIPAnchor(4,23,0)
YShift(23,16)
YDist(23,30,&gt;=)
YShift(30,31)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0463">
/* Y direction */
YAnchor(11,10)
YShift(11,23)
YAnchor(12)
YAnchor(14,6)
YShift(14,4)
YDist(14,0,&gt;=)
YShift(0,1)
YShift(14,22)
YShift(22,21)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0463.ss01">
/* Y direction */
ResYAnchor(0,11)
YShift(0,17)
YAnchor(4)
YIPAnchor(4,9,0)
YShift(9,24)
YDist(9,34,&gt;=)
YShift(34,33)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni046A">
/* Y direction */
YAnchor(0,8)
YShift(0,25)
YShift(25,18)
ResYAnchor(8,2)
YShift(8,7)
YShift(8,10)
YShift(8,32)
YIPAnchor(0,26,8)
YShift(26,23)
YShift(26,6)
YShift(6,11)
YShift(6,33)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni046B">
/* Y direction */
YAnchor(0)
YShift(0,12)
YShift(0,19)
ResYAnchor(31,6)
YIPAnchor(31,21,0)
YShift(21,17)
YShift(21,5)
YShift(5,29)
YShift(29,26)
YShift(31,28)
YShift(28,30)
YShift(28,33)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0474">
/* Y direction */
ResYAnchor(0,8)
ResYAnchor(1,2)
YInterpolate(0,3,1)
YShift(1,7)
YShift(7,8)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0475">
/* Y direction */
ResYAnchor(0,10)
YShift(0,4)
ResYAnchor(1,6)
ResYAnchor(9,6)
YShift(9,10)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni048C">
/* Y direction */
YAnchor(0,8)
YShift(0,11)
YAnchor(1)
YIPAnchor(0,3,1)
YShift(3,18)
YDist(3,19,&gt;=)
YShift(19,20)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni048C.ss01">
/* Y direction */
ResYAnchor(0,9)
YShift(0,9)
ResYAnchor(4,2)
YIPAnchor(4,23,0)
YShift(23,16)
YDist(23,30,&gt;=)
YShift(30,31)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni048D">
/* Y direction */
ResYAnchor(1,6)
ResYAnchor(10,11)
YShift(10,11)
YIPAnchor(1,4,10)
YShift(4,18)
YDist(4,20,&gt;=)
YShift(20,21)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni048D.ss01">
/* Y direction */
ResYAnchor(0,11)
YShift(0,17)
ResYAnchor(4,6)
YIPAnchor(0,9,4)
YInterpolate(0,27,6,9)
YInterpolate(9,31,34,33,32,4)
YShift(9,24)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni048E">
/* Y direction */
ResYAnchor(0,8)
ResYAnchor(1,2)
YIPAnchor(1,11,0)
YShift(11,15)
YShift(15,14)
YShift(14,12)
YShift(15,28)
YAnchor(28)
YShift(28,27)
YShift(11,26)
YAnchor(26)
YShift(26,25)
YShift(1,23)
YShift(23,24)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni048F">
/* Y direction */
ResYAnchor(0,11)
YShift(0,23)
YShift(23,41)
YShift(41,42)
YShift(0,40)
YShift(40,39)
ResYAnchor(8,7)
YShift(8,31)
ResYAnchor(16,14)
ResYAnchor(17,6)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0490">
/* Y direction */
ResYAnchor(0,8)
ResYAnchor(1,2)
YDist(1,3,&gt;=)
YShift(1,6)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0491">
/* Y direction */
ResYAnchor(0,10)
ResYAnchor(1,6)
YDist(1,3,&gt;=)
YShift(1,6)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0492">
/* Y direction */
ResYAnchor(4,8)
ResYAnchor(5,2)
YIPAnchor(5,0,4)
YShift(0,1)
YShift(5,8)
YShift(8,9)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0492.loclBSH">
/* Y direction */
YAnchor(4)
ResYAnchor(5,2)
YIPAnchor(5,0,4)
YShift(0,1)
YShift(5,8)
YShift(8,9)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0493">
/* Y direction */
ResYAnchor(4,10)
ResYAnchor(5,6)
YIPAnchor(5,0,4)
YShift(0,1)
YShift(5,8)
YShift(8,9)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0493.loclBSH">
/* Y direction */
YAnchor(0)
ResYAnchor(1,6)
YShift(1,4)
YIPAnchor(1,6,0)
YShift(6,7)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0494">
/* Y direction */
ResYAnchor(0,8)
ResYAnchor(1,2)
YShift(1,4)
YShift(4,5)
YAnchor(7)
YShift(7,8)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0495">
/* Y direction */
ResYAnchor(0,10)
ResYAnchor(1,6)
YShift(1,4)
YShift(4,5)
YAnchor(7)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0499">
/* Y direction */
YAnchor(0,11)
YShift(0,41)
YShift(0,49)
YDist(0,50,&gt;=)
YAnchor(16,7)
YShift(16,23)
YIPAnchor(0,33,16)
YShift(33,32)
YShift(32,8)
YShift(8,7)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni049C">
/* Y direction */
YAnchor(4,8)
YShift(4,0)
ResYAnchor(5,2)
YShift(5,18)
YIPAnchor(4,8,5)
YShift(8,1)
YShift(8,2)
YShift(8,12)
YAnchor(12)
YShift(8,16)
YShift(8,17)
YShift(8,9)
YShift(9,13)
YAnchor(13)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni049D">
/* Y direction */
ResYAnchor(4,10)
YShift(4,0)
ResYAnchor(5,6)
YShift(5,14)
YIPAnchor(5,8,4)
YShift(8,1)
YShift(8,2)
YShift(8,12)
YShift(8,13)
YDist(8,16,&gt;=)
YShift(8,9)
YDist(9,17,&gt;=)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni049E">
/* Y direction */
ResYAnchor(8,8)
YShift(8,4)
ResYAnchor(9,2)
YShift(9,18)
YShift(9,1)
YAnchor(1)
YShift(1,0)
YIPAnchor(9,12,8)
YShift(12,13)
YShift(13,5)
YShift(13,6)
YShift(13,16)
YShift(13,17)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni049F">
/* Y direction */
ResYAnchor(8,10)
YShift(8,4)
YAnchor(9)
YIPAnchor(9,1,12,8)
YShift(1,0)
YShift(12,13,17,16,5,6)
ResYAnchor(19,6)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni04A0">
/* Y direction */
ResYAnchor(1,2)
YShift(1,0)
YShift(1,10)
YShift(1,18)
ResYAnchor(8,8)
YShift(8,4)
YIPAnchor(1,12,8)
YShift(12,13)
YShift(13,17,16,5,6)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni04A1">
/* Y direction */
ResYAnchor(1,6)
YShift(1,0)
YShift(1,10)
YShift(1,18)
ResYAnchor(8,10)
YShift(8,4)
YIPAnchor(1,12,8)
YShift(12,13,16,17,5,6)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni04A6">
/* Y direction */
YAnchor(15)
YShift(15,10)
YAnchor(23)
YShift(23,2)
YAnchor(24,8)
YShift(24,28)
ResYAnchor(25,2)
YShift(25,31)
YShift(31,32)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni04A7">
/* Y direction */
ResYAnchor(0,10)
YShift(0,4)
ResYAnchor(1,6)
YShift(1,7)
YShift(7,8)
YShift(8,5)
YAnchor(10)
YShift(10,11)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni04A8">
/* Y direction */
ResYAnchor(0,9)
YShift(0,16)
YShift(0,35)
YShift(35,34)
ResYAnchor(45,3)
YShift(45,25)
YShift(45,8)
YShift(8,9)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni04A9">
/* Y direction */
ResYAnchor(0,11)
YShift(0,15)
YShift(0,33)
YShift(33,32)
ResYAnchor(7,7)
YShift(7,43)
YShift(43,23)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni04AD">
/* Y direction */
ResYAnchor(0,10)
YShift(0,13)
YDist(13,10,&gt;=)
YShift(13,14)
YShift(14,11)
ResYAnchor(4,6)
YShift(4,3)
YShift(3,7)
YShift(7,8)
YShift(8,1)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni04B4">
/* Y direction */
ResYAnchor(4,2)
YShift(4,11)
YShift(4,3)
YShift(3,1)
YShift(3,6)
YShift(3,8)
YAnchor(9,8)
YShift(9,0)
YShift(9,13)
YShift(9,21)
YDist(21,18,&gt;=)
YShift(21,17)
YShift(17,19)
YShift(4,15)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni04B5">
/* Y direction */
ResYAnchor(0,10)
YShift(0,3)
YDist(0,8,&gt;=)
YShift(0,11)
YShift(11,9)
YShift(11,12)
ResYAnchor(18,6)
YShift(18,2)
YShift(18,6)
YShift(18,17)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni04B8">
/* Y direction */
ResYAnchor(11,2)
YShift(11,22)
ResYAnchor(23,8)
YIPAnchor(11,7,23)
YInterpolate(11,19,4,7)
YShift(7,0)
YAnchor(0)
YShift(7,16)
YShift(16,1)
YAnchor(1)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni04B9">
/* Y direction */
ResYAnchor(11,6)
YShift(11,22)
ResYAnchor(23,10)
YIPAnchor(11,7,23)
YShift(7,0)
YAnchor(0)
YShift(7,16)
YShift(16,1)
YAnchor(1)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni04BA">
/* Y direction */
ResYAnchor(16,8)
YShift(16,15)
ResYAnchor(17,2)
YIPAnchor(17,11,16)
YShift(11,4)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni04BC">
/* Y direction */
ResYAnchor(0,9)
YShift(0,47)
ResYAnchor(10,3)
YShift(10,37)
YIPAnchor(10,19,0)
YShift(19,30)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni04BD">
/* Y direction */
ResYAnchor(12,11)
YShift(12,44)
ResYAnchor(20,7)
YShift(20,35)
YIPAnchor(20,10,29,12)
YShift(10,1)
YShift(29,28)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni04C0">
/* VTTTalk Unicode 0x4c0 */
/* ACT generated Wed May  6 15:33:15 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 0 8 */
/* CVT 1 2 */
/* Min and Max */
ResYAnchor(0,8)	/* min, CVT */
ResYAnchor(1,2)	/* max, CVT */

/* CVTs - beginning */
/* CVTs - end */


Smooth()

    </glyphProgram>

    <glyphProgram name="uni04C3">
/* Y direction */
ResYAnchor(0,8)
ResYAnchor(1,2)
YShift(1,10)
YAnchor(12)
YShift(12,17)
YIPAnchor(1,5,12)
YShift(5,4)
YShift(5,9)
YShift(9,8)
YShift(9,26)
YShift(26,25)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni04C4">
/* Y direction */
ResYAnchor(0,15)
YShift(0,5)
ResYAnchor(21,10)
ResYAnchor(22,6)
YShift(22,31)
YIPAnchor(22,26,0)
YShift(26,25,30,29,12,13)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni04C7">
/* Y direction */
YAnchor(10,8)
ResYAnchor(11,2)
YShift(11,15)
YIPAnchor(10,8,11)
YShift(8,13)
YAnchor(20,9)
YShift(20,3)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni04C8">
/* Y direction */
ResYAnchor(0,15)
YShift(0,6)
ResYAnchor(13,10)
ResYAnchor(14,6)
YShift(14,19)
YIPAnchor(14,16,0)
YShift(16,11)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni04CB">
/* Y direction */
ResYAnchor(4,2)
YShift(4,24)
YAnchor(16)
YIPAnchor(4,0,16)
YShift(0,9)
YShift(9,13)
YShift(13,12)
ResYAnchor(20,8)
YShift(20,17)
YShift(20,21)
YShift(20,23)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni04CC">
/* Y direction */
ResYAnchor(4,6)
YShift(4,23)
ResYAnchor(19,10)
YShift(19,16)
YShift(19,20)
YShift(19,22)
YDist(19,15,&gt;=)
YIPAnchor(4,0,19)
YShift(0,9)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni04CF">
/* VTTTalk Unicode 0x4cf */
/* ACT generated Wed May  6 15:33:15 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 0 10 */
/* CVT 1 0 */
/* Min and Max */
ResYAnchor(0,10)	/* min, CVT */
ResYAnchor(1,0)	/* max, CVT */

/* CVTs - beginning */
/* CVTs - end */


Smooth()

    </glyphProgram>

    <glyphProgram name="uni04D8">
/* Y direction */
ResYAnchor(0,9)
YShift(0,17)
ResYAnchor(34,3)
YShift(34,27)
YIPAnchor(34,11,0)
YShift(11,8)
YShift(11,12)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni04D9">
/* Y direction */
ResYAnchor(0,7)
YShift(0,32)
ResYAnchor(8,11)
YShift(8,23)
YIPAnchor(0,18,8)
YShift(18,15)
YShift(15,19)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni04D9.ss01">
/* Y direction */
ResYAnchor(0,7)
YShift(0,28)
ResYAnchor(8,11)
YShift(8,20)
YInterpolate(8,12,15,16,13,14,0)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni04E0">
/* Y direction */
ResYAnchor(0,9)
YShift(0,7)
ResYAnchor(19,2)
YIPAnchor(0,13,19)
YShift(13,24)
YShift(24,22)
YShift(22,15)
YShift(19,18)
YShift(18,16)
YShift(16,21)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni04E1">
/* Y direction */
ResYAnchor(0,15)
YShift(0,7)
ResYAnchor(19,6)
YShift(19,18)
YShift(18,21)
YShift(21,16)
YIPAnchor(19,23,0)
YShift(23,14)
YShift(14,15)
YShift(15,22)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni04E8">
/* Y direction */
ResYAnchor(0,3)
YShift(0,20)
ResYAnchor(10,9)
YShift(10,31)
YIPAnchor(0,37,10)
YShift(37,25)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni04E9">
/* Y direction */
ResYAnchor(0,7)
YShift(0,16)
ResYAnchor(8,11)
YShift(8,25)
YIPAnchor(0,30,8)
YInterpolate(0,4,12,30)
YShift(30,20)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni04FA">
/* Y direction */
ResYAnchor(1,2)
YShift(1,4)
YAnchor(6)
YShift(6,12)
YIPAnchor(1,26,18,6)
YShift(26,25)
YShift(18,5)
YShift(18,19)
YShift(19,16)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni04FB">
/* Y direction */
ResYAnchor(1,6)
YShift(1,4)
YAnchor(6)
YShift(6,13)
YIPAnchor(1,27,19,6)
YShift(27,26)
YShift(19,20)
YShift(19,5)
YShift(5,17)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni04FC">
/* Y direction */
YAnchor(0,8)
ResYAnchor(2,2)
YShift(2,6)
YInterpolate(0,8,24,7,1,25,4,2)
YAnchor(10)
YShift(10,16)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni04FD">
/* Y direction */
YAnchor(0,18)
ResYAnchor(2,6)
YShift(2,6)
YInterpolate(0,21,1,22,4,2)
YAnchor(8)
YShift(8,14)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni04FE">
/* Y direction */
ResYAnchor(4,2)
YShift(4,8)
YAnchor(10)
YShift(10,13)
YIPAnchor(4,1,10)
YInterpolate(4,6,1)
YInterpolate(1,9,15,12,10)
YShift(1,0)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni04FF">
/* Y direction */
YAnchor(0)
YShift(0,12)
ResYAnchor(3,6)
YShift(3,8)
YIPAnchor(3,16,0)
YInterpolate(3,5,6,10,1,2,9,13,14,16)
YShift(16,17)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0510">
/* Y direction */
YAnchor(3,9)
YShift(3,41)
YAnchor(20,3)
YShift(20,25)
YIPAnchor(3,34,20)
YShift(34,33)
YShift(34,12)
YShift(12,11)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0511">
/* Y direction */
ResYAnchor(0,11)
YShift(0,41)
ResYAnchor(16,7)
YShift(16,23)
YIPAnchor(16,33,0)
YShift(33,32)
YShift(32,7)
YShift(7,8)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0512">
/* Y direction */
YAnchor(14,9)
YShift(14,20)
ResYAnchor(25,2)
YShift(25,8)
YAnchor(30,9)
YShift(30,3)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0513">
/* Y direction */
YAnchor(0)
YShift(0,6)
ResYAnchor(32,6)
YShift(32,12)
YShift(12,13)
YShift(13,10)
YIPAnchor(32,19,0)
YShift(19,26)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni051C">
/* Y direction */
YAnchor(0)
YShift(0,12)
ResYAnchor(1,2)
YShift(1,6)
YShift(1,10)
YInterpolate(0,8,4,13,1)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni051D">
/* Y direction */
YAnchor(0,10)
YShift(0,12)
ResYAnchor(1,6)
YInterpolate(0,4,8,13,1)
YShift(1,5)
YShift(5,9)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0527">
/* Y direction */
YAnchor(0,18)
YShift(0,25)
YShift(25,24)
YShift(25,28)
ResYAnchor(13,7)
YShift(13,4)
YAnchor(19,18)
YInterpolate(19,8,9,13)
YAnchor(20)
YAnchor(26,18)
YDist(26,23,&gt;=)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0528">
/* Y direction */
YAnchor(0)
ResYAnchor(7,2)
YShift(7,12)
YIPAnchor(7,9,0)
YShift(9,16)
YAnchor(14,18)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni0529">
/* Y direction */
ResYAnchor(0,6)
YShift(0,20)
YAnchor(3,18)
YAnchor(9)
YShift(9,15)
YIPAnchor(0,21,9)
YShift(21,5)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni052E">
/* Y direction */
YAnchor(0,9)
YShift(0,6)
ResYAnchor(11,2)
YShift(11,17)
YShift(17,18)
YAnchor(13,8)
YDist(13,24)
YShift(13,25)
YShift(13,28)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1E9E">
/* Y direction */
YAnchor(0,9)
YShift(0,7)
YAnchor(27,8)
YAnchor(32,3)
YShift(32,22)
YIPAnchor(0,42,32)
YShift(42,13)
YShift(42,39)
YShift(39,38)
YShift(39,17)
YShift(17,16)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni1EE1">
/* Y direction */
ResYAnchor(24,11)
YShift(24,61)
ResYAnchor(32,7)
YDist(32,0,&gt;=)
YShift(0,8)
YAnchor(8)
YShift(0,17)
YDist(0,12,&gt;=2)
YShift(12,5)
YShift(12,20)
YAnchor(20)
YDist(32,43,&gt;=)
YShift(43,42)
YShift(32,69)
YShift(69,54)
YShift(54,53)
YShift(53,36)
YShift(36,50)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni2007">
/* VTTTalk Unicode 0x2007 */
/* ACT generated Wed May  6 15:33:15 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/*Auto-Hinting Light is not applied: Empty glyph or glyph with one point*/

    </glyphProgram>

    <glyphProgram name="uni2008">
/* VTTTalk Unicode 0x2008 */
/* ACT generated Wed May  6 15:33:15 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/*Auto-Hinting Light is not applied: Empty glyph or glyph with one point*/

    </glyphProgram>

    <glyphProgram name="uni2009">
/* VTTTalk Unicode 0x2009 */
/* ACT generated Wed May  6 15:33:15 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/*Auto-Hinting Light is not applied: Empty glyph or glyph with one point*/

    </glyphProgram>

    <glyphProgram name="uni200A">
/* VTTTalk Unicode 0x200a */
/* ACT generated Wed May  6 15:33:15 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/*Auto-Hinting Light is not applied: Empty glyph or glyph with one point*/

    </glyphProgram>

    <glyphProgram name="uni200B">
/* VTTTalk Unicode 0x200b */
/* ACT generated Wed May  6 15:33:15 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/*Auto-Hinting Light is not applied: Empty glyph or glyph with one point*/

    </glyphProgram>

    <glyphProgram name="uni2052">
/* Y direction */
ResYAnchor(4,12)
YShift(4,0)
YAnchor(0)
YShift(4,10)
ResYAnchor(22,4)
YShift(22,1)
YAnchor(1)
YShift(22,16)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni20A6">
/* Y direction */
ResYAnchor(0,12)
YShift(0,8)
YShift(8,4)
ResYAnchor(1,4)
YShift(1,6)
YShift(1,9)
YIPAnchor(0,13,1)
YShift(13,12)
YDist(13,16,&gt;=)
YShift(16,17)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni20A6.1">
/* Y direction */
YAnchor(0,12)
YShift(0,8)
YShift(8,4)
YShift(4,3)
ResYAnchor(1,4)
YShift(1,5)
YShift(1,9)
YShift(9,10)
YIPAnchor(0,19,1)
YShift(19,18)
YDist(19,14,&gt;=)
YShift(14,15)
YShift(14,21)
YAnchor(21)
YShift(21,20)
YShift(19,24)
YAnchor(24)
YShift(24,25)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni20A9">
/* Y direction */
ResYAnchor(0,12)
YShift(0,12)
YAnchor(12)
ResYAnchor(1,4)
YShift(1,6)
YAnchor(6)
YShift(1,10)
YAnchor(10)

YIPAnchor(0,20,1)
YShift(20,21)
YDist(20,17,&gt;=)
YShift(17,16)


YInterpolate(1,13,14,4,3,8,7,0)


/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni20A9.1">
/* Y direction */
YAnchor(0,12)
YShift(0,12)
ResYAnchor(1,4)
YIPAnchor(0,19,1)
YInterpolate(0,4,3,8,7,19)
YInterpolate(19,13,14,1)
YShift(19,16)
YDist(19,20,&gt;=)
YShift(20,31)
YAnchor(31)
YShift(31,28)
YShift(19,24)
YAnchor(24)
YShift(24,27)
YShift(1,5)
YShift(5,9)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni20AD">
/* Y direction */
ResYAnchor(4,12)
YShift(4,8)
ResYAnchor(5,4)
YShift(5,12)
YIPAnchor(5,0,4)
YShift(0,1,9,10,15,14)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni20AE">
/* Y direction */
YAnchor(0,12)
YAnchor(4,4)
YShift(4,3)
YShift(3,1)
YShift(3,7)
YShift(3,8)
YInterpolate(0,15,14,16,17,11,10,12,13,4)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni20B1">
/* Y direction */
YAnchor(8,12)
ResYAnchor(9,4)
YDownToGrid(18)
YIPAnchor(8,18,1,9)
YShift(18,24)
YShift(1,0)
YDist(1,4,&gt;=)
YShift(4,5)
YShift(9,31)
YShift(31,32)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni20B1.1">
/* Y direction */
YAnchor(0,12)
YAnchor(1,4)
YIPAnchor(0,10,21,1)
YShift(10,24)
YShift(24,12)
YShift(24,22)
YShift(21,20)
YDist(21,16,&gt;=)
YShift(16,17)
YShift(16,34)
YAnchor(34)
YShift(34,33)
YShift(21,37)
YAnchor(37)
YShift(37,38)
YShift(1,31)
YShift(31,32)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni20B2">
/* Y direction */
ResYAnchor(4,13)
YDist(4,0,&gt;=)
YShift(4,31)
YShift(31,38)
ResYAnchor(14,5)
YDist(14,1,&gt;=)
YShift(14,21)
YIPAnchor(4,39,14)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni20B2.1">
/* Y direction */
YAnchor(0,13)
YDist(0,37,&gt;=)
YShift(0,27)
YShift(27,36)
YAnchor(10,5)
YDist(10,44,&gt;=)
YShift(10,17)
YShift(17,42)
YIPAnchor(10,40,0)
YInterpolate(40,38,39,31,30)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni20B4">
/* Y direction */
ResYAnchor(0,13)
YShift(0,16)
ResYAnchor(46,5)
YShift(46,39)
YIPAnchor(0,27,46)
YDist(27,24,&gt;=)
YShift(24,23)
YShift(23,7)
YShift(27,28)
YShift(28,53)
YShift(53,31)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni20B5">
/* Y direction */
ResYAnchor(4,13)
YDist(4,0,&gt;=)
YShift(4,31)
ResYAnchor(14,5)
YDist(14,1,&gt;=)
YShift(14,21)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni20B5.1">
/* Y direction */
ResYAnchor(0,13)
YDist(0,34,&gt;=)
YShift(0,27)
YShift(27,36)
ResYAnchor(10,5)
YDist(10,40,&gt;=)
YShift(10,17)
YShift(17,38)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni20B8">
/* Y direction */
YAnchor(0,12)
YAnchor(9,4)
YShift(9,8)
YDist(9,3,&gt;=2)
YShift(3,2)
YShift(2,6)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni20B9">
/* Y direction */
YAnchor(10,4)
YShift(10,9)
YDist(10,27,&gt;=2)
YShift(27,26)
YAnchor(22,12)
YDownToGrid(21)
YIPAnchor(22,21,10)
YShift(21,2)
YShift(2,23)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni20BA">
/* Y direction */
YAnchor(0)
YShift(0,3)
ResYAnchor(1,4)
YIPAnchor(0,7,1)
YInterpolate(7,18,17,19,20,13,14,15,16,1)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni20BC">
/* Y direction */
YAnchor(0)
YShift(0,11)
ResYAnchor(5,5)
YShift(5,16)
YDist(5,23,&gt;=)
YIPAnchor(0,22,5)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni20BD">
/* Y direction */
YAnchor(0,12)
ResYAnchor(1,4)
YUpToGrid(8)
YIPAnchor(0,8,1)
YShift(8,14)
YShift(14,10)
YShift(14,12)
YDist(8,24,&gt;=)
YShift(24,23)
YShift(1,21)
YShift(21,22)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni2113">
/* Y direction */
ResYAnchor(0,11)
YShift(0,22)
ResYAnchor(11,3)
YShift(11,36)
YInterpolate(11,4,7,29,19,6,5,0)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni2116">
/* Y direction */
ResYAnchor(0,12)
ResYAnchor(1,4)
YShift(1,9)
ResYAnchor(5,4)
YShift(5,24)
YAnchor(24)
YShift(24,38)
YShift(24,16)
YAnchor(16)
YShift(16,32)
YShift(16,13)
YAnchor(13)
YShift(13,12)
ResYAnchor(8,12)
YShift(8,4)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni2116.ss01">
/* Y direction */
ResYAnchor(32,3)
YShift(32,12)
YAnchor(12)
YShift(12,26)
YShift(12,4)
YAnchor(4)
YShift(4,20)
YShift(4,1)
YAnchor(1)
YShift(1,0)
YShift(32,41)
YShift(41,49)
YShift(41,50)
ResYAnchor(46,8)
YShift(46,37)
YAnchor(37)
YAnchor(47,2)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni212B">
/* Y direction */
ResYAnchor(1,2)
YShift(1,5)
YDist(1,12,&gt;=)
YShift(12,28)
YShift(12,20)
YAnchor(20)
YShift(20,34)
YAnchor(4,8)
YAnchor(7,8)
YIPAnchor(7,8,1)
YShift(8,9)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni2196">
/* Y direction */
YAnchor(3)
YAnchor(6)
YInterpolate(6,9,0,1,7,5,8,2,4,3)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni2197">
/* Y direction */
YAnchor(1)
YShift(1,0)
YShift(1,4)
YAnchor(4)
YShift(4,3)
YInterpolate(1,2,7,5,8,4)
YDownToGrid(9)
YShift(4,9)
YAnchor(9)
YShift(9,6)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni2198">
/* Y direction */
YAnchor(3)
YAnchor(6)
YInterpolate(3,4,2,8,5,7,1,0,9,6)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni2199">
/* Y direction */
YAnchor(1)
YAnchor(9)
YInterpolate(1,0,2,7,5,8,3,4,6,9)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni25A1">
/* Y direction */
YAnchor(0)
YShift(0,4)
YAnchor(1)
YShift(1,7)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni25B3">
/* Y direction */
YAnchor(0)
YShift(0,3)
YAnchor(1)
YShift(1,5)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni25B6">
/* VTTTalk Unicode 0x25b6 */
/* ACT generated Wed May  6 15:33:15 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(2)	/* min */
YAnchor(0)	/* max */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni25B7">
/* VTTTalk Unicode 0x25b7 */
/* ACT generated Wed May  6 15:33:15 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(2)	/* min */
YAnchor(0)	/* max */

/* Contour #1 */
YShift(0,3) /* max */
YShift(2,4) /* min */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni25BD">
/* Y direction */
YAnchor(0)
YShift(0,3)
YAnchor(2)
YShift(2,4)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni25C0">
/* VTTTalk Unicode 0x25c0 */
/* ACT generated Wed May  6 15:33:15 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(0)	/* min */
YAnchor(2)	/* max */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni25C1">
/* VTTTalk Unicode 0x25c1 */
/* ACT generated Wed May  6 15:33:15 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(0)	/* min */
YAnchor(2)	/* max */

/* Contour #1 */
YShift(2,4) /* max */
YShift(0,3) /* min */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni25C6">
/* Y direction */
YAnchor(1)
YAnchor(3)
YInterpolate(3,2,0,1)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni25C7">
/* Y direction */
YAnchor(1)
YShift(1,7)
YAnchor(3)
YShift(3,5)
YInterpolate(3,2,4,0,6,1)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni27E8">
/* VTTTalk Unicode 0x27e8 */
/* ACT generated Wed May  6 15:33:15 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(0)	/* min */
YAnchor(2)	/* max */

Smooth()

    </glyphProgram>

    <glyphProgram name="uni27E9">
/* VTTTalk Unicode 0x27e9 */
/* ACT generated Wed May  6 15:33:15 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(2)	/* min */
YAnchor(0)	/* max */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA78B">
/* VTTTalk Unicode 0xa78b */
/* ACT generated Wed May  6 15:33:15 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 1 16  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(0)	/* min */
YAnchor(1)	/* max */

Smooth()

    </glyphProgram>

    <glyphProgram name="uniA78C">
/* VTTTalk Unicode 0xa78c */
/* ACT generated Wed May  6 15:33:15 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* Min and Max */
YAnchor(0)	/* min */
YAnchor(1)	/* max */

Smooth()

    </glyphProgram>

    <glyphProgram name="uogonek.sc">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */

/* Auto-Hinting Light */

/* ***Settings*** */
/* ModeHinting = LightLatin */
/* ToAnchorBottom = true */


/* CVT 30 19  DISABLED for a NON-LATIN glyph */
/* Min and Max */
YAnchor(19)	/* min */
YAnchor(0)	/* max */

/* YDir: Stroke #0 */
YInterpolate(0,30,19)
YAnchor(30)
YShift(30,40) /*perpendicular to the stroke*/

/* YDir: Stroke #1 */
YShift(19,12) /*perpendicular to the stroke*/

/* Extreme Max */
YShift(0,36)

Smooth()

    </glyphProgram>

    <glyphProgram name="ustraitcy">
/* Y direction */
ResYAnchor(1,6)
YShift(1,5)
YAnchor(10,14)
YInterpolate(10,0,11,4,1)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="ustraitstrokecy">
/* Y direction */
ResYAnchor(5,6)
YShift(5,9)
YAnchor(14,14)
YIPAnchor(14,0,5)
YInterpolate(14,4,0)
YInterpolate(0,15,8,5)
YShift(0,1)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="v">
/* Y direction */
ResYAnchor(0,10)
ResYAnchor(1,6)
YShift(1,6)
YInterpolate(0,3,4,1)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="v.sc">
/* Y direction */
YAnchor(0,18)
YAnchor(1,58)
YShift(1,6)
YInterpolate(0,3,4,1)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="verticalbarcy">
/* Y direction */
YAnchor(3)
YDist(3,1,&gt;=2)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="verticalbarcy.case">
/* Y direction */
YAnchor(0)
YDist(0,1,&gt;=)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="w">
/* Y direction */
YAnchor(0,10)
YShift(0,12)
ResYAnchor(1,6)
YInterpolate(0,7,3,4,8,14,13,1)
YShift(1,5)
YShift(5,9)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="w.sc">
/* Y direction */
YAnchor(0,18)
YShift(0,12)
YAnchor(1,58)
YInterpolate(0,4,8,13,1)
YShift(1,5)
YShift(5,9)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="w.sc.ss01">
/* Y direction */
YAnchor(0)
YShift(0,10)
YShift(10,31)
YAnchor(5,58)
YShift(5,15)
YShift(5,24)
YIPAnchor(5,28,0)
YShift(28,19)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="w.ss01">
/* Y direction */
YAnchor(0)
YShift(0,9)
YShift(9,30)
ResYAnchor(4,6)
YShift(4,14)
YShift(4,23)
YIPAnchor(4,27,0)
YShift(27,18)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="x">
/* Y direction */
ResYAnchor(0,10)
YShift(0,12)
ResYAnchor(3,6)
YShift(3,8)
YInterpolate(0,2,1,6,13,5,14,10,9,3)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="x.sc">
/* Y direction */
YAnchor(0)
YShift(0,12)
YAnchor(3,58)
YShift(3,8)
YInterpolate(0,6,5,1,2,10,9,13,14,3)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="y">
/* Y direction */
ResYAnchor(0,15)
YShift(0,7)
ResYAnchor(20,6)
YShift(20,14)
YInterpolate(0,11,12,22,19,20)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="y.sc">
/* Y direction */
YAnchor(0)
YAnchor(3,58)
YShift(3,8)
YInterpolate(0,9,2,10,1,5,6,3)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="y.sc.ss01">
/* Y direction */
YAnchor(0)
YShift(0,7)
YAnchor(19,58)
YShift(19,29)
YIPAnchor(19,15,0)
YShift(15,24)
YShift(24,11)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="y.ss01">
/* Y direction */
ResYAnchor(0,6)
YShift(0,26)
YAnchor(5)
YShift(5,12)
YIPAnchor(0,20,5)
YShift(20,30)
YShift(30,16)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="yen">
/* Y direction */
ResYAnchor(0,12)
ResYAnchor(3,4)
YShift(3,8)
YAnchor(8)
YIPAnchor(3,16,0)
YShift(16,17)
YShift(16,2)
YShift(2,1)
YShift(1,9)
YShift(9,10)
YShift(10,6)
YDist(16,13,&gt;=)
YShift(13,12)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="z">
/* Y direction */
YAnchor(0,10)
YShift(0,8)
YShift(0,9)
YShift(9,1)
ResYAnchor(5,6)
YShift(5,4)
YShift(4,2)
YShift(2,7)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="z.sc">
/* Y direction */
YAnchor(0)
YShift(0,9)
YShift(9,1)
YShift(9,8)
YAnchor(5,58)
YShift(5,4)
YShift(4,2)
YShift(4,7)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="z.sc.ss01">
/* Y direction */
YAnchor(0)
YShift(0,9)
YShift(9,1)
YShift(9,8)
YAnchor(5,58)
YShift(5,4)
YShift(4,2)
YIPAnchor(5,12,0)
YShift(12,13)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="z.ss01">
/* Y direction */
YAnchor(0)
YShift(0,9)
YShift(9,1)
YShift(9,8)
ResYAnchor(5,6)
YShift(5,4)
YShift(4,2)
YShift(2,7)
YIPAnchor(5,14,0)
YShift(14,15)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="zero">
/* Y direction */
ResYAnchor(0,13)
YShift(0,16)
ResYAnchor(8,5)
YShift(8,24)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="zero.dnom">
/* Y direction */
YAnchor(0,13)
YLink(0,6,61)
YShift(0,12)
YShift(6,18)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="zero.osf">
/* Y direction */
YAnchor(0,13)
YShift(0,16)
YAnchor(8,60)
YShift(8,24)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="zero.tf">
/* VTTTalk Unicode 0xffff */
/* ACT generated Wed May  6 15:33:15 2020 */


/* Y direction */
ResYAnchor(0,13)
YShift(0,16)
ResYAnchor(8,5)
YShift(8,24)

/* X direction */

Smooth()

    </glyphProgram>

    <glyphProgram name="zero.tosf">
/* Y direction */
YAnchor(0,13)
YShift(0,16)
YAnchor(8,60)
YShift(8,24)

/* X direction */

Smooth()

    </glyphProgram>

  </TSI3>

  <TSI5>
    <glyphgroup name=".notdef" value="1"/>
    <glyphgroup name="A" value="2"/>
    <glyphgroup name="A.ss01" value="1"/>
    <glyphgroup name="AE" value="2"/>
    <glyphgroup name="AE.ss01" value="1"/>
    <glyphgroup name="AEacute" value="2"/>
    <glyphgroup name="AEacute.ss01" value="1"/>
    <glyphgroup name="Aacute" value="2"/>
    <glyphgroup name="Aacute.ss01" value="1"/>
    <glyphgroup name="Abreve" value="2"/>
    <glyphgroup name="Abreve.ss01" value="1"/>
    <glyphgroup name="Acircumflex" value="2"/>
    <glyphgroup name="Acircumflex.ss01" value="1"/>
    <glyphgroup name="Adieresis" value="2"/>
    <glyphgroup name="Adieresis.alt" value="2"/>
    <glyphgroup name="Adieresis.ss01" value="1"/>
    <glyphgroup name="Agrave" value="2"/>
    <glyphgroup name="Agrave.ss01" value="1"/>
    <glyphgroup name="Amacron" value="2"/>
    <glyphgroup name="Amacron.ss01" value="1"/>
    <glyphgroup name="Aogonek" value="2"/>
    <glyphgroup name="Aogonek.ss01" value="1"/>
    <glyphgroup name="Aring" value="2"/>
    <glyphgroup name="Aring.ss01" value="1"/>
    <glyphgroup name="Aringacute" value="2"/>
    <glyphgroup name="Aringacute.ss01" value="1"/>
    <glyphgroup name="Atilde" value="2"/>
    <glyphgroup name="Atilde.ss01" value="1"/>
    <glyphgroup name="B" value="2"/>
    <glyphgroup name="C" value="2"/>
    <glyphgroup name="CR" value="1"/>
    <glyphgroup name="Cacute" value="2"/>
    <glyphgroup name="Ccaron" value="2"/>
    <glyphgroup name="Ccedilla" value="2"/>
    <glyphgroup name="Ccircumflex" value="2"/>
    <glyphgroup name="Cdotaccent" value="2"/>
    <glyphgroup name="D" value="2"/>
    <glyphgroup name="Dcaron" value="2"/>
    <glyphgroup name="Dcroat" value="2"/>
    <glyphgroup name="E" value="2"/>
    <glyphgroup name="E.ss01" value="1"/>
    <glyphgroup name="Eacute" value="2"/>
    <glyphgroup name="Eacute.ss01" value="1"/>
    <glyphgroup name="Ebreve" value="2"/>
    <glyphgroup name="Ebreve.ss01" value="1"/>
    <glyphgroup name="Ecaron" value="2"/>
    <glyphgroup name="Ecaron.ss01" value="1"/>
    <glyphgroup name="Ecircumflex" value="2"/>
    <glyphgroup name="Ecircumflex.ss01" value="1"/>
    <glyphgroup name="Edieresis" value="2"/>
    <glyphgroup name="Edieresis.ss01" value="1"/>
    <glyphgroup name="Edotaccent" value="2"/>
    <glyphgroup name="Edotaccent.ss01" value="1"/>
    <glyphgroup name="Egrave" value="2"/>
    <glyphgroup name="Egrave.ss01" value="1"/>
    <glyphgroup name="Emacron" value="2"/>
    <glyphgroup name="Emacron.ss01" value="1"/>
    <glyphgroup name="Eng" value="2"/>
    <glyphgroup name="Eng.ss01" value="2"/>
    <glyphgroup name="Eogonek" value="2"/>
    <glyphgroup name="Eogonek.ss01" value="2"/>
    <glyphgroup name="Eth" value="2"/>
    <glyphgroup name="Euro" value="4"/>
    <glyphgroup name="F" value="2"/>
    <glyphgroup name="F.ss01" value="1"/>
    <glyphgroup name="G" value="2"/>
    <glyphgroup name="G.ss01" value="1"/>
    <glyphgroup name="Gbreve" value="2"/>
    <glyphgroup name="Gbreve.ss01" value="1"/>
    <glyphgroup name="Gcaron" value="2"/>
    <glyphgroup name="Gcaron.ss01" value="1"/>
    <glyphgroup name="Gcircumflex" value="2"/>
    <glyphgroup name="Gcircumflex.ss01" value="1"/>
    <glyphgroup name="Gdotaccent" value="2"/>
    <glyphgroup name="Gdotaccent.ss01" value="1"/>
    <glyphgroup name="H" value="2"/>
    <glyphgroup name="Hbar" value="2"/>
    <glyphgroup name="Hcircumflex" value="2"/>
    <glyphgroup name="I" value="2"/>
    <glyphgroup name="I.ss01" value="1"/>
    <glyphgroup name="IJ" value="2"/>
    <glyphgroup name="IJ.ss01" value="2"/>
    <glyphgroup name="Iacute" value="2"/>
    <glyphgroup name="Iacute.ss01" value="1"/>
    <glyphgroup name="Iacute_J.loclNLD" value="1"/>
    <glyphgroup name="Iacute_J.loclNLD.ss01" value="2"/>
    <glyphgroup name="Ibreve" value="2"/>
    <glyphgroup name="Ibreve.ss01" value="1"/>
    <glyphgroup name="Icircumflex" value="2"/>
    <glyphgroup name="Icircumflex.ss01" value="1"/>
    <glyphgroup name="Idieresis" value="2"/>
    <glyphgroup name="Idieresis.ss01" value="1"/>
    <glyphgroup name="Idotaccent" value="2"/>
    <glyphgroup name="Idotaccent.ss01" value="1"/>
    <glyphgroup name="Igrave" value="2"/>
    <glyphgroup name="Igrave.ss01" value="1"/>
    <glyphgroup name="Imacron" value="2"/>
    <glyphgroup name="Imacron.ss01" value="1"/>
    <glyphgroup name="Iogonek" value="2"/>
    <glyphgroup name="Iogonek.ss01" value="1"/>
    <glyphgroup name="Itilde" value="2"/>
    <glyphgroup name="Itilde.ss01" value="1"/>
    <glyphgroup name="J" value="2"/>
    <glyphgroup name="J.ss01" value="1"/>
    <glyphgroup name="Jcircumflex" value="2"/>
    <glyphgroup name="Jcircumflex.ss01" value="1"/>
    <glyphgroup name="K" value="2"/>
    <glyphgroup name="L" value="2"/>
    <glyphgroup name="Lacute" value="2"/>
    <glyphgroup name="Lcaron" value="2"/>
    <glyphgroup name="Ldot" value="2"/>
    <glyphgroup name="Lslash" value="2"/>
    <glyphgroup name="M" value="2"/>
    <glyphgroup name="M.ss01" value="3"/>
    <glyphgroup name="N" value="2"/>
    <glyphgroup name="N.ss01" value="1"/>
    <glyphgroup name="NULL" value="1"/>
    <glyphgroup name="Nacute" value="2"/>
    <glyphgroup name="Nacute.ss01" value="1"/>
    <glyphgroup name="Napostrophe" value="1"/>
    <glyphgroup name="Ncaron" value="2"/>
    <glyphgroup name="Ncaron.ss01" value="1"/>
    <glyphgroup name="Ntilde" value="2"/>
    <glyphgroup name="Ntilde.ss01" value="1"/>
    <glyphgroup name="O" value="2"/>
    <glyphgroup name="OE" value="2"/>
    <glyphgroup name="Oacute" value="2"/>
    <glyphgroup name="Obreve" value="2"/>
    <glyphgroup name="Ocircumflex" value="2"/>
    <glyphgroup name="Odieresis" value="2"/>
    <glyphgroup name="Ograve" value="2"/>
    <glyphgroup name="Ohorn" value="2"/>
    <glyphgroup name="Ohungarumlaut" value="2"/>
    <glyphgroup name="Omacron" value="2"/>
    <glyphgroup name="Oslash" value="2"/>
    <glyphgroup name="Oslashacute" value="2"/>
    <glyphgroup name="Otilde" value="2"/>
    <glyphgroup name="P" value="2"/>
    <glyphgroup name="Q" value="2"/>
    <glyphgroup name="Q.ss01" value="1"/>
    <glyphgroup name="Q.ss01.BRACKET.170" value="2"/>
    <glyphgroup name="R" value="2"/>
    <glyphgroup name="Racute" value="2"/>
    <glyphgroup name="Rcaron" value="2"/>
    <glyphgroup name="S" value="2"/>
    <glyphgroup name="Sacute" value="2"/>
    <glyphgroup name="Scaron" value="2"/>
    <glyphgroup name="Scedilla" value="2"/>
    <glyphgroup name="Scircumflex" value="2"/>
    <glyphgroup name="T" value="2"/>
    <glyphgroup name="T.ss01" value="1"/>
    <glyphgroup name="T_h" value="1"/>
    <glyphgroup name="Tbar" value="2"/>
    <glyphgroup name="Tbar.ss01" value="1"/>
    <glyphgroup name="Tcaron" value="2"/>
    <glyphgroup name="Tcaron.ss01" value="1"/>
    <glyphgroup name="Tdieresis" value="1"/>
    <glyphgroup name="Tdieresis.ss01" value="1"/>
    <glyphgroup name="Thorn" value="2"/>
    <glyphgroup name="U" value="2"/>
    <glyphgroup name="U.ss01" value="1"/>
    <glyphgroup name="Uacute" value="2"/>
    <glyphgroup name="Uacute.ss01" value="1"/>
    <glyphgroup name="Ubreve" value="2"/>
    <glyphgroup name="Ubreve.ss01" value="1"/>
    <glyphgroup name="Ucircumflex" value="2"/>
    <glyphgroup name="Ucircumflex.ss01" value="1"/>
    <glyphgroup name="Udieresis" value="2"/>
    <glyphgroup name="Udieresis.alt" value="2"/>
    <glyphgroup name="Udieresis.alt.BRACKET.133" value="2"/>
    <glyphgroup name="Udieresis.ss01" value="1"/>
    <glyphgroup name="Udieresis.ss01.alt" value="2"/>
    <glyphgroup name="Udieresis.ss01.alt.BRACKET.133" value="2"/>
    <glyphgroup name="Ugrave" value="2"/>
    <glyphgroup name="Ugrave.ss01" value="1"/>
    <glyphgroup name="Uhorn" value="2"/>
    <glyphgroup name="Uhorn.ss01" value="1"/>
    <glyphgroup name="Uhungarumlaut" value="2"/>
    <glyphgroup name="Uhungarumlaut.ss01" value="1"/>
    <glyphgroup name="Umacron" value="2"/>
    <glyphgroup name="Umacron.ss01" value="1"/>
    <glyphgroup name="Uogonek" value="2"/>
    <glyphgroup name="Uogonek.ss01" value="1"/>
    <glyphgroup name="Uring" value="2"/>
    <glyphgroup name="Uring.ss01" value="1"/>
    <glyphgroup name="Ustraitcy" value="2"/>
    <glyphgroup name="Ustraitstrokecy" value="2"/>
    <glyphgroup name="Utilde" value="2"/>
    <glyphgroup name="Utilde.ss01" value="1"/>
    <glyphgroup name="V" value="2"/>
    <glyphgroup name="W" value="2"/>
    <glyphgroup name="W.ss01" value="1"/>
    <glyphgroup name="Wacute" value="2"/>
    <glyphgroup name="Wacute.ss01" value="1"/>
    <glyphgroup name="Wcircumflex" value="2"/>
    <glyphgroup name="Wcircumflex.ss01" value="1"/>
    <glyphgroup name="Wdieresis" value="2"/>
    <glyphgroup name="Wdieresis.ss01" value="1"/>
    <glyphgroup name="Wgrave" value="2"/>
    <glyphgroup name="Wgrave.ss01" value="1"/>
    <glyphgroup name="X" value="2"/>
    <glyphgroup name="Y" value="2"/>
    <glyphgroup name="Y.ss01" value="1"/>
    <glyphgroup name="Yacute" value="2"/>
    <glyphgroup name="Yacute.ss01" value="1"/>
    <glyphgroup name="Ycircumflex" value="2"/>
    <glyphgroup name="Ycircumflex.ss01" value="1"/>
    <glyphgroup name="Ydieresis" value="2"/>
    <glyphgroup name="Ydieresis.ss01" value="1"/>
    <glyphgroup name="Ygrave" value="2"/>
    <glyphgroup name="Ygrave.ss01" value="1"/>
    <glyphgroup name="Z" value="2"/>
    <glyphgroup name="Z.ss01" value="1"/>
    <glyphgroup name="Zacute" value="2"/>
    <glyphgroup name="Zacute.ss01" value="1"/>
    <glyphgroup name="Zcaron" value="2"/>
    <glyphgroup name="Zcaron.ss01" value="1"/>
    <glyphgroup name="Zdotaccent" value="2"/>
    <glyphgroup name="Zdotaccent.ss01" value="1"/>
    <glyphgroup name="a" value="3"/>
    <glyphgroup name="a.sc" value="1"/>
    <glyphgroup name="a.sc.ss01" value="1"/>
    <glyphgroup name="a.ss01" value="3"/>
    <glyphgroup name="aacute" value="3"/>
    <glyphgroup name="aacute.sc" value="1"/>
    <glyphgroup name="aacute.sc.ss01" value="1"/>
    <glyphgroup name="aacute.ss01" value="1"/>
    <glyphgroup name="abreve" value="3"/>
    <glyphgroup name="abreve.sc" value="1"/>
    <glyphgroup name="abreve.sc.ss01" value="1"/>
    <glyphgroup name="abreve.ss01" value="1"/>
    <glyphgroup name="acircumflex" value="3"/>
    <glyphgroup name="acircumflex.sc" value="1"/>
    <glyphgroup name="acircumflex.sc.ss01" value="1"/>
    <glyphgroup name="acircumflex.ss01" value="1"/>
    <glyphgroup name="acute" value="1"/>
    <glyphgroup name="acutecomb" value="1"/>
    <glyphgroup name="acutecomb.case" value="1"/>
    <glyphgroup name="acutecomb.loclVIET" value="1"/>
    <glyphgroup name="adieresis" value="3"/>
    <glyphgroup name="adieresis.alt.sc" value="1"/>
    <glyphgroup name="adieresis.sc" value="1"/>
    <glyphgroup name="adieresis.sc.alt" value="3"/>
    <glyphgroup name="adieresis.sc.ss01" value="1"/>
    <glyphgroup name="adieresis.ss01" value="1"/>
    <glyphgroup name="ae" value="3"/>
    <glyphgroup name="ae.sc" value="3"/>
    <glyphgroup name="ae.sc.ss01" value="3"/>
    <glyphgroup name="ae.ss01" value="3"/>
    <glyphgroup name="aeacute" value="3"/>
    <glyphgroup name="aeacute.sc" value="1"/>
    <glyphgroup name="aeacute.sc.ss01" value="1"/>
    <glyphgroup name="aeacute.ss01" value="1"/>
    <glyphgroup name="agrave" value="3"/>
    <glyphgroup name="agrave.sc" value="1"/>
    <glyphgroup name="agrave.sc.ss01" value="1"/>
    <glyphgroup name="agrave.ss01" value="1"/>
    <glyphgroup name="amacron" value="3"/>
    <glyphgroup name="amacron.sc" value="1"/>
    <glyphgroup name="amacron.sc.ss01" value="1"/>
    <glyphgroup name="amacron.ss01" value="1"/>
    <glyphgroup name="ampersand" value="3"/>
    <glyphgroup name="ampersand.sc" value="3"/>
    <glyphgroup name="aogonek" value="3"/>
    <glyphgroup name="aogonek.sc" value="1"/>
    <glyphgroup name="aogonek.sc.ss01" value="1"/>
    <glyphgroup name="aogonek.ss01" value="1"/>
    <glyphgroup name="approxequal" value="1"/>
    <glyphgroup name="aring" value="3"/>
    <glyphgroup name="aring.sc" value="1"/>
    <glyphgroup name="aring.sc.ss01" value="1"/>
    <glyphgroup name="aring.ss01" value="1"/>
    <glyphgroup name="aringacute" value="3"/>
    <glyphgroup name="aringacute.sc" value="1"/>
    <glyphgroup name="aringacute.sc.ss01" value="1"/>
    <glyphgroup name="aringacute.ss01" value="1"/>
    <glyphgroup name="arrowboth" value="1"/>
    <glyphgroup name="arrowdown" value="1"/>
    <glyphgroup name="arrowdown.case" value="1"/>
    <glyphgroup name="arrowleft" value="1"/>
    <glyphgroup name="arrowleft.case" value="1"/>
    <glyphgroup name="arrowright" value="1"/>
    <glyphgroup name="arrowright.case" value="1"/>
    <glyphgroup name="arrowup" value="1"/>
    <glyphgroup name="arrowup.case" value="1"/>
    <glyphgroup name="arrowupdn" value="1"/>
    <glyphgroup name="asciicircum" value="1"/>
    <glyphgroup name="asciitilde" value="1"/>
    <glyphgroup name="asterisk" value="1"/>
    <glyphgroup name="at" value="1"/>
    <glyphgroup name="at.case" value="1"/>
    <glyphgroup name="atilde" value="3"/>
    <glyphgroup name="atilde.sc" value="1"/>
    <glyphgroup name="atilde.sc.ss01" value="1"/>
    <glyphgroup name="atilde.ss01" value="1"/>
    <glyphgroup name="b" value="3"/>
    <glyphgroup name="b.sc" value="1"/>
    <glyphgroup name="backslash" value="1"/>
    <glyphgroup name="backslash.case" value="1"/>
    <glyphgroup name="bar" value="1"/>
    <glyphgroup name="braceleft" value="1"/>
    <glyphgroup name="braceleft.case" value="1"/>
    <glyphgroup name="braceright" value="1"/>
    <glyphgroup name="braceright.case" value="1"/>
    <glyphgroup name="bracketleft" value="1"/>
    <glyphgroup name="bracketleft.case" value="1"/>
    <glyphgroup name="bracketright" value="1"/>
    <glyphgroup name="bracketright.case" value="1"/>
    <glyphgroup name="breve" value="1"/>
    <glyphgroup name="brevecombcy" value="1"/>
    <glyphgroup name="brevecombcy.case" value="1"/>
    <glyphgroup name="brokenbar" value="1"/>
    <glyphgroup name="bullet" value="1"/>
    <glyphgroup name="bullet.case" value="1"/>
    <glyphgroup name="c" value="3"/>
    <glyphgroup name="c.sc" value="3"/>
    <glyphgroup name="cacute" value="3"/>
    <glyphgroup name="cacute.sc" value="1"/>
    <glyphgroup name="caron" value="1"/>
    <glyphgroup name="ccaron" value="3"/>
    <glyphgroup name="ccaron.sc" value="1"/>
    <glyphgroup name="ccedilla" value="3"/>
    <glyphgroup name="ccedilla.sc" value="1"/>
    <glyphgroup name="ccircumflex" value="3"/>
    <glyphgroup name="ccircumflex.sc" value="1"/>
    <glyphgroup name="cdotaccent" value="3"/>
    <glyphgroup name="cdotaccent.sc" value="1"/>
    <glyphgroup name="cedilla" value="1"/>
    <glyphgroup name="cent" value="3"/>
    <glyphgroup name="cent.BRACKET.179" value="3"/>
    <glyphgroup name="circumflex" value="1"/>
    <glyphgroup name="colon" value="3"/>
    <glyphgroup name="colonmonetary" value="4"/>
    <glyphgroup name="colonmonetary.1" value="4"/>
    <glyphgroup name="comma" value="1"/>
    <glyphgroup name="copyright" value="1"/>
    <glyphgroup name="currency" value="4"/>
    <glyphgroup name="d" value="3"/>
    <glyphgroup name="d.sc" value="1"/>
    <glyphgroup name="dagger" value="1"/>
    <glyphgroup name="daggerdbl" value="1"/>
    <glyphgroup name="dcaron" value="3"/>
    <glyphgroup name="dcaron.sc" value="1"/>
    <glyphgroup name="dcroat" value="3"/>
    <glyphgroup name="dcroat.sc" value="1"/>
    <glyphgroup name="degree" value="1"/>
    <glyphgroup name="descTailcy" value="1"/>
    <glyphgroup name="descTailcy.case" value="1"/>
    <glyphgroup name="descendercy" value="1"/>
    <glyphgroup name="descendercy.case" value="1"/>
    <glyphgroup name="descendercy.case.short" value="1"/>
    <glyphgroup name="descendercy.short" value="1"/>
    <glyphgroup name="dieresis" value="1"/>
    <glyphgroup name="divide" value="1"/>
    <glyphgroup name="dollar" value="4"/>
    <glyphgroup name="dollar.BRACKET.179" value="4"/>
    <glyphgroup name="dong" value="4"/>
    <glyphgroup name="dotaccent" value="1"/>
    <glyphgroup name="dotbelowcomb" value="1"/>
    <glyphgroup name="dotlessi" value="3"/>
    <glyphgroup name="dotlessi.sc" value="1"/>
    <glyphgroup name="dotlessi.sc.ss01" value="1"/>
    <glyphgroup name="e" value="3"/>
    <glyphgroup name="e.sc" value="3"/>
    <glyphgroup name="e.sc.ss01" value="1"/>
    <glyphgroup name="e.ss01" value="3"/>
    <glyphgroup name="eacute" value="3"/>
    <glyphgroup name="eacute.sc" value="3"/>
    <glyphgroup name="eacute.sc.ss01" value="1"/>
    <glyphgroup name="eacute.ss01" value="1"/>
    <glyphgroup name="ebreve" value="3"/>
    <glyphgroup name="ebreve.sc" value="1"/>
    <glyphgroup name="ebreve.sc.ss01" value="1"/>
    <glyphgroup name="ebreve.ss01" value="1"/>
    <glyphgroup name="ecaron" value="3"/>
    <glyphgroup name="ecaron.sc" value="1"/>
    <glyphgroup name="ecaron.sc.ss01" value="1"/>
    <glyphgroup name="ecaron.ss01" value="1"/>
    <glyphgroup name="ecircumflex" value="3"/>
    <glyphgroup name="ecircumflex.sc" value="1"/>
    <glyphgroup name="ecircumflex.sc.ss01" value="1"/>
    <glyphgroup name="ecircumflex.ss01" value="1"/>
    <glyphgroup name="edieresis" value="3"/>
    <glyphgroup name="edieresis.sc" value="1"/>
    <glyphgroup name="edieresis.sc.ss01" value="1"/>
    <glyphgroup name="edieresis.ss01" value="1"/>
    <glyphgroup name="edotaccent" value="3"/>
    <glyphgroup name="edotaccent.sc" value="1"/>
    <glyphgroup name="edotaccent.sc.ss01" value="1"/>
    <glyphgroup name="edotaccent.ss01" value="1"/>
    <glyphgroup name="egrave" value="3"/>
    <glyphgroup name="egrave.sc" value="1"/>
    <glyphgroup name="egrave.sc.ss01" value="1"/>
    <glyphgroup name="egrave.ss01" value="1"/>
    <glyphgroup name="eight" value="4"/>
    <glyphgroup name="eight.dnom" value="1"/>
    <glyphgroup name="eight.numr" value="1"/>
    <glyphgroup name="eight.osf" value="1"/>
    <glyphgroup name="eight.sinf" value="1"/>
    <glyphgroup name="eight.subs" value="1"/>
    <glyphgroup name="eight.sups" value="1"/>
    <glyphgroup name="eight.tf" value="4"/>
    <glyphgroup name="eight.tosf" value="1"/>
    <glyphgroup name="ellipsis" value="1"/>
    <glyphgroup name="emacron" value="3"/>
    <glyphgroup name="emacron.sc" value="1"/>
    <glyphgroup name="emacron.sc.ss01" value="1"/>
    <glyphgroup name="emacron.ss01" value="1"/>
    <glyphgroup name="emdash" value="1"/>
    <glyphgroup name="emdash.case" value="1"/>
    <glyphgroup name="emptyset" value="1"/>
    <glyphgroup name="endash" value="1"/>
    <glyphgroup name="endash.case" value="1"/>
    <glyphgroup name="eng" value="3"/>
    <glyphgroup name="eng.sc" value="3"/>
    <glyphgroup name="eng.sc.ss01" value="3"/>
    <glyphgroup name="eogonek" value="3"/>
    <glyphgroup name="eogonek.sc" value="1"/>
    <glyphgroup name="eogonek.sc.ss01" value="3"/>
    <glyphgroup name="eogonek.ss01" value="3"/>
    <glyphgroup name="equal" value="1"/>
    <glyphgroup name="estimated" value="4"/>
    <glyphgroup name="eth" value="3"/>
    <glyphgroup name="eth.sc" value="1"/>
    <glyphgroup name="exclam" value="3"/>
    <glyphgroup name="exclam.sc" value="1"/>
    <glyphgroup name="exclamdown" value="1"/>
    <glyphgroup name="exclamdown.sc" value="1"/>
    <glyphgroup name="f" value="3"/>
    <glyphgroup name="f.sc" value="1"/>
    <glyphgroup name="f.sc.ss01" value="1"/>
    <glyphgroup name="f.ss01" value="1"/>
    <glyphgroup name="fi" value="3"/>
    <glyphgroup name="fi.ss01" value="1"/>
    <glyphgroup name="figuredash" value="1"/>
    <glyphgroup name="filledbox" value="1"/>
    <glyphgroup name="five" value="4"/>
    <glyphgroup name="five.dnom" value="1"/>
    <glyphgroup name="five.numr" value="1"/>
    <glyphgroup name="five.osf" value="1"/>
    <glyphgroup name="five.sinf" value="1"/>
    <glyphgroup name="five.subs" value="1"/>
    <glyphgroup name="five.sups" value="1"/>
    <glyphgroup name="five.tf" value="1"/>
    <glyphgroup name="five.tosf" value="1"/>
    <glyphgroup name="fiveeighths" value="1"/>
    <glyphgroup name="fl" value="3"/>
    <glyphgroup name="fl.ss01" value="3"/>
    <glyphgroup name="florin" value="3"/>
    <glyphgroup name="four" value="4"/>
    <glyphgroup name="four.dnom" value="1"/>
    <glyphgroup name="four.numr" value="1"/>
    <glyphgroup name="four.osf" value="1"/>
    <glyphgroup name="four.sinf" value="1"/>
    <glyphgroup name="four.subs" value="1"/>
    <glyphgroup name="four.sups" value="1"/>
    <glyphgroup name="four.tf" value="4"/>
    <glyphgroup name="four.tosf" value="1"/>
    <glyphgroup name="fraction" value="1"/>
    <glyphgroup name="franc" value="4"/>
    <glyphgroup name="g" value="3"/>
    <glyphgroup name="g.sc" value="1"/>
    <glyphgroup name="g.sc.ss01" value="1"/>
    <glyphgroup name="gbreve" value="3"/>
    <glyphgroup name="gbreve.sc" value="1"/>
    <glyphgroup name="gbreve.sc.ss01" value="1"/>
    <glyphgroup name="gcaron" value="3"/>
    <glyphgroup name="gcaron.sc" value="1"/>
    <glyphgroup name="gcaron.sc.ss01" value="1"/>
    <glyphgroup name="gcircumflex" value="3"/>
    <glyphgroup name="gcircumflex.sc" value="1"/>
    <glyphgroup name="gcircumflex.sc.ss01" value="1"/>
    <glyphgroup name="gdotaccent" value="3"/>
    <glyphgroup name="gdotaccent.sc" value="1"/>
    <glyphgroup name="gdotaccent.sc.ss01" value="1"/>
    <glyphgroup name="germandbls" value="3"/>
    <glyphgroup name="germandbls.sc" value="3"/>
    <glyphgroup name="grave" value="1"/>
    <glyphgroup name="gravecomb" value="1"/>
    <glyphgroup name="gravecomb.case" value="1"/>
    <glyphgroup name="gravecomb.loclVIET" value="1"/>
    <glyphgroup name="greater" value="1"/>
    <glyphgroup name="greaterequal" value="1"/>
    <glyphgroup name="guillemotleft" value="1"/>
    <glyphgroup name="guillemotleft.case" value="1"/>
    <glyphgroup name="guillemotleft.sc" value="1"/>
    <glyphgroup name="guillemotright" value="1"/>
    <glyphgroup name="guillemotright.case" value="1"/>
    <glyphgroup name="guillemotright.sc" value="1"/>
    <glyphgroup name="guilsinglleft" value="1"/>
    <glyphgroup name="guilsinglleft.case" value="1"/>
    <glyphgroup name="guilsinglleft.sc" value="1"/>
    <glyphgroup name="guilsinglright" value="1"/>
    <glyphgroup name="guilsinglright.case" value="1"/>
    <glyphgroup name="guilsinglright.sc" value="1"/>
    <glyphgroup name="h" value="3"/>
    <glyphgroup name="h.sc" value="1"/>
    <glyphgroup name="hbar" value="3"/>
    <glyphgroup name="hbar.sc" value="1"/>
    <glyphgroup name="hcircumflex" value="3"/>
    <glyphgroup name="hcircumflex.sc" value="1"/>
    <glyphgroup name="hookabovecomb" value="1"/>
    <glyphgroup name="hookabovecomb.case" value="1"/>
    <glyphgroup name="hookabovecomb.loclVIET" value="1"/>
    <glyphgroup name="hungarumlaut" value="1"/>
    <glyphgroup name="hyphen" value="1"/>
    <glyphgroup name="hyphen.case" value="1"/>
    <glyphgroup name="i" value="3"/>
    <glyphgroup name="i.loclTRK" value="1"/>
    <glyphgroup name="i.loclTRK.sc" value="1"/>
    <glyphgroup name="i.sc" value="1"/>
    <glyphgroup name="i.sc.ss01" value="1"/>
    <glyphgroup name="iacute" value="3"/>
    <glyphgroup name="iacute.sc" value="1"/>
    <glyphgroup name="iacute.sc.ss01" value="1"/>
    <glyphgroup name="iacute_j.loclNLD" value="3"/>
    <glyphgroup name="iacute_j.loclNLD.sc" value="3"/>
    <glyphgroup name="iacute_j.loclNLD.sc.ss01" value="3"/>
    <glyphgroup name="ibreve" value="3"/>
    <glyphgroup name="ibreve.sc" value="1"/>
    <glyphgroup name="ibreve.sc.ss01" value="1"/>
    <glyphgroup name="icircumflex" value="3"/>
    <glyphgroup name="icircumflex.sc" value="1"/>
    <glyphgroup name="icircumflex.sc.ss01" value="1"/>
    <glyphgroup name="idieresis" value="3"/>
    <glyphgroup name="idieresis.sc" value="1"/>
    <glyphgroup name="idieresis.sc.ss01" value="1"/>
    <glyphgroup name="igrave" value="3"/>
    <glyphgroup name="igrave.sc" value="1"/>
    <glyphgroup name="igrave.sc.ss01" value="1"/>
    <glyphgroup name="ij" value="3"/>
    <glyphgroup name="ij.sc" value="1"/>
    <glyphgroup name="ij.sc.ss01" value="1"/>
    <glyphgroup name="imacron" value="3"/>
    <glyphgroup name="imacron.sc" value="1"/>
    <glyphgroup name="imacron.sc.ss01" value="1"/>
    <glyphgroup name="infinity" value="1"/>
    <glyphgroup name="integral" value="1"/>
    <glyphgroup name="iogonek" value="3"/>
    <glyphgroup name="iogonek.sc" value="1"/>
    <glyphgroup name="iogonek.sc.ss01" value="1"/>
    <glyphgroup name="itilde" value="3"/>
    <glyphgroup name="itilde.sc" value="1"/>
    <glyphgroup name="itilde.sc.ss01" value="1"/>
    <glyphgroup name="j" value="3"/>
    <glyphgroup name="j.sc" value="1"/>
    <glyphgroup name="j.sc.ss01" value="1"/>
    <glyphgroup name="jcircumflex" value="3"/>
    <glyphgroup name="jcircumflex.sc" value="1"/>
    <glyphgroup name="jcircumflex.sc.ss01" value="1"/>
    <glyphgroup name="k" value="3"/>
    <glyphgroup name="k.sc" value="1"/>
    <glyphgroup name="kgreenlandic" value="3"/>
    <glyphgroup name="kgreenlandic.sc" value="1"/>
    <glyphgroup name="l" value="3"/>
    <glyphgroup name="l.sc" value="1"/>
    <glyphgroup name="l.ss01" value="1"/>
    <glyphgroup name="lacute" value="3"/>
    <glyphgroup name="lacute.sc" value="1"/>
    <glyphgroup name="lacute.ss01" value="1"/>
    <glyphgroup name="lcaron" value="3"/>
    <glyphgroup name="lcaron.sc" value="1"/>
    <glyphgroup name="lcaron.ss01" value="3"/>
    <glyphgroup name="ldot" value="3"/>
    <glyphgroup name="ldot.sc" value="1"/>
    <glyphgroup name="ldot.ss01" value="1"/>
    <glyphgroup name="less" value="1"/>
    <glyphgroup name="lessequal" value="1"/>
    <glyphgroup name="lira" value="4"/>
    <glyphgroup name="logicalnot" value="1"/>
    <glyphgroup name="longs" value="3"/>
    <glyphgroup name="lozenge" value="1"/>
    <glyphgroup name="lslash" value="3"/>
    <glyphgroup name="lslash.sc" value="1"/>
    <glyphgroup name="lslash.ss01" value="1"/>
    <glyphgroup name="m" value="3"/>
    <glyphgroup name="m.sc" value="1"/>
    <glyphgroup name="m.sc.ss01" value="1"/>
    <glyphgroup name="macron" value="1"/>
    <glyphgroup name="minus" value="1"/>
    <glyphgroup name="minute" value="1"/>
    <glyphgroup name="multiply" value="1"/>
    <glyphgroup name="n" value="3"/>
    <glyphgroup name="n.sc" value="1"/>
    <glyphgroup name="n.sc.ss01" value="1"/>
    <glyphgroup name="nacute" value="3"/>
    <glyphgroup name="nacute.sc" value="1"/>
    <glyphgroup name="nacute.sc.ss01" value="1"/>
    <glyphgroup name="napostrophe" value="3"/>
    <glyphgroup name="napostrophe.sc" value="1"/>
    <glyphgroup name="ncaron" value="3"/>
    <glyphgroup name="ncaron.sc" value="1"/>
    <glyphgroup name="ncaron.sc.ss01" value="1"/>
    <glyphgroup name="nine" value="4"/>
    <glyphgroup name="nine.dnom" value="1"/>
    <glyphgroup name="nine.numr" value="1"/>
    <glyphgroup name="nine.osf" value="1"/>
    <glyphgroup name="nine.sinf" value="1"/>
    <glyphgroup name="nine.subs" value="1"/>
    <glyphgroup name="nine.sups" value="1"/>
    <glyphgroup name="nine.tf" value="4"/>
    <glyphgroup name="nine.tosf" value="1"/>
    <glyphgroup name="notequal" value="1"/>
    <glyphgroup name="ntilde" value="3"/>
    <glyphgroup name="ntilde.sc" value="1"/>
    <glyphgroup name="ntilde.sc.ss01" value="1"/>
    <glyphgroup name="numbersign" value="2"/>
    <glyphgroup name="o" value="3"/>
    <glyphgroup name="o.sc" value="1"/>
    <glyphgroup name="oacute" value="3"/>
    <glyphgroup name="oacute.sc" value="1"/>
    <glyphgroup name="obreve" value="3"/>
    <glyphgroup name="obreve.sc" value="1"/>
    <glyphgroup name="ocircumflex" value="3"/>
    <glyphgroup name="ocircumflex.sc" value="1"/>
    <glyphgroup name="odieresis" value="3"/>
    <glyphgroup name="odieresis.sc" value="1"/>
    <glyphgroup name="oe" value="3"/>
    <glyphgroup name="oe.sc" value="3"/>
    <glyphgroup name="oe.ss01" value="3"/>
    <glyphgroup name="ogonek" value="1"/>
    <glyphgroup name="ograve" value="3"/>
    <glyphgroup name="ograve.sc" value="1"/>
    <glyphgroup name="ohorn" value="3"/>
    <glyphgroup name="ohorn.sc" value="3"/>
    <glyphgroup name="ohungarumlaut" value="3"/>
    <glyphgroup name="ohungarumlaut.sc" value="1"/>
    <glyphgroup name="omacron" value="3"/>
    <glyphgroup name="omacron.sc" value="1"/>
    <glyphgroup name="one" value="4"/>
    <glyphgroup name="one.dnom" value="4"/>
    <glyphgroup name="one.numr" value="1"/>
    <glyphgroup name="one.osf" value="1"/>
    <glyphgroup name="one.sinf" value="1"/>
    <glyphgroup name="one.subs" value="1"/>
    <glyphgroup name="one.sups" value="1"/>
    <glyphgroup name="one.tf" value="4"/>
    <glyphgroup name="one.tosf" value="1"/>
    <glyphgroup name="oneeighth" value="1"/>
    <glyphgroup name="onehalf" value="1"/>
    <glyphgroup name="onequarter" value="1"/>
    <glyphgroup name="ordfeminine" value="2"/>
    <glyphgroup name="ordmasculine" value="2"/>
    <glyphgroup name="oslash" value="3"/>
    <glyphgroup name="oslash.sc" value="1"/>
    <glyphgroup name="oslashacute" value="3"/>
    <glyphgroup name="oslashacute.sc" value="1"/>
    <glyphgroup name="otilde" value="3"/>
    <glyphgroup name="otilde.sc" value="1"/>
    <glyphgroup name="p" value="3"/>
    <glyphgroup name="p.sc" value="1"/>
    <glyphgroup name="paragraph" value="1"/>
    <glyphgroup name="parenleft" value="1"/>
    <glyphgroup name="parenleft.case" value="1"/>
    <glyphgroup name="parenright" value="1"/>
    <glyphgroup name="parenright.case" value="1"/>
    <glyphgroup name="partialdiff" value="4"/>
    <glyphgroup name="percent" value="4"/>
    <glyphgroup name="period" value="1"/>
    <glyphgroup name="period.sc" value="3"/>
    <glyphgroup name="periodcentered" value="1"/>
    <glyphgroup name="periodcentered.case" value="1"/>
    <glyphgroup name="periodcentered.loclCAT" value="1"/>
    <glyphgroup name="periodcentered.loclCAT.case" value="1"/>
    <glyphgroup name="periodcentered.loclCAT.sc" value="1"/>
    <glyphgroup name="periodcentered.sc" value="1"/>
    <glyphgroup name="perthousand" value="4"/>
    <glyphgroup name="peseta" value="4"/>
    <glyphgroup name="pi" value="3"/>
    <glyphgroup name="plus" value="1"/>
    <glyphgroup name="plusminus" value="1"/>
    <glyphgroup name="prime" value="1"/>
    <glyphgroup name="product" value="1"/>
    <glyphgroup name="q" value="3"/>
    <glyphgroup name="q.sc" value="1"/>
    <glyphgroup name="q.sc.ss01" value="3"/>
    <glyphgroup name="q.sc.ss01.BRACKET.170" value="3"/>
    <glyphgroup name="question" value="2"/>
    <glyphgroup name="question.sc" value="1"/>
    <glyphgroup name="questiondown" value="3"/>
    <glyphgroup name="questiondown.sc" value="1"/>
    <glyphgroup name="quotedbl" value="1"/>
    <glyphgroup name="quotedbl.sc" value="1"/>
    <glyphgroup name="quotedblbase" value="1"/>
    <glyphgroup name="quotedblbase.sc" value="1"/>
    <glyphgroup name="quotedblleft" value="1"/>
    <glyphgroup name="quotedblleft.sc" value="1"/>
    <glyphgroup name="quotedblright" value="1"/>
    <glyphgroup name="quotedblright.sc" value="1"/>
    <glyphgroup name="quoteleft" value="1"/>
    <glyphgroup name="quoteleft.sc" value="1"/>
    <glyphgroup name="quoteright" value="1"/>
    <glyphgroup name="quoteright.sc" value="1"/>
    <glyphgroup name="quotesinglbase" value="1"/>
    <glyphgroup name="quotesinglbase.sc" value="1"/>
    <glyphgroup name="quotesingle" value="1"/>
    <glyphgroup name="quotesingle.sc" value="1"/>
    <glyphgroup name="r" value="3"/>
    <glyphgroup name="r.sc" value="1"/>
    <glyphgroup name="racute" value="3"/>
    <glyphgroup name="racute.sc" value="1"/>
    <glyphgroup name="radical" value="1"/>
    <glyphgroup name="rcaron" value="3"/>
    <glyphgroup name="rcaron.sc" value="1"/>
    <glyphgroup name="registered" value="1"/>
    <glyphgroup name="ring" value="1"/>
    <glyphgroup name="s" value="3"/>
    <glyphgroup name="s.sc" value="1"/>
    <glyphgroup name="sacute" value="3"/>
    <glyphgroup name="sacute.sc" value="1"/>
    <glyphgroup name="scaron" value="3"/>
    <glyphgroup name="scaron.sc" value="1"/>
    <glyphgroup name="scedilla" value="3"/>
    <glyphgroup name="scedilla.sc" value="1"/>
    <glyphgroup name="scircumflex" value="3"/>
    <glyphgroup name="scircumflex.sc" value="1"/>
    <glyphgroup name="second" value="2"/>
    <glyphgroup name="section" value="1"/>
    <glyphgroup name="semicolon" value="1"/>
    <glyphgroup name="seven" value="4"/>
    <glyphgroup name="seven.dnom" value="1"/>
    <glyphgroup name="seven.numr" value="1"/>
    <glyphgroup name="seven.osf" value="1"/>
    <glyphgroup name="seven.sinf" value="1"/>
    <glyphgroup name="seven.subs" value="1"/>
    <glyphgroup name="seven.sups" value="1"/>
    <glyphgroup name="seven.tf" value="1"/>
    <glyphgroup name="seven.tosf" value="1"/>
    <glyphgroup name="seveneighths" value="1"/>
    <glyphgroup name="six" value="4"/>
    <glyphgroup name="six.dnom" value="1"/>
    <glyphgroup name="six.numr" value="1"/>
    <glyphgroup name="six.osf" value="1"/>
    <glyphgroup name="six.sinf" value="1"/>
    <glyphgroup name="six.subs" value="1"/>
    <glyphgroup name="six.sups" value="1"/>
    <glyphgroup name="six.tf" value="1"/>
    <glyphgroup name="six.tosf" value="1"/>
    <glyphgroup name="slash" value="1"/>
    <glyphgroup name="slash.case" value="1"/>
    <glyphgroup name="space" value="1"/>
    <glyphgroup name="sterling" value="4"/>
    <glyphgroup name="summation" value="1"/>
    <glyphgroup name="t" value="3"/>
    <glyphgroup name="t.sc" value="1"/>
    <glyphgroup name="t.sc.ss01" value="1"/>
    <glyphgroup name="t.ss01" value="3"/>
    <glyphgroup name="tbar" value="3"/>
    <glyphgroup name="tbar.sc" value="1"/>
    <glyphgroup name="tbar.sc.ss01" value="1"/>
    <glyphgroup name="tbar.ss01" value="1"/>
    <glyphgroup name="tcaron" value="3"/>
    <glyphgroup name="tcaron.sc" value="1"/>
    <glyphgroup name="tcaron.sc.ss01" value="1"/>
    <glyphgroup name="tcaron.ss01" value="1"/>
    <glyphgroup name="thorn" value="3"/>
    <glyphgroup name="thorn.sc" value="3"/>
    <glyphgroup name="three" value="4"/>
    <glyphgroup name="three.dnom" value="1"/>
    <glyphgroup name="three.numr" value="1"/>
    <glyphgroup name="three.osf" value="1"/>
    <glyphgroup name="three.sinf" value="1"/>
    <glyphgroup name="three.subs" value="1"/>
    <glyphgroup name="three.sups" value="1"/>
    <glyphgroup name="three.tf" value="4"/>
    <glyphgroup name="three.tosf" value="1"/>
    <glyphgroup name="threeeighths" value="1"/>
    <glyphgroup name="threequarters" value="1"/>
    <glyphgroup name="tilde" value="1"/>
    <glyphgroup name="tildecomb" value="1"/>
    <glyphgroup name="tildecomb.case" value="1"/>
    <glyphgroup name="tildecomb.loclVIET" value="1"/>
    <glyphgroup name="tildecomb.narrow" value="1"/>
    <glyphgroup name="tildecomb_acutecomb" value="1"/>
    <glyphgroup name="tildecomb_acutecomb.case" value="1"/>
    <glyphgroup name="trademark" value="2"/>
    <glyphgroup name="triagdn" value="1"/>
    <glyphgroup name="triagup" value="1"/>
    <glyphgroup name="two" value="4"/>
    <glyphgroup name="two.dnom" value="1"/>
    <glyphgroup name="two.numr" value="1"/>
    <glyphgroup name="two.osf" value="1"/>
    <glyphgroup name="two.sinf" value="1"/>
    <glyphgroup name="two.subs" value="1"/>
    <glyphgroup name="two.sups" value="1"/>
    <glyphgroup name="two.tf" value="4"/>
    <glyphgroup name="two.tosf" value="1"/>
    <glyphgroup name="u" value="3"/>
    <glyphgroup name="u.sc" value="1"/>
    <glyphgroup name="u.sc.ss01" value="1"/>
    <glyphgroup name="uacute" value="3"/>
    <glyphgroup name="uacute.sc" value="1"/>
    <glyphgroup name="uacute.sc.ss01" value="1"/>
    <glyphgroup name="ubreve" value="3"/>
    <glyphgroup name="ubreve.sc" value="1"/>
    <glyphgroup name="ubreve.sc.ss01" value="1"/>
    <glyphgroup name="ucircumflex" value="3"/>
    <glyphgroup name="ucircumflex.sc" value="1"/>
    <glyphgroup name="ucircumflex.sc.ss01" value="1"/>
    <glyphgroup name="udieresis" value="3"/>
    <glyphgroup name="udieresis.sc" value="1"/>
    <glyphgroup name="udieresis.sc.alt" value="3"/>
    <glyphgroup name="udieresis.sc.alt.BRACKET.133" value="3"/>
    <glyphgroup name="udieresis.sc.ss01" value="1"/>
    <glyphgroup name="udieresis.sc.ss01.alt" value="3"/>
    <glyphgroup name="udieresis.sc.ss01.alt.BRACKET.133" value="3"/>
    <glyphgroup name="ugrave" value="3"/>
    <glyphgroup name="ugrave.sc" value="1"/>
    <glyphgroup name="ugrave.sc.ss01" value="1"/>
    <glyphgroup name="uhorn" value="3"/>
    <glyphgroup name="uhorn.sc" value="1"/>
    <glyphgroup name="uhorn.sc.ss01" value="1"/>
    <glyphgroup name="uhungarumlaut" value="3"/>
    <glyphgroup name="uhungarumlaut.sc" value="1"/>
    <glyphgroup name="uhungarumlaut.sc.ss01" value="1"/>
    <glyphgroup name="umacron" value="3"/>
    <glyphgroup name="umacron.sc" value="1"/>
    <glyphgroup name="umacron.sc.ss01" value="1"/>
    <glyphgroup name="underscore" value="1"/>
    <glyphgroup name="uni006A0301" value="1"/>
    <glyphgroup name="uni006A0301.sc" value="1"/>
    <glyphgroup name="uni006A0301.sc.ss01" value="1"/>
    <glyphgroup name="uni00A0" value="1"/>
    <glyphgroup name="uni00A40301" value="1"/>
    <glyphgroup name="uni00A40301.ss01" value="1"/>
    <glyphgroup name="uni00AD" value="1"/>
    <glyphgroup name="uni00B2" value="1"/>
    <glyphgroup name="uni00B3" value="1"/>
    <glyphgroup name="uni00B5" value="3"/>
    <glyphgroup name="uni00B9" value="1"/>
    <glyphgroup name="uni0122" value="2"/>
    <glyphgroup name="uni0122.ss01" value="1"/>
    <glyphgroup name="uni0123" value="3"/>
    <glyphgroup name="uni0123.sc" value="1"/>
    <glyphgroup name="uni0123.sc.ss01" value="1"/>
    <glyphgroup name="uni0136" value="2"/>
    <glyphgroup name="uni0137" value="3"/>
    <glyphgroup name="uni0137.sc" value="1"/>
    <glyphgroup name="uni013B" value="2"/>
    <glyphgroup name="uni013C" value="3"/>
    <glyphgroup name="uni013C.sc" value="1"/>
    <glyphgroup name="uni013C.ss01" value="1"/>
    <glyphgroup name="uni0145" value="2"/>
    <glyphgroup name="uni0145.ss01" value="1"/>
    <glyphgroup name="uni0146" value="3"/>
    <glyphgroup name="uni0146.sc" value="1"/>
    <glyphgroup name="uni0146.sc.ss01" value="1"/>
    <glyphgroup name="uni0156" value="2"/>
    <glyphgroup name="uni0157" value="3"/>
    <glyphgroup name="uni0157.sc" value="1"/>
    <glyphgroup name="uni0162" value="2"/>
    <glyphgroup name="uni0162.ss01" value="1"/>
    <glyphgroup name="uni0163" value="3"/>
    <glyphgroup name="uni0163.sc" value="1"/>
    <glyphgroup name="uni0163.sc.ss01" value="1"/>
    <glyphgroup name="uni0163.ss01" value="1"/>
    <glyphgroup name="uni018F" value="2"/>
    <glyphgroup name="uni018F.ss01" value="1"/>
    <glyphgroup name="uni01B7" value="1"/>
    <glyphgroup name="uni01C4" value="2"/>
    <glyphgroup name="uni01C4.ss01" value="1"/>
    <glyphgroup name="uni01C5" value="2"/>
    <glyphgroup name="uni01C5.ss01" value="1"/>
    <glyphgroup name="uni01C6" value="3"/>
    <glyphgroup name="uni01C6.sc" value="1"/>
    <glyphgroup name="uni01C6.sc.ss01" value="1"/>
    <glyphgroup name="uni01C6.ss01" value="1"/>
    <glyphgroup name="uni01C7" value="2"/>
    <glyphgroup name="uni01C7.ss01" value="1"/>
    <glyphgroup name="uni01C8" value="2"/>
    <glyphgroup name="uni01C9" value="3"/>
    <glyphgroup name="uni01C9.sc" value="1"/>
    <glyphgroup name="uni01C9.sc.ss01" value="1"/>
    <glyphgroup name="uni01C9.ss01" value="1"/>
    <glyphgroup name="uni01CA" value="2"/>
    <glyphgroup name="uni01CA.ss01" value="1"/>
    <glyphgroup name="uni01CB" value="2"/>
    <glyphgroup name="uni01CB.ss01" value="2"/>
    <glyphgroup name="uni01CC" value="3"/>
    <glyphgroup name="uni01CC.sc" value="3"/>
    <glyphgroup name="uni01CC.sc.ss01" value="1"/>
    <glyphgroup name="uni01CD" value="2"/>
    <glyphgroup name="uni01CD.ss01" value="1"/>
    <glyphgroup name="uni01CE" value="3"/>
    <glyphgroup name="uni01CE.sc" value="1"/>
    <glyphgroup name="uni01CE.sc.ss01" value="1"/>
    <glyphgroup name="uni01CE.ss01" value="1"/>
    <glyphgroup name="uni01D3" value="2"/>
    <glyphgroup name="uni01D3.ss01" value="1"/>
    <glyphgroup name="uni01D4" value="3"/>
    <glyphgroup name="uni01D4.sc" value="1"/>
    <glyphgroup name="uni01D4.sc.ss01" value="1"/>
    <glyphgroup name="uni01E4" value="1"/>
    <glyphgroup name="uni01E4.ss01" value="2"/>
    <glyphgroup name="uni01E5" value="3"/>
    <glyphgroup name="uni01E5.sc" value="3"/>
    <glyphgroup name="uni01E5.sc.ss01" value="1"/>
    <glyphgroup name="uni01E8" value="2"/>
    <glyphgroup name="uni01E9" value="3"/>
    <glyphgroup name="uni01E9.sc" value="1"/>
    <glyphgroup name="uni01EA" value="2"/>
    <glyphgroup name="uni01EB" value="3"/>
    <glyphgroup name="uni01EB.sc" value="1"/>
    <glyphgroup name="uni01EE" value="2"/>
    <glyphgroup name="uni01EF" value="3"/>
    <glyphgroup name="uni01EF.sc" value="1"/>
    <glyphgroup name="uni01F5.sc" value="1"/>
    <glyphgroup name="uni0200" value="1"/>
    <glyphgroup name="uni0200.ss01" value="1"/>
    <glyphgroup name="uni0201" value="1"/>
    <glyphgroup name="uni0201.sc" value="1"/>
    <glyphgroup name="uni0201.sc.ss01" value="1"/>
    <glyphgroup name="uni0201.ss01" value="1"/>
    <glyphgroup name="uni0202" value="1"/>
    <glyphgroup name="uni0202.ss01" value="1"/>
    <glyphgroup name="uni0203" value="1"/>
    <glyphgroup name="uni0203.sc" value="1"/>
    <glyphgroup name="uni0203.sc.ss01" value="1"/>
    <glyphgroup name="uni0203.ss01" value="1"/>
    <glyphgroup name="uni0204" value="1"/>
    <glyphgroup name="uni0204.ss01" value="1"/>
    <glyphgroup name="uni0205" value="1"/>
    <glyphgroup name="uni0205.sc" value="1"/>
    <glyphgroup name="uni0205.sc.ss01" value="1"/>
    <glyphgroup name="uni0205.ss01" value="1"/>
    <glyphgroup name="uni0206" value="1"/>
    <glyphgroup name="uni0206.ss01" value="1"/>
    <glyphgroup name="uni0207" value="1"/>
    <glyphgroup name="uni0207.sc" value="1"/>
    <glyphgroup name="uni0207.sc.ss01" value="1"/>
    <glyphgroup name="uni0207.ss01" value="1"/>
    <glyphgroup name="uni0208" value="1"/>
    <glyphgroup name="uni0208.ss01" value="1"/>
    <glyphgroup name="uni0209" value="1"/>
    <glyphgroup name="uni0209.sc" value="1"/>
    <glyphgroup name="uni0209.sc.ss01" value="1"/>
    <glyphgroup name="uni020A" value="1"/>
    <glyphgroup name="uni020A.ss01" value="1"/>
    <glyphgroup name="uni020B" value="1"/>
    <glyphgroup name="uni020B.sc" value="1"/>
    <glyphgroup name="uni020B.sc.ss01" value="1"/>
    <glyphgroup name="uni020C" value="1"/>
    <glyphgroup name="uni020D" value="1"/>
    <glyphgroup name="uni020D.sc" value="1"/>
    <glyphgroup name="uni020E" value="1"/>
    <glyphgroup name="uni020F" value="1"/>
    <glyphgroup name="uni020F.sc" value="1"/>
    <glyphgroup name="uni0210" value="1"/>
    <glyphgroup name="uni0211" value="1"/>
    <glyphgroup name="uni0211.sc" value="1"/>
    <glyphgroup name="uni0212" value="1"/>
    <glyphgroup name="uni0213" value="1"/>
    <glyphgroup name="uni0213.sc" value="1"/>
    <glyphgroup name="uni0214" value="1"/>
    <glyphgroup name="uni0214.ss01" value="1"/>
    <glyphgroup name="uni0215" value="1"/>
    <glyphgroup name="uni0215.sc" value="1"/>
    <glyphgroup name="uni0215.sc.ss01" value="1"/>
    <glyphgroup name="uni0216" value="1"/>
    <glyphgroup name="uni0216.ss01" value="1"/>
    <glyphgroup name="uni0217" value="1"/>
    <glyphgroup name="uni0217.sc" value="1"/>
    <glyphgroup name="uni0217.sc.ss01" value="1"/>
    <glyphgroup name="uni0218" value="2"/>
    <glyphgroup name="uni0219" value="3"/>
    <glyphgroup name="uni0219.sc" value="1"/>
    <glyphgroup name="uni021A" value="2"/>
    <glyphgroup name="uni021A.ss01" value="1"/>
    <glyphgroup name="uni021B" value="3"/>
    <glyphgroup name="uni021B.sc" value="1"/>
    <glyphgroup name="uni021B.sc.ss01" value="1"/>
    <glyphgroup name="uni021B.ss01" value="1"/>
    <glyphgroup name="uni021E" value="2"/>
    <glyphgroup name="uni021F" value="3"/>
    <glyphgroup name="uni021F.sc" value="1"/>
    <glyphgroup name="uni022A" value="1"/>
    <glyphgroup name="uni022B" value="1"/>
    <glyphgroup name="uni022B.sc" value="3"/>
    <glyphgroup name="uni022C" value="1"/>
    <glyphgroup name="uni022D" value="1"/>
    <glyphgroup name="uni022D.sc" value="1"/>
    <glyphgroup name="uni0230" value="1"/>
    <glyphgroup name="uni0231" value="1"/>
    <glyphgroup name="uni0231.sc" value="1"/>
    <glyphgroup name="uni0232" value="2"/>
    <glyphgroup name="uni0232.ss01" value="1"/>
    <glyphgroup name="uni0233" value="3"/>
    <glyphgroup name="uni0233.sc" value="1"/>
    <glyphgroup name="uni0233.sc.ss01" value="1"/>
    <glyphgroup name="uni0233.ss01" value="1"/>
    <glyphgroup name="uni0237" value="3"/>
    <glyphgroup name="uni0259" value="3"/>
    <glyphgroup name="uni0259.sc" value="1"/>
    <glyphgroup name="uni0259.sc.ss01" value="1"/>
    <glyphgroup name="uni0259.ss01" value="3"/>
    <glyphgroup name="uni0292" value="1"/>
    <glyphgroup name="uni0292.sc" value="3"/>
    <glyphgroup name="uni02B9" value="2"/>
    <glyphgroup name="uni02BA" value="1"/>
    <glyphgroup name="uni02BB" value="1"/>
    <glyphgroup name="uni02BC" value="1"/>
    <glyphgroup name="uni02BE" value="1"/>
    <glyphgroup name="uni02BF" value="1"/>
    <glyphgroup name="uni02C8" value="2"/>
    <glyphgroup name="uni02C9" value="1"/>
    <glyphgroup name="uni02CA" value="1"/>
    <glyphgroup name="uni02CB" value="1"/>
    <glyphgroup name="uni02CC" value="1"/>
    <glyphgroup name="uni03000304" value="1"/>
    <glyphgroup name="uni03000304.case" value="1"/>
    <glyphgroup name="uni03010304" value="1"/>
    <glyphgroup name="uni03010304.case" value="1"/>
    <glyphgroup name="uni03010307" value="1"/>
    <glyphgroup name="uni03010307.case" value="1"/>
    <glyphgroup name="uni0302" value="2"/>
    <glyphgroup name="uni0302.case" value="1"/>
    <glyphgroup name="uni0302.loclVIET" value="1"/>
    <glyphgroup name="uni0302.narrow" value="1"/>
    <glyphgroup name="uni03020300" value="1"/>
    <glyphgroup name="uni03020300.case" value="1"/>
    <glyphgroup name="uni03020301" value="1"/>
    <glyphgroup name="uni03020301.case" value="1"/>
    <glyphgroup name="uni03020303" value="1"/>
    <glyphgroup name="uni03020303.case" value="1"/>
    <glyphgroup name="uni03020309" value="1"/>
    <glyphgroup name="uni03020309.case" value="1"/>
    <glyphgroup name="uni03030304" value="1"/>
    <glyphgroup name="uni03030304.case" value="1"/>
    <glyphgroup name="uni03030308" value="1"/>
    <glyphgroup name="uni03030308.case" value="1"/>
    <glyphgroup name="uni0304" value="1"/>
    <glyphgroup name="uni0304.case" value="1"/>
    <glyphgroup name="uni0304.loclVIET" value="1"/>
    <glyphgroup name="uni0304.narrow" value="1"/>
    <glyphgroup name="uni0304.narrow.case" value="1"/>
    <glyphgroup name="uni03040300" value="1"/>
    <glyphgroup name="uni03040300.case" value="1"/>
    <glyphgroup name="uni03040301" value="1"/>
    <glyphgroup name="uni03040301.case" value="1"/>
    <glyphgroup name="uni03040308" value="1"/>
    <glyphgroup name="uni03040308.case" value="1"/>
    <glyphgroup name="uni0306" value="1"/>
    <glyphgroup name="uni0306.case" value="1"/>
    <glyphgroup name="uni0306.loclVIET" value="1"/>
    <glyphgroup name="uni0306.narrow" value="1"/>
    <glyphgroup name="uni03060300" value="1"/>
    <glyphgroup name="uni03060300.case" value="1"/>
    <glyphgroup name="uni03060301" value="1"/>
    <glyphgroup name="uni03060301.case" value="1"/>
    <glyphgroup name="uni03060303" value="1"/>
    <glyphgroup name="uni03060303.case" value="1"/>
    <glyphgroup name="uni03060309" value="1"/>
    <glyphgroup name="uni03060309.case" value="1"/>
    <glyphgroup name="uni0307" value="1"/>
    <glyphgroup name="uni0307.case" value="1"/>
    <glyphgroup name="uni0307.i" value="1"/>
    <glyphgroup name="uni0307.loclVIET" value="1"/>
    <glyphgroup name="uni03070304" value="1"/>
    <glyphgroup name="uni03070304.case" value="1"/>
    <glyphgroup name="uni0308" value="1"/>
    <glyphgroup name="uni0308.case" value="1"/>
    <glyphgroup name="uni0308.loclVIET" value="1"/>
    <glyphgroup name="uni0308.narrow" value="1"/>
    <glyphgroup name="uni03080300" value="1"/>
    <glyphgroup name="uni03080300.case" value="1"/>
    <glyphgroup name="uni03080301" value="1"/>
    <glyphgroup name="uni03080301.case" value="1"/>
    <glyphgroup name="uni03080304" value="1"/>
    <glyphgroup name="uni03080304.case" value="1"/>
    <glyphgroup name="uni030A" value="1"/>
    <glyphgroup name="uni030A0301" value="1"/>
    <glyphgroup name="uni030B" value="1"/>
    <glyphgroup name="uni030B.case" value="1"/>
    <glyphgroup name="uni030C" value="1"/>
    <glyphgroup name="uni030C.alt" value="1"/>
    <glyphgroup name="uni030C.alt.short" value="1"/>
    <glyphgroup name="uni030C.case" value="1"/>
    <glyphgroup name="uni030C.loclVIET" value="1"/>
    <glyphgroup name="uni030C.narrow" value="1"/>
    <glyphgroup name="uni030C0307" value="1"/>
    <glyphgroup name="uni030C0307.case" value="1"/>
    <glyphgroup name="uni030F" value="1"/>
    <glyphgroup name="uni030F.case" value="1"/>
    <glyphgroup name="uni0311" value="1"/>
    <glyphgroup name="uni0311.case" value="1"/>
    <glyphgroup name="uni0311.narrow" value="1"/>
    <glyphgroup name="uni0312" value="1"/>
    <glyphgroup name="uni031B" value="1"/>
    <glyphgroup name="uni0324" value="1"/>
    <glyphgroup name="uni0326" value="1"/>
    <glyphgroup name="uni0326.alt" value="1"/>
    <glyphgroup name="uni0327" value="1"/>
    <glyphgroup name="uni0328" value="1"/>
    <glyphgroup name="uni0328.i" value="1"/>
    <glyphgroup name="uni032E" value="3"/>
    <glyphgroup name="uni0331" value="1"/>
    <glyphgroup name="uni0335" value="1"/>
    <glyphgroup name="uni0335.case" value="1"/>
    <glyphgroup name="uni0335.sc" value="1"/>
    <glyphgroup name="uni0335.t" value="1"/>
    <glyphgroup name="uni0336" value="1"/>
    <glyphgroup name="uni0336.sc" value="1"/>
    <glyphgroup name="uni0337" value="1"/>
    <glyphgroup name="uni0337.case" value="1"/>
    <glyphgroup name="uni0338" value="1"/>
    <glyphgroup name="uni0338.case" value="1"/>
    <glyphgroup name="uni0338.sc" value="1"/>
    <glyphgroup name="uni0394" value="2"/>
    <glyphgroup name="uni03A9" value="2"/>
    <glyphgroup name="uni03BC" value="3"/>
    <glyphgroup name="uni0400" value="2"/>
    <glyphgroup name="uni0400.ss01" value="1"/>
    <glyphgroup name="uni0401" value="2"/>
    <glyphgroup name="uni0401.ss01" value="1"/>
    <glyphgroup name="uni0402" value="2"/>
    <glyphgroup name="uni0403" value="2"/>
    <glyphgroup name="uni0404" value="2"/>
    <glyphgroup name="uni0405" value="2"/>
    <glyphgroup name="uni0406" value="2"/>
    <glyphgroup name="uni0407" value="2"/>
    <glyphgroup name="uni0408" value="2"/>
    <glyphgroup name="uni0408.ss01" value="1"/>
    <glyphgroup name="uni0409" value="2"/>
    <glyphgroup name="uni0409.ss01" value="1"/>
    <glyphgroup name="uni040A" value="2"/>
    <glyphgroup name="uni040A.ss01" value="2"/>
    <glyphgroup name="uni040B" value="2"/>
    <glyphgroup name="uni040C" value="2"/>
    <glyphgroup name="uni040D" value="2"/>
    <glyphgroup name="uni040D.ss01" value="1"/>
    <glyphgroup name="uni040E" value="2"/>
    <glyphgroup name="uni040E.ss01" value="1"/>
    <glyphgroup name="uni040F" value="2"/>
    <glyphgroup name="uni0410" value="2"/>
    <glyphgroup name="uni0410.ss01" value="1"/>
    <glyphgroup name="uni0411" value="2"/>
    <glyphgroup name="uni0412" value="2"/>
    <glyphgroup name="uni0413" value="2"/>
    <glyphgroup name="uni0414" value="2"/>
    <glyphgroup name="uni0414.loclBGR" value="2"/>
    <glyphgroup name="uni0414.ss01" value="2"/>
    <glyphgroup name="uni0415" value="2"/>
    <glyphgroup name="uni0415.ss01" value="1"/>
    <glyphgroup name="uni0416" value="2"/>
    <glyphgroup name="uni0417" value="2"/>
    <glyphgroup name="uni0418" value="2"/>
    <glyphgroup name="uni0418.ss01" value="1"/>
    <glyphgroup name="uni0419" value="2"/>
    <glyphgroup name="uni0419.ss01" value="1"/>
    <glyphgroup name="uni041A" value="2"/>
    <glyphgroup name="uni041B" value="2"/>
    <glyphgroup name="uni041B.loclBGR" value="2"/>
    <glyphgroup name="uni041B.ss01" value="2"/>
    <glyphgroup name="uni041C" value="2"/>
    <glyphgroup name="uni041D" value="2"/>
    <glyphgroup name="uni041E" value="2"/>
    <glyphgroup name="uni041F" value="2"/>
    <glyphgroup name="uni0420" value="2"/>
    <glyphgroup name="uni0420.ss01" value="1"/>
    <glyphgroup name="uni0421" value="2"/>
    <glyphgroup name="uni0422" value="2"/>
    <glyphgroup name="uni0422.ss01" value="1"/>
    <glyphgroup name="uni0423" value="2"/>
    <glyphgroup name="uni0423.ss01" value="1"/>
    <glyphgroup name="uni0424" value="2"/>
    <glyphgroup name="uni0424.loclBGR" value="2"/>
    <glyphgroup name="uni0424.ss01" value="2"/>
    <glyphgroup name="uni0425" value="2"/>
    <glyphgroup name="uni0426" value="2"/>
    <glyphgroup name="uni0427" value="2"/>
    <glyphgroup name="uni0428" value="2"/>
    <glyphgroup name="uni0429" value="2"/>
    <glyphgroup name="uni042A" value="2"/>
    <glyphgroup name="uni042A.ss01" value="1"/>
    <glyphgroup name="uni042B" value="2"/>
    <glyphgroup name="uni042B.ss01" value="1"/>
    <glyphgroup name="uni042C" value="2"/>
    <glyphgroup name="uni042C.ss01" value="1"/>
    <glyphgroup name="uni042D" value="2"/>
    <glyphgroup name="uni042E" value="2"/>
    <glyphgroup name="uni042F" value="2"/>
    <glyphgroup name="uni0430" value="3"/>
    <glyphgroup name="uni0430.ss01" value="1"/>
    <glyphgroup name="uni0431" value="3"/>
    <glyphgroup name="uni0431.loclSRB" value="1"/>
    <glyphgroup name="uni0432" value="3"/>
    <glyphgroup name="uni0432.loclBGR" value="3"/>
    <glyphgroup name="uni0433" value="3"/>
    <glyphgroup name="uni0433.loclBGR" value="3"/>
    <glyphgroup name="uni0433.loclSRB" value="1"/>
    <glyphgroup name="uni0434" value="3"/>
    <glyphgroup name="uni0434.loclBGR" value="1"/>
    <glyphgroup name="uni0434.loclSRB" value="1"/>
    <glyphgroup name="uni0434.ss01" value="1"/>
    <glyphgroup name="uni0435" value="3"/>
    <glyphgroup name="uni0435.ss01" value="1"/>
    <glyphgroup name="uni0436" value="3"/>
    <glyphgroup name="uni0436.loclBGR" value="3"/>
    <glyphgroup name="uni0437" value="3"/>
    <glyphgroup name="uni0437.loclBGR" value="3"/>
    <glyphgroup name="uni0438" value="3"/>
    <glyphgroup name="uni0438.loclBGR" value="1"/>
    <glyphgroup name="uni0438.ss01" value="1"/>
    <glyphgroup name="uni0439" value="3"/>
    <glyphgroup name="uni0439.loclBGR" value="1"/>
    <glyphgroup name="uni0439.ss01" value="1"/>
    <glyphgroup name="uni043A" value="3"/>
    <glyphgroup name="uni043A.loclBGR" value="1"/>
    <glyphgroup name="uni043B" value="3"/>
    <glyphgroup name="uni043B.loclBGR" value="1"/>
    <glyphgroup name="uni043C" value="3"/>
    <glyphgroup name="uni043D" value="3"/>
    <glyphgroup name="uni043D.loclBGR" value="1"/>
    <glyphgroup name="uni043E" value="3"/>
    <glyphgroup name="uni043F" value="3"/>
    <glyphgroup name="uni043F.loclBGR" value="1"/>
    <glyphgroup name="uni043F.loclSRB" value="1"/>
    <glyphgroup name="uni0440" value="3"/>
    <glyphgroup name="uni0440.ss01" value="1"/>
    <glyphgroup name="uni0441" value="3"/>
    <glyphgroup name="uni0442" value="3"/>
    <glyphgroup name="uni0442.loclBGR" value="1"/>
    <glyphgroup name="uni0442.loclSRB" value="3"/>
    <glyphgroup name="uni0442.ss01" value="1"/>
    <glyphgroup name="uni0443" value="3"/>
    <glyphgroup name="uni0443.ss01" value="1"/>
    <glyphgroup name="uni0444" value="3"/>
    <glyphgroup name="uni0445" value="3"/>
    <glyphgroup name="uni0446" value="3"/>
    <glyphgroup name="uni0446.loclBGR" value="1"/>
    <glyphgroup name="uni0447" value="3"/>
    <glyphgroup name="uni0447.loclBGR" value="1"/>
    <glyphgroup name="uni0448" value="3"/>
    <glyphgroup name="uni0448.loclBGR" value="1"/>
    <glyphgroup name="uni0449" value="3"/>
    <glyphgroup name="uni0449.loclBGR" value="1"/>
    <glyphgroup name="uni044A" value="3"/>
    <glyphgroup name="uni044A.loclBGR" value="1"/>
    <glyphgroup name="uni044A.ss01" value="3"/>
    <glyphgroup name="uni044B" value="3"/>
    <glyphgroup name="uni044B.ss01" value="1"/>
    <glyphgroup name="uni044C" value="3"/>
    <glyphgroup name="uni044C.loclBGR" value="1"/>
    <glyphgroup name="uni044C.ss01" value="3"/>
    <glyphgroup name="uni044D" value="3"/>
    <glyphgroup name="uni044E" value="3"/>
    <glyphgroup name="uni044E.loclBGR" value="1"/>
    <glyphgroup name="uni044F" value="3"/>
    <glyphgroup name="uni0450" value="3"/>
    <glyphgroup name="uni0450.ss01" value="1"/>
    <glyphgroup name="uni0451" value="3"/>
    <glyphgroup name="uni0451.ss01" value="1"/>
    <glyphgroup name="uni0452" value="3"/>
    <glyphgroup name="uni0453" value="3"/>
    <glyphgroup name="uni0453.loclMKD" value="1"/>
    <glyphgroup name="uni0454" value="3"/>
    <glyphgroup name="uni0455" value="3"/>
    <glyphgroup name="uni0456" value="3"/>
    <glyphgroup name="uni0457" value="3"/>
    <glyphgroup name="uni0458" value="3"/>
    <glyphgroup name="uni0459" value="3"/>
    <glyphgroup name="uni0459.ss01" value="1"/>
    <glyphgroup name="uni045A" value="3"/>
    <glyphgroup name="uni045A.ss01" value="1"/>
    <glyphgroup name="uni045B" value="3"/>
    <glyphgroup name="uni045C" value="3"/>
    <glyphgroup name="uni045D" value="3"/>
    <glyphgroup name="uni045D.loclBGR" value="1"/>
    <glyphgroup name="uni045D.ss01" value="1"/>
    <glyphgroup name="uni045E" value="3"/>
    <glyphgroup name="uni045E.ss01" value="1"/>
    <glyphgroup name="uni045F" value="3"/>
    <glyphgroup name="uni0462" value="2"/>
    <glyphgroup name="uni0462.ss01" value="1"/>
    <glyphgroup name="uni0463" value="3"/>
    <glyphgroup name="uni0463.ss01" value="1"/>
    <glyphgroup name="uni046A" value="2"/>
    <glyphgroup name="uni046B" value="3"/>
    <glyphgroup name="uni0472" value="2"/>
    <glyphgroup name="uni0473" value="3"/>
    <glyphgroup name="uni0474" value="2"/>
    <glyphgroup name="uni0475" value="3"/>
    <glyphgroup name="uni048A" value="2"/>
    <glyphgroup name="uni048A.ss01" value="1"/>
    <glyphgroup name="uni048B" value="3"/>
    <glyphgroup name="uni048B.ss01" value="1"/>
    <glyphgroup name="uni048C" value="2"/>
    <glyphgroup name="uni048C.ss01" value="1"/>
    <glyphgroup name="uni048D" value="3"/>
    <glyphgroup name="uni048D.ss01" value="3"/>
    <glyphgroup name="uni048E" value="2"/>
    <glyphgroup name="uni048F" value="3"/>
    <glyphgroup name="uni0490" value="2"/>
    <glyphgroup name="uni0491" value="3"/>
    <glyphgroup name="uni0492" value="2"/>
    <glyphgroup name="uni0492.loclBSH" value="1"/>
    <glyphgroup name="uni0493" value="3"/>
    <glyphgroup name="uni0493.loclBSH" value="1"/>
    <glyphgroup name="uni0494" value="2"/>
    <glyphgroup name="uni0495" value="3"/>
    <glyphgroup name="uni0496" value="2"/>
    <glyphgroup name="uni0497" value="3"/>
    <glyphgroup name="uni0498" value="2"/>
    <glyphgroup name="uni0498.loclBSH" value="1"/>
    <glyphgroup name="uni0499" value="3"/>
    <glyphgroup name="uni0499.loclBSH" value="1"/>
    <glyphgroup name="uni049A" value="2"/>
    <glyphgroup name="uni049B" value="3"/>
    <glyphgroup name="uni049C" value="2"/>
    <glyphgroup name="uni049D" value="3"/>
    <glyphgroup name="uni049E" value="2"/>
    <glyphgroup name="uni049F" value="3"/>
    <glyphgroup name="uni04A0" value="2"/>
    <glyphgroup name="uni04A1" value="3"/>
    <glyphgroup name="uni04A2" value="2"/>
    <glyphgroup name="uni04A3" value="3"/>
    <glyphgroup name="uni04A4" value="2"/>
    <glyphgroup name="uni04A5" value="3"/>
    <glyphgroup name="uni04A6" value="2"/>
    <glyphgroup name="uni04A7" value="3"/>
    <glyphgroup name="uni04A8" value="2"/>
    <glyphgroup name="uni04A9" value="3"/>
    <glyphgroup name="uni04AA" value="2"/>
    <glyphgroup name="uni04AA.loclBSH" value="1"/>
    <glyphgroup name="uni04AA.loclCHU" value="1"/>
    <glyphgroup name="uni04AB" value="3"/>
    <glyphgroup name="uni04AB.loclCHU" value="1"/>
    <glyphgroup name="uni04AC" value="2"/>
    <glyphgroup name="uni04AC.ss01" value="1"/>
    <glyphgroup name="uni04AD" value="3"/>
    <glyphgroup name="uni04B2" value="2"/>
    <glyphgroup name="uni04B3" value="3"/>
    <glyphgroup name="uni04B4" value="2"/>
    <glyphgroup name="uni04B5" value="3"/>
    <glyphgroup name="uni04B6" value="2"/>
    <glyphgroup name="uni04B7" value="3"/>
    <glyphgroup name="uni04B8" value="2"/>
    <glyphgroup name="uni04B9" value="3"/>
    <glyphgroup name="uni04BA" value="2"/>
    <glyphgroup name="uni04BB" value="3"/>
    <glyphgroup name="uni04BC" value="2"/>
    <glyphgroup name="uni04BD" value="3"/>
    <glyphgroup name="uni04BE" value="2"/>
    <glyphgroup name="uni04BF" value="3"/>
    <glyphgroup name="uni04C0" value="2"/>
    <glyphgroup name="uni04C1" value="2"/>
    <glyphgroup name="uni04C2" value="3"/>
    <glyphgroup name="uni04C3" value="2"/>
    <glyphgroup name="uni04C4" value="3"/>
    <glyphgroup name="uni04C5.ss01" value="1"/>
    <glyphgroup name="uni04C6" value="3"/>
    <glyphgroup name="uni04C7" value="2"/>
    <glyphgroup name="uni04C8" value="3"/>
    <glyphgroup name="uni04C9" value="2"/>
    <glyphgroup name="uni04CA" value="3"/>
    <glyphgroup name="uni04CB" value="2"/>
    <glyphgroup name="uni04CC" value="3"/>
    <glyphgroup name="uni04CD" value="2"/>
    <glyphgroup name="uni04CE" value="3"/>
    <glyphgroup name="uni04CF" value="3"/>
    <glyphgroup name="uni04D0" value="2"/>
    <glyphgroup name="uni04D0.ss01" value="1"/>
    <glyphgroup name="uni04D1" value="3"/>
    <glyphgroup name="uni04D1.ss01" value="1"/>
    <glyphgroup name="uni04D2" value="2"/>
    <glyphgroup name="uni04D2.ss01" value="1"/>
    <glyphgroup name="uni04D3" value="3"/>
    <glyphgroup name="uni04D3.ss01" value="1"/>
    <glyphgroup name="uni04D4" value="2"/>
    <glyphgroup name="uni04D4.ss01" value="1"/>
    <glyphgroup name="uni04D5" value="3"/>
    <glyphgroup name="uni04D5.ss01" value="1"/>
    <glyphgroup name="uni04D6" value="2"/>
    <glyphgroup name="uni04D6.ss01" value="1"/>
    <glyphgroup name="uni04D7" value="3"/>
    <glyphgroup name="uni04D7.ss01" value="1"/>
    <glyphgroup name="uni04D8" value="2"/>
    <glyphgroup name="uni04D8.ss01" value="1"/>
    <glyphgroup name="uni04D9" value="3"/>
    <glyphgroup name="uni04D9.ss01" value="1"/>
    <glyphgroup name="uni04DA" value="2"/>
    <glyphgroup name="uni04DA.ss01" value="1"/>
    <glyphgroup name="uni04DB" value="3"/>
    <glyphgroup name="uni04DB.ss01" value="1"/>
    <glyphgroup name="uni04DC" value="2"/>
    <glyphgroup name="uni04DD" value="3"/>
    <glyphgroup name="uni04DE" value="2"/>
    <glyphgroup name="uni04DF" value="3"/>
    <glyphgroup name="uni04E0" value="2"/>
    <glyphgroup name="uni04E1" value="3"/>
    <glyphgroup name="uni04E2" value="2"/>
    <glyphgroup name="uni04E2.ss01" value="1"/>
    <glyphgroup name="uni04E3" value="3"/>
    <glyphgroup name="uni04E3.ss01" value="1"/>
    <glyphgroup name="uni04E4" value="2"/>
    <glyphgroup name="uni04E4.ss01" value="1"/>
    <glyphgroup name="uni04E5" value="3"/>
    <glyphgroup name="uni04E5.ss01" value="1"/>
    <glyphgroup name="uni04E6" value="2"/>
    <glyphgroup name="uni04E7" value="3"/>
    <glyphgroup name="uni04E8" value="2"/>
    <glyphgroup name="uni04E9" value="3"/>
    <glyphgroup name="uni04EA" value="2"/>
    <glyphgroup name="uni04EB" value="3"/>
    <glyphgroup name="uni04EC" value="2"/>
    <glyphgroup name="uni04ED" value="3"/>
    <glyphgroup name="uni04EE" value="2"/>
    <glyphgroup name="uni04EE.ss01" value="1"/>
    <glyphgroup name="uni04EF" value="3"/>
    <glyphgroup name="uni04EF.ss01" value="1"/>
    <glyphgroup name="uni04F0" value="2"/>
    <glyphgroup name="uni04F0.ss01" value="1"/>
    <glyphgroup name="uni04F1" value="3"/>
    <glyphgroup name="uni04F1.ss01" value="1"/>
    <glyphgroup name="uni04F2" value="2"/>
    <glyphgroup name="uni04F2.ss01" value="1"/>
    <glyphgroup name="uni04F3" value="3"/>
    <glyphgroup name="uni04F3.ss01" value="1"/>
    <glyphgroup name="uni04F4" value="2"/>
    <glyphgroup name="uni04F5" value="3"/>
    <glyphgroup name="uni04F6" value="2"/>
    <glyphgroup name="uni04F7" value="3"/>
    <glyphgroup name="uni04F8" value="2"/>
    <glyphgroup name="uni04F8.ss01" value="1"/>
    <glyphgroup name="uni04F9" value="3"/>
    <glyphgroup name="uni04F9.ss01" value="1"/>
    <glyphgroup name="uni04FA" value="1"/>
    <glyphgroup name="uni04FB" value="3"/>
    <glyphgroup name="uni04FC" value="2"/>
    <glyphgroup name="uni04FD" value="1"/>
    <glyphgroup name="uni04FE" value="1"/>
    <glyphgroup name="uni04FF" value="1"/>
    <glyphgroup name="uni0510" value="2"/>
    <glyphgroup name="uni0511" value="3"/>
    <glyphgroup name="uni0512" value="2"/>
    <glyphgroup name="uni0513" value="1"/>
    <glyphgroup name="uni051A" value="1"/>
    <glyphgroup name="uni051A.ss01" value="1"/>
    <glyphgroup name="uni051B" value="1"/>
    <glyphgroup name="uni051C" value="1"/>
    <glyphgroup name="uni051D" value="3"/>
    <glyphgroup name="uni0524" value="1"/>
    <glyphgroup name="uni0525" value="1"/>
    <glyphgroup name="uni0526" value="1"/>
    <glyphgroup name="uni0527" value="3"/>
    <glyphgroup name="uni0528" value="1"/>
    <glyphgroup name="uni0529" value="3"/>
    <glyphgroup name="uni052E" value="2"/>
    <glyphgroup name="uni052F" value="1"/>
    <glyphgroup name="uni1E08" value="1"/>
    <glyphgroup name="uni1E09" value="1"/>
    <glyphgroup name="uni1E09.sc" value="1"/>
    <glyphgroup name="uni1E0C" value="2"/>
    <glyphgroup name="uni1E0D" value="3"/>
    <glyphgroup name="uni1E0D.sc" value="1"/>
    <glyphgroup name="uni1E0E" value="2"/>
    <glyphgroup name="uni1E0F" value="3"/>
    <glyphgroup name="uni1E0F.sc" value="1"/>
    <glyphgroup name="uni1E14" value="1"/>
    <glyphgroup name="uni1E14.ss01" value="1"/>
    <glyphgroup name="uni1E15" value="1"/>
    <glyphgroup name="uni1E15.sc" value="1"/>
    <glyphgroup name="uni1E15.sc.ss01" value="1"/>
    <glyphgroup name="uni1E15.ss01" value="1"/>
    <glyphgroup name="uni1E16" value="1"/>
    <glyphgroup name="uni1E16.ss01" value="1"/>
    <glyphgroup name="uni1E17" value="1"/>
    <glyphgroup name="uni1E17.sc" value="1"/>
    <glyphgroup name="uni1E17.sc.ss01" value="1"/>
    <glyphgroup name="uni1E17.ss01" value="1"/>
    <glyphgroup name="uni1E1C" value="1"/>
    <glyphgroup name="uni1E1C.ss01" value="1"/>
    <glyphgroup name="uni1E1D" value="1"/>
    <glyphgroup name="uni1E1D.sc" value="1"/>
    <glyphgroup name="uni1E1D.sc.ss01" value="1"/>
    <glyphgroup name="uni1E1D.ss01" value="1"/>
    <glyphgroup name="uni1E20" value="2"/>
    <glyphgroup name="uni1E20.ss01" value="1"/>
    <glyphgroup name="uni1E21" value="3"/>
    <glyphgroup name="uni1E21.sc" value="1"/>
    <glyphgroup name="uni1E21.sc.ss01" value="1"/>
    <glyphgroup name="uni1E24" value="2"/>
    <glyphgroup name="uni1E25" value="3"/>
    <glyphgroup name="uni1E25.sc" value="1"/>
    <glyphgroup name="uni1E2A" value="2"/>
    <glyphgroup name="uni1E2B" value="3"/>
    <glyphgroup name="uni1E2B.sc" value="1"/>
    <glyphgroup name="uni1E2E" value="1"/>
    <glyphgroup name="uni1E2E.ss01" value="1"/>
    <glyphgroup name="uni1E2F" value="3"/>
    <glyphgroup name="uni1E2F.sc" value="1"/>
    <glyphgroup name="uni1E2F.sc.ss01" value="1"/>
    <glyphgroup name="uni1E36" value="2"/>
    <glyphgroup name="uni1E37" value="3"/>
    <glyphgroup name="uni1E37.sc" value="1"/>
    <glyphgroup name="uni1E37.ss01" value="1"/>
    <glyphgroup name="uni1E3A" value="2"/>
    <glyphgroup name="uni1E3B" value="3"/>
    <glyphgroup name="uni1E3B.sc" value="1"/>
    <glyphgroup name="uni1E3B.ss01" value="1"/>
    <glyphgroup name="uni1E42" value="2"/>
    <glyphgroup name="uni1E42.ss01" value="1"/>
    <glyphgroup name="uni1E43" value="3"/>
    <glyphgroup name="uni1E43.sc" value="1"/>
    <glyphgroup name="uni1E43.sc.ss01" value="1"/>
    <glyphgroup name="uni1E44" value="2"/>
    <glyphgroup name="uni1E44.ss01" value="1"/>
    <glyphgroup name="uni1E45" value="3"/>
    <glyphgroup name="uni1E45.sc" value="1"/>
    <glyphgroup name="uni1E45.sc.ss01" value="1"/>
    <glyphgroup name="uni1E46" value="2"/>
    <glyphgroup name="uni1E46.ss01" value="1"/>
    <glyphgroup name="uni1E47" value="3"/>
    <glyphgroup name="uni1E47.sc" value="1"/>
    <glyphgroup name="uni1E47.sc.ss01" value="1"/>
    <glyphgroup name="uni1E48" value="2"/>
    <glyphgroup name="uni1E48.ss01" value="1"/>
    <glyphgroup name="uni1E49" value="3"/>
    <glyphgroup name="uni1E49.sc" value="1"/>
    <glyphgroup name="uni1E49.sc.ss01" value="1"/>
    <glyphgroup name="uni1E4C" value="1"/>
    <glyphgroup name="uni1E4D" value="1"/>
    <glyphgroup name="uni1E4D.sc" value="3"/>
    <glyphgroup name="uni1E4E" value="1"/>
    <glyphgroup name="uni1E4F" value="3"/>
    <glyphgroup name="uni1E4F.sc" value="1"/>
    <glyphgroup name="uni1E50" value="1"/>
    <glyphgroup name="uni1E51" value="1"/>
    <glyphgroup name="uni1E51.sc" value="1"/>
    <glyphgroup name="uni1E52" value="1"/>
    <glyphgroup name="uni1E53" value="3"/>
    <glyphgroup name="uni1E53.sc" value="1"/>
    <glyphgroup name="uni1E5A" value="2"/>
    <glyphgroup name="uni1E5B" value="3"/>
    <glyphgroup name="uni1E5B.sc" value="1"/>
    <glyphgroup name="uni1E5E" value="2"/>
    <glyphgroup name="uni1E5F" value="3"/>
    <glyphgroup name="uni1E5F.sc" value="1"/>
    <glyphgroup name="uni1E60" value="2"/>
    <glyphgroup name="uni1E61" value="3"/>
    <glyphgroup name="uni1E61.sc" value="1"/>
    <glyphgroup name="uni1E62" value="2"/>
    <glyphgroup name="uni1E63" value="3"/>
    <glyphgroup name="uni1E63.sc" value="1"/>
    <glyphgroup name="uni1E64" value="1"/>
    <glyphgroup name="uni1E65" value="1"/>
    <glyphgroup name="uni1E65.sc" value="3"/>
    <glyphgroup name="uni1E66" value="1"/>
    <glyphgroup name="uni1E67" value="1"/>
    <glyphgroup name="uni1E67.sc" value="1"/>
    <glyphgroup name="uni1E68" value="1"/>
    <glyphgroup name="uni1E69" value="1"/>
    <glyphgroup name="uni1E69.sc" value="1"/>
    <glyphgroup name="uni1E6C" value="2"/>
    <glyphgroup name="uni1E6C.ss01" value="1"/>
    <glyphgroup name="uni1E6D" value="3"/>
    <glyphgroup name="uni1E6D.sc" value="1"/>
    <glyphgroup name="uni1E6D.sc.ss01" value="1"/>
    <glyphgroup name="uni1E6D.ss01" value="1"/>
    <glyphgroup name="uni1E6E" value="2"/>
    <glyphgroup name="uni1E6E.ss01" value="1"/>
    <glyphgroup name="uni1E6F" value="3"/>
    <glyphgroup name="uni1E6F.sc" value="1"/>
    <glyphgroup name="uni1E6F.sc.ss01" value="1"/>
    <glyphgroup name="uni1E6F.ss01" value="1"/>
    <glyphgroup name="uni1E78" value="1"/>
    <glyphgroup name="uni1E78.ss01" value="1"/>
    <glyphgroup name="uni1E79" value="3"/>
    <glyphgroup name="uni1E79.sc" value="3"/>
    <glyphgroup name="uni1E79.sc.ss01" value="3"/>
    <glyphgroup name="uni1E7A" value="1"/>
    <glyphgroup name="uni1E7A.ss01" value="1"/>
    <glyphgroup name="uni1E7B" value="1"/>
    <glyphgroup name="uni1E7B.sc" value="1"/>
    <glyphgroup name="uni1E7B.sc.ss01" value="1"/>
    <glyphgroup name="uni1E8E" value="2"/>
    <glyphgroup name="uni1E8E.ss01" value="1"/>
    <glyphgroup name="uni1E8F" value="3"/>
    <glyphgroup name="uni1E8F.sc" value="1"/>
    <glyphgroup name="uni1E8F.sc.ss01" value="1"/>
    <glyphgroup name="uni1E8F.ss01" value="1"/>
    <glyphgroup name="uni1E92" value="2"/>
    <glyphgroup name="uni1E92.ss01" value="1"/>
    <glyphgroup name="uni1E93" value="3"/>
    <glyphgroup name="uni1E93.sc" value="1"/>
    <glyphgroup name="uni1E93.sc.ss01" value="1"/>
    <glyphgroup name="uni1E93.ss01" value="1"/>
    <glyphgroup name="uni1E97" value="3"/>
    <glyphgroup name="uni1E97.sc" value="1"/>
    <glyphgroup name="uni1E97.sc.ss01" value="1"/>
    <glyphgroup name="uni1E97.ss01" value="1"/>
    <glyphgroup name="uni1E9E" value="2"/>
    <glyphgroup name="uni1EA0" value="2"/>
    <glyphgroup name="uni1EA0.ss01" value="1"/>
    <glyphgroup name="uni1EA1" value="3"/>
    <glyphgroup name="uni1EA1.sc" value="1"/>
    <glyphgroup name="uni1EA1.sc.ss01" value="1"/>
    <glyphgroup name="uni1EA1.ss01" value="1"/>
    <glyphgroup name="uni1EA2" value="2"/>
    <glyphgroup name="uni1EA2.ss01" value="1"/>
    <glyphgroup name="uni1EA3" value="3"/>
    <glyphgroup name="uni1EA3.sc" value="1"/>
    <glyphgroup name="uni1EA3.sc.ss01" value="1"/>
    <glyphgroup name="uni1EA3.ss01" value="1"/>
    <glyphgroup name="uni1EA4" value="2"/>
    <glyphgroup name="uni1EA4.ss01" value="1"/>
    <glyphgroup name="uni1EA5" value="3"/>
    <glyphgroup name="uni1EA5.sc" value="1"/>
    <glyphgroup name="uni1EA5.sc.ss01" value="1"/>
    <glyphgroup name="uni1EA5.ss01" value="1"/>
    <glyphgroup name="uni1EA6" value="2"/>
    <glyphgroup name="uni1EA6.ss01" value="1"/>
    <glyphgroup name="uni1EA7" value="3"/>
    <glyphgroup name="uni1EA7.sc" value="1"/>
    <glyphgroup name="uni1EA7.sc.ss01" value="1"/>
    <glyphgroup name="uni1EA7.ss01" value="1"/>
    <glyphgroup name="uni1EA8" value="2"/>
    <glyphgroup name="uni1EA8.ss01" value="1"/>
    <glyphgroup name="uni1EA9" value="3"/>
    <glyphgroup name="uni1EA9.sc" value="1"/>
    <glyphgroup name="uni1EA9.sc.ss01" value="1"/>
    <glyphgroup name="uni1EA9.ss01" value="1"/>
    <glyphgroup name="uni1EAA" value="2"/>
    <glyphgroup name="uni1EAA.ss01" value="1"/>
    <glyphgroup name="uni1EAB" value="3"/>
    <glyphgroup name="uni1EAB.sc" value="1"/>
    <glyphgroup name="uni1EAB.sc.ss01" value="1"/>
    <glyphgroup name="uni1EAB.ss01" value="3"/>
    <glyphgroup name="uni1EAC" value="2"/>
    <glyphgroup name="uni1EAC.ss01" value="1"/>
    <glyphgroup name="uni1EAD" value="3"/>
    <glyphgroup name="uni1EAD.sc" value="1"/>
    <glyphgroup name="uni1EAD.sc.ss01" value="1"/>
    <glyphgroup name="uni1EAD.ss01" value="1"/>
    <glyphgroup name="uni1EAE" value="2"/>
    <glyphgroup name="uni1EAE.ss01" value="1"/>
    <glyphgroup name="uni1EAF" value="3"/>
    <glyphgroup name="uni1EAF.sc" value="1"/>
    <glyphgroup name="uni1EAF.sc.ss01" value="1"/>
    <glyphgroup name="uni1EAF.ss01" value="1"/>
    <glyphgroup name="uni1EB0" value="2"/>
    <glyphgroup name="uni1EB0.ss01" value="1"/>
    <glyphgroup name="uni1EB1" value="3"/>
    <glyphgroup name="uni1EB1.sc" value="1"/>
    <glyphgroup name="uni1EB1.sc.ss01" value="1"/>
    <glyphgroup name="uni1EB1.ss01" value="1"/>
    <glyphgroup name="uni1EB2" value="2"/>
    <glyphgroup name="uni1EB2.ss01" value="1"/>
    <glyphgroup name="uni1EB3" value="3"/>
    <glyphgroup name="uni1EB3.sc" value="1"/>
    <glyphgroup name="uni1EB3.sc.ss01" value="1"/>
    <glyphgroup name="uni1EB3.ss01" value="1"/>
    <glyphgroup name="uni1EB4" value="2"/>
    <glyphgroup name="uni1EB4.ss01" value="1"/>
    <glyphgroup name="uni1EB5" value="3"/>
    <glyphgroup name="uni1EB5.sc" value="3"/>
    <glyphgroup name="uni1EB5.sc.ss01" value="1"/>
    <glyphgroup name="uni1EB5.ss01" value="3"/>
    <glyphgroup name="uni1EB6" value="2"/>
    <glyphgroup name="uni1EB6.ss01" value="1"/>
    <glyphgroup name="uni1EB7" value="3"/>
    <glyphgroup name="uni1EB7.sc" value="1"/>
    <glyphgroup name="uni1EB7.sc.ss01" value="1"/>
    <glyphgroup name="uni1EB7.ss01" value="1"/>
    <glyphgroup name="uni1EB8" value="2"/>
    <glyphgroup name="uni1EB8.ss01" value="1"/>
    <glyphgroup name="uni1EB9" value="3"/>
    <glyphgroup name="uni1EB9.sc" value="1"/>
    <glyphgroup name="uni1EB9.sc.ss01" value="1"/>
    <glyphgroup name="uni1EB9.ss01" value="1"/>
    <glyphgroup name="uni1EBA" value="2"/>
    <glyphgroup name="uni1EBA.ss01" value="1"/>
    <glyphgroup name="uni1EBB" value="3"/>
    <glyphgroup name="uni1EBB.sc" value="1"/>
    <glyphgroup name="uni1EBB.sc.ss01" value="1"/>
    <glyphgroup name="uni1EBB.ss01" value="1"/>
    <glyphgroup name="uni1EBC" value="2"/>
    <glyphgroup name="uni1EBC.ss01" value="1"/>
    <glyphgroup name="uni1EBD" value="3"/>
    <glyphgroup name="uni1EBD.sc" value="1"/>
    <glyphgroup name="uni1EBD.sc.ss01" value="1"/>
    <glyphgroup name="uni1EBD.ss01" value="1"/>
    <glyphgroup name="uni1EBE" value="2"/>
    <glyphgroup name="uni1EBE.ss01" value="1"/>
    <glyphgroup name="uni1EBF" value="3"/>
    <glyphgroup name="uni1EBF.sc" value="1"/>
    <glyphgroup name="uni1EBF.sc.ss01" value="1"/>
    <glyphgroup name="uni1EBF.ss01" value="1"/>
    <glyphgroup name="uni1EC0" value="2"/>
    <glyphgroup name="uni1EC0.ss01" value="1"/>
    <glyphgroup name="uni1EC1" value="3"/>
    <glyphgroup name="uni1EC1.sc" value="1"/>
    <glyphgroup name="uni1EC1.sc.ss01" value="1"/>
    <glyphgroup name="uni1EC1.ss01" value="1"/>
    <glyphgroup name="uni1EC2" value="2"/>
    <glyphgroup name="uni1EC2.ss01" value="1"/>
    <glyphgroup name="uni1EC3" value="3"/>
    <glyphgroup name="uni1EC3.sc" value="1"/>
    <glyphgroup name="uni1EC3.sc.ss01" value="1"/>
    <glyphgroup name="uni1EC3.ss01" value="1"/>
    <glyphgroup name="uni1EC4" value="2"/>
    <glyphgroup name="uni1EC4.ss01" value="1"/>
    <glyphgroup name="uni1EC5" value="3"/>
    <glyphgroup name="uni1EC5.sc" value="1"/>
    <glyphgroup name="uni1EC5.sc.ss01" value="1"/>
    <glyphgroup name="uni1EC5.ss01" value="1"/>
    <glyphgroup name="uni1EC6" value="2"/>
    <glyphgroup name="uni1EC6.ss01" value="1"/>
    <glyphgroup name="uni1EC7" value="3"/>
    <glyphgroup name="uni1EC7.sc" value="1"/>
    <glyphgroup name="uni1EC7.sc.ss01" value="1"/>
    <glyphgroup name="uni1EC7.ss01" value="1"/>
    <glyphgroup name="uni1EC8" value="2"/>
    <glyphgroup name="uni1EC8.ss01" value="1"/>
    <glyphgroup name="uni1EC9" value="3"/>
    <glyphgroup name="uni1EC9.sc" value="1"/>
    <glyphgroup name="uni1EC9.sc.ss01" value="1"/>
    <glyphgroup name="uni1ECA" value="2"/>
    <glyphgroup name="uni1ECA.ss01" value="1"/>
    <glyphgroup name="uni1ECB" value="3"/>
    <glyphgroup name="uni1ECB.sc" value="1"/>
    <glyphgroup name="uni1ECB.sc.ss01" value="1"/>
    <glyphgroup name="uni1ECC" value="2"/>
    <glyphgroup name="uni1ECD" value="3"/>
    <glyphgroup name="uni1ECD.sc" value="1"/>
    <glyphgroup name="uni1ECE" value="2"/>
    <glyphgroup name="uni1ECF" value="3"/>
    <glyphgroup name="uni1ECF.sc" value="1"/>
    <glyphgroup name="uni1ED0" value="2"/>
    <glyphgroup name="uni1ED1" value="3"/>
    <glyphgroup name="uni1ED1.sc" value="1"/>
    <glyphgroup name="uni1ED2" value="2"/>
    <glyphgroup name="uni1ED3" value="3"/>
    <glyphgroup name="uni1ED3.sc" value="1"/>
    <glyphgroup name="uni1ED4" value="2"/>
    <glyphgroup name="uni1ED5" value="3"/>
    <glyphgroup name="uni1ED5.sc" value="1"/>
    <glyphgroup name="uni1ED6" value="2"/>
    <glyphgroup name="uni1ED7" value="3"/>
    <glyphgroup name="uni1ED7.sc" value="1"/>
    <glyphgroup name="uni1ED8" value="2"/>
    <glyphgroup name="uni1ED9" value="3"/>
    <glyphgroup name="uni1ED9.sc" value="1"/>
    <glyphgroup name="uni1EDA" value="2"/>
    <glyphgroup name="uni1EDB" value="3"/>
    <glyphgroup name="uni1EDB.sc" value="1"/>
    <glyphgroup name="uni1EDC" value="2"/>
    <glyphgroup name="uni1EDD" value="3"/>
    <glyphgroup name="uni1EDD.sc" value="1"/>
    <glyphgroup name="uni1EDE" value="2"/>
    <glyphgroup name="uni1EDF" value="3"/>
    <glyphgroup name="uni1EDF.sc" value="1"/>
    <glyphgroup name="uni1EE0" value="2"/>
    <glyphgroup name="uni1EE1" value="3"/>
    <glyphgroup name="uni1EE1.sc" value="1"/>
    <glyphgroup name="uni1EE2" value="2"/>
    <glyphgroup name="uni1EE3" value="3"/>
    <glyphgroup name="uni1EE3.sc" value="1"/>
    <glyphgroup name="uni1EE4" value="2"/>
    <glyphgroup name="uni1EE4.ss01" value="1"/>
    <glyphgroup name="uni1EE5" value="3"/>
    <glyphgroup name="uni1EE5.sc" value="1"/>
    <glyphgroup name="uni1EE5.sc.ss01" value="1"/>
    <glyphgroup name="uni1EE6" value="2"/>
    <glyphgroup name="uni1EE6.ss01" value="1"/>
    <glyphgroup name="uni1EE7" value="3"/>
    <glyphgroup name="uni1EE7.sc" value="1"/>
    <glyphgroup name="uni1EE7.sc.ss01" value="1"/>
    <glyphgroup name="uni1EE8" value="2"/>
    <glyphgroup name="uni1EE8.ss01" value="1"/>
    <glyphgroup name="uni1EE9" value="3"/>
    <glyphgroup name="uni1EE9.sc" value="1"/>
    <glyphgroup name="uni1EE9.sc.ss01" value="1"/>
    <glyphgroup name="uni1EEA" value="2"/>
    <glyphgroup name="uni1EEA.ss01" value="1"/>
    <glyphgroup name="uni1EEB" value="3"/>
    <glyphgroup name="uni1EEB.sc" value="1"/>
    <glyphgroup name="uni1EEB.sc.ss01" value="1"/>
    <glyphgroup name="uni1EEC" value="2"/>
    <glyphgroup name="uni1EEC.ss01" value="1"/>
    <glyphgroup name="uni1EED" value="3"/>
    <glyphgroup name="uni1EED.sc" value="1"/>
    <glyphgroup name="uni1EED.sc.ss01" value="1"/>
    <glyphgroup name="uni1EEE" value="2"/>
    <glyphgroup name="uni1EEE.ss01" value="1"/>
    <glyphgroup name="uni1EEF" value="3"/>
    <glyphgroup name="uni1EEF.sc" value="1"/>
    <glyphgroup name="uni1EEF.sc.ss01" value="1"/>
    <glyphgroup name="uni1EF0" value="2"/>
    <glyphgroup name="uni1EF0.ss01" value="1"/>
    <glyphgroup name="uni1EF1" value="3"/>
    <glyphgroup name="uni1EF1.sc" value="1"/>
    <glyphgroup name="uni1EF1.sc.ss01" value="1"/>
    <glyphgroup name="uni1EF4" value="2"/>
    <glyphgroup name="uni1EF4.ss01" value="1"/>
    <glyphgroup name="uni1EF5" value="3"/>
    <glyphgroup name="uni1EF5.sc" value="1"/>
    <glyphgroup name="uni1EF5.sc.ss01" value="3"/>
    <glyphgroup name="uni1EF5.ss01" value="1"/>
    <glyphgroup name="uni1EF6" value="2"/>
    <glyphgroup name="uni1EF6.ss01" value="1"/>
    <glyphgroup name="uni1EF7" value="3"/>
    <glyphgroup name="uni1EF7.sc" value="1"/>
    <glyphgroup name="uni1EF7.sc.ss01" value="1"/>
    <glyphgroup name="uni1EF7.ss01" value="1"/>
    <glyphgroup name="uni1EF8" value="2"/>
    <glyphgroup name="uni1EF8.ss01" value="1"/>
    <glyphgroup name="uni1EF9" value="3"/>
    <glyphgroup name="uni1EF9.sc" value="1"/>
    <glyphgroup name="uni1EF9.sc.ss01" value="1"/>
    <glyphgroup name="uni1EF9.ss01" value="1"/>
    <glyphgroup name="uni2007" value="1"/>
    <glyphgroup name="uni2008" value="1"/>
    <glyphgroup name="uni2009" value="1"/>
    <glyphgroup name="uni200A" value="1"/>
    <glyphgroup name="uni200B" value="1"/>
    <glyphgroup name="uni2010" value="1"/>
    <glyphgroup name="uni2015" value="1"/>
    <glyphgroup name="uni2052" value="4"/>
    <glyphgroup name="uni2070" value="1"/>
    <glyphgroup name="uni2074" value="1"/>
    <glyphgroup name="uni2075" value="1"/>
    <glyphgroup name="uni2076" value="1"/>
    <glyphgroup name="uni2077" value="1"/>
    <glyphgroup name="uni2078" value="1"/>
    <glyphgroup name="uni2079" value="1"/>
    <glyphgroup name="uni2080" value="1"/>
    <glyphgroup name="uni2081" value="1"/>
    <glyphgroup name="uni2082" value="1"/>
    <glyphgroup name="uni2083" value="1"/>
    <glyphgroup name="uni2084" value="1"/>
    <glyphgroup name="uni2085" value="1"/>
    <glyphgroup name="uni2086" value="1"/>
    <glyphgroup name="uni2087" value="1"/>
    <glyphgroup name="uni2088" value="1"/>
    <glyphgroup name="uni2089" value="1"/>
    <glyphgroup name="uni20A6" value="4"/>
    <glyphgroup name="uni20A6.1" value="4"/>
    <glyphgroup name="uni20A9" value="4"/>
    <glyphgroup name="uni20A9.1" value="4"/>
    <glyphgroup name="uni20AD" value="4"/>
    <glyphgroup name="uni20AE" value="4"/>
    <glyphgroup name="uni20B1" value="4"/>
    <glyphgroup name="uni20B1.1" value="4"/>
    <glyphgroup name="uni20B2" value="4"/>
    <glyphgroup name="uni20B2.1" value="4"/>
    <glyphgroup name="uni20B4" value="4"/>
    <glyphgroup name="uni20B5" value="4"/>
    <glyphgroup name="uni20B5.1" value="4"/>
    <glyphgroup name="uni20B8" value="4"/>
    <glyphgroup name="uni20B9" value="4"/>
    <glyphgroup name="uni20BA" value="1"/>
    <glyphgroup name="uni20BC" value="4"/>
    <glyphgroup name="uni20BD" value="4"/>
    <glyphgroup name="uni2113" value="1"/>
    <glyphgroup name="uni2116" value="4"/>
    <glyphgroup name="uni2116.ss01" value="2"/>
    <glyphgroup name="uni2126" value="1"/>
    <glyphgroup name="uni212A" value="1"/>
    <glyphgroup name="uni212B" value="2"/>
    <glyphgroup name="uni2153" value="1"/>
    <glyphgroup name="uni2154" value="1"/>
    <glyphgroup name="uni2196" value="1"/>
    <glyphgroup name="uni2197" value="1"/>
    <glyphgroup name="uni2198" value="1"/>
    <glyphgroup name="uni2199" value="1"/>
    <glyphgroup name="uni2206" value="1"/>
    <glyphgroup name="uni2215" value="1"/>
    <glyphgroup name="uni2219" value="1"/>
    <glyphgroup name="uni25A1" value="1"/>
    <glyphgroup name="uni25B3" value="1"/>
    <glyphgroup name="uni25B6" value="1"/>
    <glyphgroup name="uni25B7" value="1"/>
    <glyphgroup name="uni25BD" value="1"/>
    <glyphgroup name="uni25C0" value="1"/>
    <glyphgroup name="uni25C1" value="1"/>
    <glyphgroup name="uni25C6" value="3"/>
    <glyphgroup name="uni25C7" value="1"/>
    <glyphgroup name="uni27E8" value="1"/>
    <glyphgroup name="uni27E9" value="1"/>
    <glyphgroup name="uniA78B" value="1"/>
    <glyphgroup name="uniA78C" value="1"/>
    <glyphgroup name="uniA78C.sc" value="1"/>
    <glyphgroup name="uogonek" value="3"/>
    <glyphgroup name="uogonek.sc" value="1"/>
    <glyphgroup name="uogonek.sc.ss01" value="1"/>
    <glyphgroup name="uring" value="3"/>
    <glyphgroup name="uring.sc" value="1"/>
    <glyphgroup name="uring.sc.ss01" value="1"/>
    <glyphgroup name="ustraitcy" value="3"/>
    <glyphgroup name="ustraitstrokecy" value="3"/>
    <glyphgroup name="utilde" value="3"/>
    <glyphgroup name="utilde.sc" value="1"/>
    <glyphgroup name="utilde.sc.ss01" value="1"/>
    <glyphgroup name="v" value="3"/>
    <glyphgroup name="v.sc" value="1"/>
    <glyphgroup name="verticalbarcy" value="1"/>
    <glyphgroup name="verticalbarcy.case" value="1"/>
    <glyphgroup name="verticallinelowmodcomb" value="1"/>
    <glyphgroup name="w" value="3"/>
    <glyphgroup name="w.sc" value="1"/>
    <glyphgroup name="w.sc.ss01" value="1"/>
    <glyphgroup name="w.ss01" value="1"/>
    <glyphgroup name="wacute" value="3"/>
    <glyphgroup name="wacute.sc" value="1"/>
    <glyphgroup name="wacute.sc.ss01" value="1"/>
    <glyphgroup name="wacute.ss01" value="1"/>
    <glyphgroup name="wcircumflex" value="3"/>
    <glyphgroup name="wcircumflex.sc" value="1"/>
    <glyphgroup name="wcircumflex.sc.ss01" value="1"/>
    <glyphgroup name="wcircumflex.ss01" value="1"/>
    <glyphgroup name="wdieresis" value="3"/>
    <glyphgroup name="wdieresis.sc" value="1"/>
    <glyphgroup name="wdieresis.sc.ss01" value="1"/>
    <glyphgroup name="wdieresis.ss01" value="1"/>
    <glyphgroup name="wgrave" value="3"/>
    <glyphgroup name="wgrave.sc" value="1"/>
    <glyphgroup name="wgrave.sc.ss01" value="1"/>
    <glyphgroup name="wgrave.ss01" value="1"/>
    <glyphgroup name="x" value="3"/>
    <glyphgroup name="x.sc" value="1"/>
    <glyphgroup name="y" value="3"/>
    <glyphgroup name="y.sc" value="1"/>
    <glyphgroup name="y.sc.ss01" value="3"/>
    <glyphgroup name="y.ss01" value="1"/>
    <glyphgroup name="yacute" value="3"/>
    <glyphgroup name="yacute.sc" value="1"/>
    <glyphgroup name="yacute.sc.ss01" value="1"/>
    <glyphgroup name="yacute.ss01" value="1"/>
    <glyphgroup name="ycircumflex" value="3"/>
    <glyphgroup name="ycircumflex.sc" value="1"/>
    <glyphgroup name="ycircumflex.sc.ss01" value="1"/>
    <glyphgroup name="ycircumflex.ss01" value="1"/>
    <glyphgroup name="ydieresis" value="3"/>
    <glyphgroup name="ydieresis.sc" value="1"/>
    <glyphgroup name="ydieresis.sc.ss01" value="1"/>
    <glyphgroup name="ydieresis.ss01" value="1"/>
    <glyphgroup name="yen" value="4"/>
    <glyphgroup name="ygrave" value="3"/>
    <glyphgroup name="ygrave.sc" value="1"/>
    <glyphgroup name="ygrave.sc.ss01" value="1"/>
    <glyphgroup name="ygrave.ss01" value="1"/>
    <glyphgroup name="z" value="3"/>
    <glyphgroup name="z.sc" value="1"/>
    <glyphgroup name="z.sc.ss01" value="1"/>
    <glyphgroup name="z.ss01" value="1"/>
    <glyphgroup name="zacute" value="3"/>
    <glyphgroup name="zacute.sc" value="1"/>
    <glyphgroup name="zacute.sc.ss01" value="1"/>
    <glyphgroup name="zacute.ss01" value="1"/>
    <glyphgroup name="zcaron" value="3"/>
    <glyphgroup name="zcaron.sc" value="1"/>
    <glyphgroup name="zcaron.sc.ss01" value="1"/>
    <glyphgroup name="zcaron.ss01" value="1"/>
    <glyphgroup name="zdotaccent" value="3"/>
    <glyphgroup name="zdotaccent.sc" value="1"/>
    <glyphgroup name="zdotaccent.sc.ss01" value="1"/>
    <glyphgroup name="zdotaccent.ss01" value="1"/>
    <glyphgroup name="zero" value="4"/>
    <glyphgroup name="zero.dnom" value="4"/>
    <glyphgroup name="zero.numr" value="1"/>
    <glyphgroup name="zero.osf" value="1"/>
    <glyphgroup name="zero.sinf" value="1"/>
    <glyphgroup name="zero.subs" value="1"/>
    <glyphgroup name="zero.sups" value="1"/>
    <glyphgroup name="zero.tf" value="1"/>
    <glyphgroup name="zero.tosf" value="1"/>
  </TSI5>

  <maxp>
    <!-- Most of this table will be recalculated by the compiler -->
    <tableVersion value="0x10000"/>
    <numGlyphs value="1967"/>
    <maxPoints value="89"/>
    <maxContours value="7"/>
    <maxCompositePoints value="89"/>
    <maxCompositeContours value="9"/>
    <maxZones value="2"/>
    <maxTwilightPoints value="16"/>
    <maxStorage value="47"/>
    <maxFunctionDefs value="154"/>
    <maxInstructionDefs value="0"/>
    <maxStackElements value="515"/>
    <maxSizeOfInstructions value="3971"/>
    <maxComponentElements value="3"/>
    <maxComponentDepth value="3"/>
  </maxp>

  <TSIC>
    <Version value="0x00010001"/>
    <Flags value="0"/>
    <!-- AxisCount=1 -->
    <!-- RecordCount=1 -->
    <Reserved value="0"/>
    <AxisArray index="0" value="wght"/>
    <RecordLocations index="0">
      <Axis index="0" value="1.0"/>
    </RecordLocations>
    <Record index="0">
      <Flags value="0"/>
      <NumCVTEntries value="6"/>
      <NameLength value="0"/>
      <CVTArray index="0" value="3"/>
      <CVTArray index="1" value="6"/>
      <CVTArray index="2" value="7"/>
      <CVTArray index="3" value="9"/>
      <CVTArray index="4" value="11"/>
      <CVTArray index="5" value="58"/>
      <CVTValueArray index="0" value="10"/>
      <CVTValueArray index="1" value="550"/>
      <CVTValueArray index="2" value="10"/>
      <CVTValueArray index="3" value="-10"/>
      <CVTValueArray index="4" value="-10"/>
      <CVTValueArray index="5" value="606"/>
    </Record>
  </TSIC>

  <cvt>
    <cv index="0" value="742"/>
    <cv index="1" value="3"/>
    <cv index="2" value="700"/>
    <cv index="3" value="3"/>
    <cv index="4" value="700"/>
    <cv index="5" value="3"/>
    <cv index="6" value="546"/>
    <cv index="7" value="3"/>
    <cv index="8" value="0"/>
    <cv index="9" value="-3"/>
    <cv index="10" value="0"/>
    <cv index="11" value="-3"/>
    <cv index="12" value="0"/>
    <cv index="13" value="-3"/>
    <cv index="14" value="-194"/>
    <cv index="15" value="-3"/>
    <cv index="16" value="700"/>
    <cv index="17" value="3"/>
    <cv index="18" value="0"/>
    <cv index="19" value="-3"/>
    <cv index="20" value="0"/>
    <cv index="21" value="20"/>
    <cv index="22" value="20"/>
    <cv index="23" value="19"/>
    <cv index="24" value="19"/>
    <cv index="25" value="20"/>
    <cv index="26" value="19"/>
    <cv index="27" value="19"/>
    <cv index="28" value="20"/>
    <cv index="29" value="19"/>
    <cv index="30" value="20"/>
    <cv index="31" value="20"/>
    <cv index="32" value="19"/>
    <cv index="33" value="20"/>
    <cv index="34" value="20"/>
    <cv index="35" value="19"/>
    <cv index="36" value="19"/>
    <cv index="37" value="20"/>
    <cv index="38" value="19"/>
    <cv index="39" value="19"/>
    <cv index="40" value="20"/>
    <cv index="41" value="13"/>
    <cv index="42" value="19"/>
    <cv index="43" value="15"/>
    <cv index="44" value="20"/>
    <cv index="45" value="20"/>
    <cv index="46" value="19"/>
    <cv index="47" value="17"/>
    <cv index="48" value="20"/>
    <cv index="49" value="20"/>
    <cv index="50" value="19"/>
    <cv index="51" value="19"/>
    <cv index="52" value="14"/>
    <cv index="53" value="18"/>
    <cv index="54" value="20"/>
    <cv index="55" value="19"/>
    <cv index="56" value="19"/>
    <cv index="57" value="24"/>
    <cv index="58" value="560"/>
    <cv index="59" value="600"/>
    <cv index="60" value="5"/>
    <cv index="61" value="425"/>
  </cvt>

  <cvar>
    <version major="1" minor="0"/>
    <tuple>
      <coord axis="wght" value="1.0"/>
      <delta cvt="3" value="7"/>
      <delta cvt="6" value="4"/>
      <delta cvt="7" value="7"/>
      <delta cvt="9" value="-7"/>
      <delta cvt="11" value="-7"/>
      <delta cvt="58" value="46"/>
    </tuple>
  </cvar>

</ttFont>
